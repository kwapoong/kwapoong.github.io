{"version":3,"sources":["webpack:///./src/styles/entry.module.css","webpack:///./src/components/pagination.js","webpack:///./src/styles/archive.module.css","webpack:///./src/styles/pagination.module.css","webpack:///./src/components/entry.js","webpack:///./src/templates/authors.js"],"names":["module","exports","Pagination","nextPath","previousPath","nextLabel","previousLabel","className","style","pagination","to","rel","item","iconPrev","itemText","itemRight","iconNext","require","Entry","title","date","authors","datePretty","path","image","timeToRead","author","excerpt","tags","entry","meta","dateTime","readTime","fluid","childImageSharp","cover","backgroundColor","dangerouslySetInnerHTML","__html","_","postsQuery","Authors","data","pageContext","nextPagePath","previousPagePath","humanPageNumber","numberOfPages","siteAuthor","site","siteMetadata","authorYaml","authorName","name","authorBio","bio","posts","allMarkdownRemark","edges","paginationTitle","metaImage","slugify","description","id","main","heading","length","intro","content","list","map","node","autoExcerpt","frontmatter","date_pretty","key"],"mappings":"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","file":"component---src-templates-authors-js-0c50f3896ded3a409e54.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry\":\"entry-module--entry--22LZB\",\"title\":\"entry-module--title--3Yzff\",\"meta\":\"entry-module--meta--13AY1\",\"excerpt\":\"entry-module--excerpt--1Jg-M\",\"cover\":\"entry-module--cover--uvbo5\",\"grain\":\"entry-module--grain--QUP2_\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport style from '../styles/pagination.module.css'\n\nconst Pagination = ({ nextPath, previousPath, nextLabel, previousLabel }) =>\n  previousPath || nextPath ? (\n    <nav className={style.pagination}>\n      {previousPath ? (\n        <Link to={previousPath} rel=\"prev\" className={style.item}>\n          <span className={style.iconPrev}>←</span>\n          <span className={style.itemText}>{previousLabel}</span>\n        </Link>\n      ) : (\n        <div className={style.item} />\n      )}\n      {nextPath ? (\n        <Link\n          to={nextPath}\n          rel=\"next\"\n          className={`${style.item} ${style.itemRight}`}\n        >\n          <span className={style.itemText}>{nextLabel}</span>\n          <span className={style.iconNext}>→</span>\n        </Link>\n      ) : (\n        <div className={style.item} />\n      )}\n    </nav>\n  ) : null\n\nPagination.propTypes = {\n  nextPath: PropTypes.string,\n  previousPath: PropTypes.string,\n  nextLabel: PropTypes.string,\n  previousLabel: PropTypes.string,\n}\n\nexport default Pagination\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"archive-module--icon--89JmZ\",\"spin\":\"archive-module--spin--14aNj\",\"logo\":\"archive-module--logo--3c8aR\",\"title\":\"archive-module--title--3ZGBp\",\"cover\":\"archive-module--cover--2sv0o\",\"heading\":\"archive-module--heading--GjChR\",\"subHeading\":\"archive-module--subHeading--3rgl2\",\"intro\":\"archive-module--intro--2EflT\",\"grain\":\"archive-module--grain--5gDu8\",\"content\":\"archive-module--content--2dCC9\",\"navList\":\"archive-module--navList--3yIMk\",\"list\":\"archive-module--list--W5ZBJ\",\"gridList\":\"archive-module--gridList--2iz3T\",\"gridListExpanded\":\"archive-module--gridListExpanded--1L2X2\",\"columnList\":\"archive-module--columnList--3dK8g\",\"count\":\"archive-module--count--RREhZ\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination-module--pagination--5u0we\",\"item\":\"pagination-module--item--2FbSP\",\"itemText\":\"pagination-module--itemText--q_ljE\",\"itemRight\":\"pagination-module--itemRight--2XC01\",\"itemLabel\":\"pagination-module--itemLabel--1yC7K\",\"iconNext\":\"pagination-module--iconNext--2kIia\",\"iconPrev\":\"pagination-module--iconPrev--1xG44\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport style from '../styles/entry.module.css'\n\nconst _ = require('lodash-addons')\n\nconst Entry = ({\n  title,\n  authors,\n  date,\n  datePretty,\n  path,\n  image,\n  author,\n  timeToRead,\n  excerpt,\n  tags,\n}) => {\n  return (\n    <>\n      <article className={`${style.entry} h-entry`}>\n        <h2 className={`${style.title} p-name`}>\n          <Link to={path}>{title}</Link>\n        </h2>\n        <div className={style.meta}>\n          {/* {authors ? (\n            <div className={style.authors}>\n              {authors.map(author => (\n                <Link\n                  className={style.author}\n                  to={`/author/${_.slugify(author.id)}/`}\n                  key={_.slugify(author.id)}\n                >\n                  <span>{author.name}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null } */}\n          {date && (\n            <>\n              {' '}\n              <time className={`${style.date} dt-published`} dateTime={date}>\n                {datePretty}\n              </time>\n            </>\n          )}\n          {timeToRead && (\n            <>\n              {' '}\n              <span className={style.readTime}>\n                {timeToRead}&nbsp;min&nbsp;read\n              </span>\n            </>\n          )}\n          {/* {tags ? (\n            <div className={style.tags}>\n              {tags.map(tag => (\n                <Link\n                  className={style.tag}\n                  to={`/tag/${_.slugify(tag)}/`}\n                  key={_.slugify(tag)}\n                >\n                  <span>#{tag}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null} */}\n        </div>\n\n        {image && (\n          <Img\n            fluid={image.childImageSharp.fluid}\n            className={style.cover}\n            backgroundColor=\"var(--input-background-color)\"\n          />\n        )}\n\n        <div\n          className={`${style.excerpt} p-summary`}\n          dangerouslySetInnerHTML={{ __html: excerpt }}\n        />\n      </article>\n    </>\n  )\n}\n\nEntry.propTypes = {\n  title: PropTypes.string,\n  authors: PropTypes.array,\n  date: PropTypes.string,\n  datePretty: PropTypes.string,\n  path: PropTypes.string,\n  image: PropTypes.object,\n  author: PropTypes.object,\n  timeToRead: PropTypes.number,\n  excerpt: PropTypes.string,\n  tags: PropTypes.array,\n}\n\nexport default Entry\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Entry from '../components/entry'\nimport Pagination from '../components/pagination'\n\nimport site from '../../config/site'\n\nimport style from '../styles/archive.module.css'\n\nconst _ = require('lodash-addons')\n\nconst Authors = ({\n  data,\n  pageContext: {\n    nextPagePath,\n    previousPagePath,\n    humanPageNumber,\n    numberOfPages,\n    author,\n  },\n}) => {\n  const {\n    site: {\n      siteMetadata: { author: siteAuthor },\n    },\n    authorYaml: {\n      name: authorName,\n      bio: authorBio,\n    },\n    allMarkdownRemark: { edges: posts },\n  } = data\n  const paginationTitle =\n    humanPageNumber === 1\n      ? ''\n      : ` - Page ${humanPageNumber} of ${numberOfPages}`\n  const metaImage = site.image\n\n  return (\n    <Layout>\n      <SEO\n        title={`${authorName}${paginationTitle} - ${site.title}`}\n        path={`/author/${_.slugify(author)}/`}\n        description={\n          `An archive of posts written by ${authorName}.`\n        }\n        metaImage={metaImage}\n      />\n      <main id=\"main\" className={style.main}>\n        <div className={style.title}>\n          <h1 className={style.heading}>\n            <span>\n              {authorName} {paginationTitle}\n            </span>\n          </h1>\n          <h2>{posts.length}</h2>\n          {authorBio && humanPageNumber === 1 && (\n            <div\n              className={style.intro}\n              dangerouslySetInnerHTML={{ __html: authorBio }}\n            />\n          )}\n        </div>\n        <div className={style.content}>\n          <div className={style.list}>\n            {posts.map(({ node }) => {\n              const {\n                id,\n                excerpt: autoExcerpt,\n                timeToRead,\n                frontmatter: {\n                  title,\n                  date,\n                  date_pretty,\n                  path,\n                  author,\n                  authors,\n                  image,\n                  excerpt,\n                },\n              } = node\n\n              return (\n                <Entry\n                  key={id}\n                  title={title}\n                  date={date}\n                  datePretty={date_pretty}\n                  path={path}\n                  author={author || siteAuthor}\n                  authors={authors}\n                  timeToRead={timeToRead}\n                  image={image}\n                  excerpt={excerpt || autoExcerpt}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </main>\n      <Pagination\n        previousPath={previousPagePath}\n        previousLabel=\"Newer posts\"\n        nextPath={nextPagePath}\n        nextLabel=\"Older posts\"\n      />\n    </Layout>\n  )\n}\n\nAuthors.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    author: PropTypes.string,\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n    humanPageNumber: PropTypes.number,\n    numberOfPages: PropTypes.number,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!, $author: String!) {\n    site {\n      siteMetadata {\n        author {\n          name\n          url\n        }\n      }\n    }\n    authorYaml(id: { eq: $author }) {\n      id\n      name\n      bio\n      website\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          authors: {\n            elemMatch: {\n              id: { eq: $author }\n            }\n          }\n          published: { ne: false }\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          excerpt(format: HTML)\n          timeToRead\n          frontmatter {\n            title\n            date\n            date_pretty: date(formatString: \"MMMM Do, YYYY\")\n            date_from_now: date(fromNow: true)\n            path\n            author\n            excerpt\n            image {\n              childImageSharp {\n                fluid(maxWidth: 760, quality: 75) {\n                  ...GatsbyImageSharpFluid_noBase64\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Authors\n"],"sourceRoot":""}