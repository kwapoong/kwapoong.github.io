{"componentChunkName":"component---src-templates-post-js","path":"/articles/using-jekyll-2017/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"How I'm using Jekyll in 2017","date":"2017-08-30T00:00:00.000Z","date_pretty":"August 30th, 2017","date_from_now":"3 years ago","last_modified_at":"2019-12-08T15:40:38.000Z","last_modified_at_from_now":"7 months ago","path":"/articles/using-jekyll-2017/","author":null,"excerpt":"Lessons learned from building, optimizing, and deploying a huge static site powered by everyone's favorite SSG — Jekyll.","tags":["Jekyll","web development","GitHub","open source","tutorial"],"image":{"childImageSharp":{"fluid":{"aspectRatio":1.7741935483870968,"src":"/static/bb06d9639778ce3db80e380aa614566e/fc20c/using-jekyll-2017-feature.jpg","srcSet":"/static/bb06d9639778ce3db80e380aa614566e/6e883/using-jekyll-2017-feature.jpg 275w,\n/static/bb06d9639778ce3db80e380aa614566e/a09ef/using-jekyll-2017-feature.jpg 550w,\n/static/bb06d9639778ce3db80e380aa614566e/fc20c/using-jekyll-2017-feature.jpg 1100w,\n/static/bb06d9639778ce3db80e380aa614566e/9352a/using-jekyll-2017-feature.jpg 1600w","sizes":"(max-width: 1100px) 100vw, 1100px"},"fixed":{"src":"/static/bb06d9639778ce3db80e380aa614566e/fc20c/using-jekyll-2017-feature.jpg","height":619,"width":1100}}},"toc":true,"comments":true,"comments_locked":true,"hide_meta":null},"id":"fb7f6734-66e5-5210-97d2-cadefc1806aa","html":"<p>Not going to lie — I love <a href=\"/tag/jekyll/\">Jekyll</a>, but huge static sites like mine take forever to build. What used to take seconds now go on for over 30 minutes, as thousands of files are generated and optimized.</p>\n<p>Inspired by Anne Tomasevich’s post, <a href=\"http://savaslabs.com/2016/10/19/optimizing-jekyll-with-gulp.html\"><strong>Optimizing Jekyll Performance with Gulp</strong></a> — I begun digging into my build process to identify performance bottlenecks.</p>\n<p>At the time of writing this post, my site contained roughly:</p>\n<ul>\n<li>1,028 images generated at different sizes (5,140 in total).</li>\n<li>1,052 total documents (<a href=\"https://github.com/mmistakes/made-mistakes-jekyll/tree/master/src/_posts\">991 posts</a> / <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/tree/master/src/_pages\">14 pages</a> / 3 sets of collections).</li>\n<li><a href=\"https://github.com/mmistakes/made-mistakes-jekyll/tree/master/src/_data/comments\">535 comments</a> stored as YAML data files.</li>\n</ul>\n<p>And was built with the following Jekyll plugins: <a href=\"https://github.com/robwierzbowski/jekyll-picture-tag\">jekyll-picture-tag</a>, <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/master/src/_plugins/sort_name.rb\">sort_name</a>, <a href=\"https://github.com/jekyll/jekyll-archives\">jekyll-archives</a>, <a href=\"https://github.com/jekyll/jekyll-assets\">jekyll-assets</a>, <a href=\"https://github.com/pattex/jekyll-tagging\">jekyll/tagging</a>, <a href=\"https://github.com/toshimaru/jekyll-tagging-related_posts\">jekyll-tagging-related_posts</a>, <a href=\"https://github.com/jekyll/jekyll-sitemap\">jekyll-sitemap</a>, <a href=\"https://github.com/jekyll/jemoji\">jemoji</a>, <a href=\"http://ajclarkson.co.uk/blog/jekyll-category-post-navigation/\">jekyll-category-post-navigation</a>, and <a href=\"https://github.com/myles/jekyll-typogrify\">jekyll-typogrify</a>.</p>\n<p>Using Jekyll’s profiler flag <code class=\"language-text\">--profile</code>, I measured how long the following tasks took to complete<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup>. Before each build I ran <code class=\"language-text\">jekyll clean</code> to wipe <code class=\"language-text\">_site</code>, <code class=\"language-text\">.asset-cache</code> and any other temporary files to keep results more consistent. </p>\n<table>\n<thead>\n<tr>\n<th>Task description</th>\n<th align=\"right\">Windows</th>\n<th align=\"right\">Mac</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Generate responsively sized <code class=\"language-text\">page.image.feature</code> images</td>\n<td align=\"right\">1288.29s</td>\n<td align=\"right\">1429.26s</td>\n</tr>\n<tr>\n<td>Minify HTML with <code class=\"language-text\">layout: compress</code></td>\n<td align=\"right\">39.35s</td>\n<td align=\"right\">11.18s</td>\n</tr>\n<tr>\n<td>Read <code class=\"language-text\">/images/</code> and copy to <code class=\"language-text\">_site/</code></td>\n<td align=\"right\">32.39s</td>\n<td align=\"right\">23.63s</td>\n</tr>\n<tr>\n<td>Build tag pages with jekyll-archives</td>\n<td align=\"right\">17.40s</td>\n<td align=\"right\">9.99s</td>\n</tr>\n<tr>\n<td>Build tag index page with <code class=\"language-text\">sort_tag</code> filter</td>\n<td align=\"right\">2.62s</td>\n<td align=\"right\">0.59s</td>\n</tr>\n<tr>\n<td>List related posts with <a href=\"https://github.com/toshimaru/jekyll-tagging-related_posts\">jekyll-tagging-related_posts</a>, <a href=\"https://github.com/pattex/jekyll-tagging\">jekyll/tagging</a>, and <code class=\"language-text\">LSI: true</code></td>\n<td align=\"right\">38.36s</td>\n<td align=\"right\">17.87s</td>\n</tr>\n<tr>\n<td>List related posts with vanilla <code class=\"language-text\">related_posts</code></td>\n<td align=\"right\">1.65s</td>\n<td align=\"right\">4.90s</td>\n</tr>\n<tr>\n<td>Preprocess, concatenate, minify, and cache bust <abbr title=\"Sassy CSS\">SCSS</abbr> and JS with <a href=\"https://github.com/jekyll/jekyll-assets\">jekyll-assets</a></td>\n<td align=\"right\">78.75s</td>\n<td align=\"right\">25.03s</td>\n</tr>\n<tr>\n<td>Display masthead and overlay menu from <code class=\"language-text\">_data</code></td>\n<td align=\"right\">9.66s</td>\n<td align=\"right\">7.82s</td>\n</tr>\n<tr>\n<td>List post comments from <code class=\"language-text\">_data</code></td>\n<td align=\"right\">7.10s</td>\n<td align=\"right\">2.22s</td>\n</tr>\n<tr>\n<td>Display colophon from <code class=\"language-text\">_data</code></td>\n<td align=\"right\">0.20s</td>\n<td align=\"right\">0.49s</td>\n</tr>\n<tr>\n<td>List post taxonomy metadata</td>\n<td align=\"right\">3.48s</td>\n<td align=\"right\">1.18s</td>\n</tr>\n<tr>\n<td>List post breadcrumb links</td>\n<td align=\"right\">2.83s</td>\n<td align=\"right\">1.03s</td>\n</tr>\n<tr>\n<td>List featured posts</td>\n<td align=\"right\">0.20s</td>\n<td align=\"right\">0.44s</td>\n</tr>\n<tr>\n<td>Build style guide collection</td>\n<td align=\"right\">1.16s</td>\n<td align=\"right\">0.31s</td>\n</tr>\n<tr>\n<td>List post social sharing links</td>\n<td align=\"right\">5.09s</td>\n<td align=\"right\">0.97s</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Is Jekyll faster on macOs or Windows?</strong></p>\n<p>For giggles I also tested my Windows and Mac development environments against each other. While not exactly an apples to apples comparison I thought it would be interesting to note any variations.</p>\n<table>\n<thead>\n<tr>\n<th>Windows Environment</th>\n<th>Mac Environment</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Lenovo ThinkStation E30</td>\n<td>iMac 21.5-inch, Late 2013</td>\n</tr>\n<tr>\n<td>Processor 3.30 GHz Intel Xeon E31245</td>\n<td>Processor 2.7 GHz Intel Core i5</td>\n</tr>\n<tr>\n<td>Memory 16 GB</td>\n<td>Memory 16 GB 1600 MHz DDR3</td>\n</tr>\n<tr>\n<td>Intel SSDSA2BW160G3L 137GB</td>\n<td>1.12 TB Fusion Drive</td>\n</tr>\n<tr>\n<td>Windows 7 Professional Service Pack 1</td>\n<td>OS X El Capitan 10.11.6</td>\n</tr>\n<tr>\n<td>ruby 2.2.4p230 [x64-mingw32]</td>\n<td>ruby 2.1.0p0 (2013-12-25 revision 44422) [x86_64-darwin12.0]</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"optimization\" style=\"position:relative;\"><a href=\"#optimization\" aria-label=\"optimization permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Optimization</h2>\n<p>The numbers above don’t lie. Relying on Jekyll and friends to do jobs more suited for a task runner like <a href=\"http://gulpjs.com/\"><strong>Gulp</strong></a> was slowing the build. Armed with this knowledge I started stripping down Jekyll to one of its core purposes — <em>converting Markdown files into HTML</em>.</p>\n<p>Doing this also allowed me to make my site’s content more portable and not as reliant on a specific static-site generator. In the off-chance I wanted to swap Jekyll for another <abbr title=\"Static-site generator\">SSG</abbr> like <a href=\"https://gohugo.io/\"><strong>Hugo</strong></a> or <a href=\"https://github.com/gatsbyjs/gatsby\"><strong>Gatsby</strong></a>, I could.</p>\n<h3 id=\"css-and-javascript-assets\" style=\"position:relative;\"><a href=\"#css-and-javascript-assets\" aria-label=\"css and javascript assets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>CSS and JavaScript assets</h3>\n<p><a href=\"https://github.com/jekyll/jekyll-assets\"><strong>Jekyll Assets</strong></a> is a great plugin that served me well for a long time by: preprocessing, vendor prefixing, concatenating, minifying, and fingerprinting assets. But with a site of my size it was painfully slow to iterate with during front-end development.</p>\n<p>Making a change to a Sass partial would trigger a full site rebuild, which meant waiting a few minutes before it could be previewed in a browser. Jekyll’s incremental build feature might have helped here, but I never had much luck getting it to work reliably.</p>\n<p>During development CSS or JavaScript changes would ideally be pushed instantly to the browser with something like <a href=\"https://www.browsersync.io/\">Browsersync</a>. By replacing <a href=\"https://github.com/jekyll/jekyll-assets\">Jekyll Assets</a> with the following Gulp alternatives I was able to do this, and improve build times by 93%:</p>\n<ul>\n<li><a href=\"https://github.com/sass/node-sass\"><strong>node-sass</strong></a> and <a href=\"https://github.com/dlmanning/gulp-sass\"><strong>gulp-sass</strong></a>: natively compile <abbr title=\"Sassy CSS\">SCSS</abbr> files to CSS.</li>\n<li><a href=\"https://github.com/sindresorhus/gulp-autoprefixer\"><strong>gulp-autoprefixer</strong></a>: vendor prefix CSS.</li>\n<li><a href=\"https://github.com/ben-eb/gulp-cssnano\"><strong>gulp-cssnano</strong></a>: minify CSS.</li>\n<li><a href=\"https://github.com/contra/gulp-concat\"><strong>gulp-concat</strong></a>: concatenate JavaScript.</li>\n<li><a href=\"https://github.com/terinjokes/gulp-uglify\"><strong>gulp-uglify</strong></a>: minify JavaScript with <a href=\"https://www.npmjs.com/package/uglifyjs\">UglifyJS</a>.</li>\n<li><a href=\"https://github.com/gulp-sourcemaps/gulp-sourcemaps\"><strong>gulp-sourcemaps</strong></a>: add source maps for CSS and JS.</li>\n<li><a href=\"https://github.com/jstuckey/gulp-gzip\"><strong>gulp-gzip</strong></a>: gzip CSS and JS.</li>\n<li><a href=\"https://github.com/sindresorhus/gulp-rev\"><strong>gulp-rev</strong></a>: append hash to CSS and JS filenames for cache busting.</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>Task description</th>\n<th>Jekyll Assets</th>\n<th>Gulp</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CSS and JavaScript asset pipeline</td>\n<td>25.031s</td>\n<td>1.577s</td>\n</tr>\n</tbody>\n</table>\n<p>Here’s a small taste of the <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/master/gulp/tasks/assets.js\">Gulp file</a> I’m using for the site’s styles if you’re curious:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 'gulp styles' -- creates a CSS file from SCSS, adds prefixes and creates a Sourcemap</span>\n<span class=\"token comment\">// 'gulp styles --prod' -- creates a CSS file from your SCSS, adds prefixes,</span>\n<span class=\"token comment\">//   minifies, and cache busts it (does not create a Sourcemap)</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'styles'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">.</span>sassFiles <span class=\"token operator\">+</span> <span class=\"token string\">'/main.scss'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> sourcemaps<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// preprocess Sass</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">sass</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>precision<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">on</span><span class=\"token punctuation\">(</span><span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> sass<span class=\"token punctuation\">.</span>logError<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">postcss</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>\n      <span class=\"token comment\">// add vendor prefixes</span>\n      <span class=\"token function\">autoprefixer</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n        browsers<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>\n          <span class=\"token string\">'last 2 versions'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'> 5%'</span><span class=\"token punctuation\">,</span>\n          <span class=\"token string\">'IE 9'</span>\n        <span class=\"token punctuation\">]</span>\n      <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// minify for production</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token string\">'*.css'</span><span class=\"token punctuation\">,</span> <span class=\"token function\">cssnano</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>autoprefixer<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>showFiles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// output sourcemap for development</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> sourcemaps<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>sassFilesTemp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// hash CSS for production</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">rev</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>showFiles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// output hashed files</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>sassFilesTemp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token comment\">// generate manifest of hashed CSS files</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>rev<span class=\"token punctuation\">.</span><span class=\"token function\">manifest</span><span class=\"token punctuation\">(</span><span class=\"token string\">'css-manifest.json'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span>gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>tempDir <span class=\"token operator\">+</span> paths<span class=\"token punctuation\">.</span>sourceDir <span class=\"token operator\">+</span> paths<span class=\"token punctuation\">.</span>dataFolderName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>showFiles<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> browserSync<span class=\"token punctuation\">.</span><span class=\"token function\">stream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// function to properly reload your browser</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  browserSync<span class=\"token punctuation\">.</span><span class=\"token function\">reload</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token comment\">// 'gulp serve' -- open site in browser and watch for changes</span>\n<span class=\"token comment\">//   in source files and update them when needed</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'serve'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">done</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  browserSync<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// tunnel: true,</span>\n    <span class=\"token comment\">// open: false,</span>\n    port<span class=\"token operator\">:</span> <span class=\"token number\">4000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// change port to match default Jekyll</span>\n    ui<span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n      port<span class=\"token operator\">:</span> <span class=\"token number\">4001</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    server<span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span>paths<span class=\"token punctuation\">.</span>tempFolderName<span class=\"token punctuation\">,</span> paths<span class=\"token punctuation\">.</span>siteFolderName<span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token function\">done</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token comment\">// watch various files for changes</span>\n  gulp<span class=\"token punctuation\">.</span><span class=\"token function\">watch</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>sassFilesGlob<span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">series</span><span class=\"token punctuation\">(</span><span class=\"token string\">'styles'</span><span class=\"token punctuation\">,</span> reload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>Without going too deep into how these Gulp tasks work, the gist is:</p>\n<ol>\n<li>A glob of files have “stuff” done to them using various plugins.</li>\n<li>These files are placed in a temporary folder excluded from Jekyll so they don’t trigger a full site rebuild during development.</li>\n<li>Production builds move these temporary files and deploys them alongside the HTML files generated by Jekyll.</li>\n</ol>\n<h3 id=\"image-assets\" style=\"position:relative;\"><a href=\"#image-assets\" aria-label=\"image assets permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Image assets</h3>\n<p>Resizing a thousand or so images to serve them responsively is no joke — taking over 20 minutes to complete in my site’s case. Up until now I was using the <a href=\"https://github.com/robwierzbowski/jekyll-picture-tag\">Jekyll Picture Tag</a> plugin to do this work for me… which wasn’t ideal.</p>\n<p>To try and see if <a href=\"https://nodejs.org/en/\">Node</a> and <a href=\"http://gulpjs.com/\">Gulp</a> could do this faster I came up with a set of Gulp tasks to:</p>\n<ol>\n<li>Generate thousands of “feature” images<sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup> at 4 different sizes with <a href=\"https://github.com/mahnunchik/gulp-responsive\"><strong>gulp-responsive</strong></a>.</li>\n<li>Optimize all images using <a href=\"https://github.com/sindresorhus/gulp-imagemin\"><strong>gulp-imagemin</strong></a>.</li>\n<li>Save the optimized images directly to the destination folder — bypassing Jekyll and a full-site rebuild.</li>\n</ol>\n<p>This helped some, but it wasn’t until I <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/commit/56bbd9bf5429a269047a41e045cc2ef0bf34e62b\">dropped GraphicsMagick</a> for <a href=\"https://github.com/lovell/sharp\">Sharp</a><sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup> did I see a noticeable improvement…</p>\n<h4 id=\"sharp-really-is-as-fast-as-they-say\" style=\"position:relative;\"><a href=\"#sharp-really-is-as-fast-as-they-say\" aria-label=\"sharp really is as fast as they say permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Sharp really is as fast as they say</h4>\n<p>I shaved 18 minutes off my build time using this high speed <a href=\"https://nodejs.org/en/\">Node.js</a> module!</p>\n<table>\n<thead>\n<tr>\n<th>Task description</th>\n<th>Graphics Magick</th>\n<th>Sharp</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Resize and optimize 1,014 source images into 5 target sizes</td>\n<td>1288.29s</td>\n<td>171.00s</td>\n</tr>\n</tbody>\n</table>\n<p>The other missing piece was generating the necessary markup for responsive images<sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup>. Because I was no longer using the <code class=\"language-text\">{% picture %}</code> tag to output a fully formed <a href=\"https://cloudfour.com/thinks/dont-use-picture-most-of-the-time/\"><code class=\"language-text\">&lt;picture&gt;</code> element</a>, I had to roll my own responsive image markup. </p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> page.image.feature <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> f <span class=\"token operator\">=</span> page.image.feature <span class=\"token operator\">|</span> <span class=\"token function\">split</span><span class=\"token operator\">:</span> '.' <span class=\"token operator\">%</span>}\n  <span class=\"token operator\">&lt;</span>img src<span class=\"token operator\">=</span>\"{{ f[<span class=\"token number\">0</span>] <span class=\"token operator\">|</span> relative_url }}<span class=\"token operator\">-</span><span class=\"token number\">320.</span>{{ f[<span class=\"token number\">1</span>] }}\"\n       srcset<span class=\"token operator\">=</span>\"{{ f[<span class=\"token number\">0</span>] <span class=\"token operator\">|</span> relative_url }}<span class=\"token operator\">-</span><span class=\"token number\">768.</span>{{ f[<span class=\"token number\">1</span>] }} <span class=\"token number\">768</span>w,\n               {{ f[<span class=\"token number\">0</span>] <span class=\"token operator\">|</span> relative_url }}<span class=\"token operator\">-</span><span class=\"token number\">1024.</span>{{ f[<span class=\"token number\">1</span>] }} <span class=\"token number\">1024</span>w,\n               {{ f[<span class=\"token number\">0</span>] <span class=\"token operator\">|</span> relative_url }}.{{ f[<span class=\"token number\">1</span>] }} <span class=\"token number\">1920</span>w\"\n       alt<span class=\"token operator\">=</span>\"{{ page.title }}\"<span class=\"token operator\">></span>\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<p>This bit of Liquid takes the filename as defined by <code class=\"language-text\">page.image.feature</code>, splits it at the extension, appends suffixes that match those used in the gulp-responsive task, and adds them to the <code class=\"language-text\">srcset</code> attribute. Boom, resolution switching images!</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Liquid Limitations</div><div class=\"custom-block-body\"><p>This Gulp + Liquid hybrid isn’t as nice as a plugin since there is no logic to actually verify if <code class=\"language-text\">-lq</code>, <code class=\"language-text\">-320</code>, <code class=\"language-text\">-768</code>, or <code class=\"language-text\">-1024</code> versions of the images exist. I’m willing to overlook that since it did shave 16 minutes off my build time.</p></div></div>\n<h3 id=\"simplify-layouts\" style=\"position:relative;\"><a href=\"#simplify-layouts\" aria-label=\"simplify layouts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simplify layouts</h3>\n<p>With the bulk of the time savings coming from faster image resizing tasks, I went after some low-hanging fruit next by <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/issues/81\">decluttering my layouts</a>. Anything that detracted from the main content or added visual noise to the page was fair game for removal.</p>\n<h4 id=\"remove-social-sharing-module\" style=\"position:relative;\"><a href=\"#remove-social-sharing-module\" aria-label=\"remove social sharing module permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Remove social sharing module</h4>\n<p>Including buttons at the bottom (or top of post) didn’t really boost shares of my content on Twitter or Facebook — so I dropped them. If someone really wants to share it on social media they’ll use the builtin methods of iOS/Android or do it the old fashioned way of copy-pasting a URL.</p>\n<h4 id=\"replace-layout-compress\" style=\"position:relative;\"><a href=\"#replace-layout-compress\" aria-label=\"replace layout compress permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Replace <code class=\"language-text\">layout: compress</code></h4>\n<p>Occasionally things on the site would break if inline JavaScript with <code class=\"language-text\">//</code> styled comments were used. This happened because of a complex set of Liquid filters used in my <a href=\"http://jch.penibelst.de/\"><code class=\"language-text\">compress</code> layout</a> to reduce whitespace in the generated HTML.</p>\n<p>The fix was easy, just surround inline JavaScript comments with <code class=\"language-text\">/* */</code> instead. Or do what I did, stop using <code class=\"language-text\">layout: compress</code> and minify with these Gulp plugins instead: <a href=\"https://github.com/jonschlinkert/gulp-htmlmin\"><strong>gulp-htmlmin</strong></a> and <a href=\"https://github.com/jstuckey/gulp-gzip\"><strong>gulp-gzip</strong></a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token comment\">// 'gulp html' -- does nothing</span>\n<span class=\"token comment\">// 'gulp html --prod' -- minifies and gzips HTML files for production</span>\ngulp<span class=\"token punctuation\">.</span><span class=\"token function\">task</span><span class=\"token punctuation\">(</span><span class=\"token string\">'html'</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">src</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>siteFolderName <span class=\"token operator\">+</span> paths<span class=\"token punctuation\">.</span>htmlPattern<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">htmlmin</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      removeComments<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      collapseWhitespace<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      collapseBooleanAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      removeAttributeQuotes<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      removeRedundantAttributes<span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span>\n      minifyJS<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n      minifyCSS<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>title<span class=\"token operator\">:</span> <span class=\"token string\">'optimized HTML'</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>siteFolderName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">gzip</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>append<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> <span class=\"token function\">size</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span>\n      title<span class=\"token operator\">:</span> <span class=\"token string\">'gzipped HTML'</span><span class=\"token punctuation\">,</span>\n      gzip<span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">pipe</span><span class=\"token punctuation\">(</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>argv<span class=\"token punctuation\">.</span>prod<span class=\"token punctuation\">,</span> gulp<span class=\"token punctuation\">.</span><span class=\"token function\">dest</span><span class=\"token punctuation\">(</span>paths<span class=\"token punctuation\">.</span>siteFolderName<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<h5 id=\"minifying-html-with-gulp\" style=\"position:relative;\"><a href=\"#minifying-html-with-gulp\" aria-label=\"minifying html with gulp permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Minifying HTML with Gulp</h5>\n<p>In my tests, replacing <a href=\"http://jch.penibelst.de/\"><code class=\"language-text\">_layouts/compress.html</code></a> with Gulp tasks to minify and gzip every HTML file ended up being slightly slower.</p>\n<table>\n<thead>\n<tr>\n<th>Task description</th>\n<th>compress layout</th>\n<th>gulp-html and gulp-gzip</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Minify HTML files</td>\n<td>39.348s</td>\n<td>47.00s</td>\n</tr>\n</tbody>\n</table>\n<p>I’m willing to live with the extra 8 seconds of build time as it helps avoid potential site breakages due to badly minified scripts…</p>\n<h4 id=\"reduce-and-replace-javascript\" style=\"position:relative;\"><a href=\"#reduce-and-replace-javascript\" aria-label=\"reduce and replace javascript permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Reduce and replace JavaScript</h4>\n<p>I’m close to ditching jQuery and going vanilla, but I’m not quite there yet. Where possible I’ve ditched jQuery plugins and <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/issues/84\">replaced with “lighter” alternatives</a>. Here’s a few highlights:</p>\n<ul>\n<li>Replaced <a href=\"https://github.com/dimsemenov/Magnific-Popup\"><strong>Magnific Popup</strong></a> with <a href=\"http://sorgalla.com/lity/\"><strong>Lity</strong></a>.</li>\n<li>Replaced <a href=\"https://github.com/verlok/lazyload\"><strong>Lazyload</strong></a> with <a href=\"https://github.com/aFarkas/lazysizes\"><strong>Lazysizes</strong></a> + <a href=\"https://github.com/aFarkas/lazysizes/tree/gh-pages/plugins/respimg\">Lazysizes responsive images polyfill extension</a>.</li>\n<li>Added <a href=\"https://github.com/jonathantneal/svg4everybody\"><strong>SVG 4 Everybody</strong></a> for external SVG spritemap support.</li>\n<li>Replaced <a href=\"http://fitvidsjs.com/\"><strong>FitVids.JS</strong></a> with responsive embed CSS and a custom Jekyll <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/master/src/_plugins/video_embed.rb\">video embed tag</a>.</li>\n</ul>\n<h3 id=\"results\" style=\"position:relative;\"><a href=\"#results\" aria-label=\"results permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Results</h3>\n<p>Decoupling the asset pipeline from Jekyll and Gulp-ifying it made the biggest splash in terms of build time. Along with <a href=\"https://www.browsersync.io/\">Browsersync</a>, any asset (CSS, JavaScript, images and icons) updates could be previewed almost instantly. Greatly speeding up the time it takes to develop and iterate the site’s front-end.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Made Mistakes Gulp files</div><div class=\"custom-block-body\"><p>This set of Gulp tasks were heavily inspired by those in Sondre Nilsen’s <a href=\"https://github.com/sondr3/generator-jekyllized\"><strong>Jekyllized Yeoman generator</strong></a>. The main <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/master/gulpfile.js\"><code class=\"language-text\">gulpfile.js</code></a> is broken down into <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/tree/master/gulp/tasks\">smaller bits</a>: assets, build, clean, copy, html, images, and uploading.</p><p>With <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/master/gulp/paths.js\"><code class=\"language-text\">paths.js</code></a> assigning all of the various paths used throughout the files to <abbr title=\"Don&#x27;t Repeat Yourself is a principle of software development, aimed at reducing repetition of information of all kinds, especially useful in multi-tier architectures.\">DRY</abbr> things up.</p></div></div>\n<h2 id=\"automation--continuous-integration\" style=\"position:relative;\"><a href=\"#automation--continuous-integration\" aria-label=\"automation  continuous integration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Automation &#x26; Continuous Integration</h2>\n<p>After ditching Disqus last year to <a href=\"/articles/jekyll-static-comments/\">roll my own static-based solution</a> powered by <a href=\"https://staticman.net/\"><strong>Staticman</strong></a>, I needed to find a better way of deploying the site. Merging in new comments, pulling those commits down, manually building the site locally, and then deploying to my web server wasn’t ideal.</p>\n<p>With some research I determined a continuous integration<sup id=\"fnref-5\"><a href=\"#fn-5\" class=\"footnote-ref\">5</a></sup> platform like <strong>Travis CI</strong><sup id=\"fnref-6\"><a href=\"#fn-6\" class=\"footnote-ref\">6</a></sup> that integrates with GitHub was what I needed.</p>\n<div class=\"browser-frame\">\n  <span class=\"gatsby-resp-image-wrapper\" style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 1024px;\">\n      <span class=\"gatsby-resp-image-background-image\" style=\"padding-bottom: 65.81818181818181%; position: relative; bottom: 0; left: 0; display: block;\"></span>\n  <img class=\"gatsby-resp-image-image lazyload\" alt=\"Travis CI interface screenshot\" title=\"Travis CI interface screenshot\" data-src=\"/static/43815fde7cd62e91d444d8ae29d6e47d/2faef/mm-travis-ci-screenshot.png\" data-srcset=\"/static/43815fde7cd62e91d444d8ae29d6e47d/39133/mm-travis-ci-screenshot.png 275w,\n/static/43815fde7cd62e91d444d8ae29d6e47d/50322/mm-travis-ci-screenshot.png 550w,\n/static/43815fde7cd62e91d444d8ae29d6e47d/2faef/mm-travis-ci-screenshot.png 1024w\" sizes=\"(max-width: 1024px) 100vw, 1024px\" style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\" loading=\"lazy\">\n    </span>\n</div>\n<p>Setting things up with Travis CI wasn’t too painful, but there was some trial and error getting dependencies squared away. I’d suggest reading through <a href=\"https://docs.travis-ci.com/\">their documentation</a>, but the basic idea is:</p>\n<ol>\n<li><a href=\"https://travis-ci.org/auth\">Sign in to Travis CI</a> with your GitHub account and grant it access.</li>\n<li>Configure the build and deployment scripts with a <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/aaf88a5223e757eba1e19ee52d0b55dbd0a8328c/.travis.yml\"><code class=\"language-text\">.travis.yml</code></a> file.</li>\n<li>Set the type of triggers<sup id=\"fnref-7\"><a href=\"#fn-7\" class=\"footnote-ref\">7</a></sup> that initiate a build.</li>\n</ol>\n<h3 id=\"travis-ci-configuration\" style=\"position:relative;\"><a href=\"#travis-ci-configuration\" aria-label=\"travis ci configuration permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Travis CI configuration</h3>\n<p>Let’s take a closer look my <code class=\"language-text\">.travis.yml</code> config file and how I’ve set it up.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">language</span><span class=\"token punctuation\">:</span> ruby\n<span class=\"token key atrule\">rvm</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token number\">2.2</span></code></pre></div>\n<p>Since Jekyll is built on Ruby I set the language to <code class=\"language-text\">ruby</code>. Depending on what version of Jekyll you’re using you can change <code class=\"language-text\">rvm</code> to meet your needs. I went with <code class=\"language-text\">2.2</code> since that’s the latest <a href=\"https://docs.travis-ci.com/user/languages/ruby/#Supported-Ruby-Versions-and-RVM\">Travis CI provides</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">sudo</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>This enables quicker build start times using the new <a href=\"https://docs.travis-ci.com/user/migrating-from-legacy/\">container-based infrastructure</a>.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">only</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> master</code></pre></div>\n<p>Fairly obvious, build only from the <code class=\"language-text\">master</code> branch.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">bundler</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">yarn</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">directories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token punctuation\">-</span> node_modules <span class=\"token comment\"># NPM packages</span></code></pre></div>\n<p>Travis CI pulls down and installs gem and Node.js modules before every build. Depending on what you have in your <code class=\"language-text\">Gemfile</code> and <code class=\"language-text\">package.json</code> files this can take a bit of time. </p>\n<p>The above lines enable caching of these dependencies eliminating this installation step.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">addons</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">apt</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">sources</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> ubuntu<span class=\"token punctuation\">-</span>toolchain<span class=\"token punctuation\">-</span>r<span class=\"token punctuation\">-</span>test\n    <span class=\"token key atrule\">packages</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> g++<span class=\"token punctuation\">-</span><span class=\"token number\">4.8</span>\n\n<span class=\"token key atrule\">env</span><span class=\"token punctuation\">:</span>\n  CXX=g++<span class=\"token punctuation\">-</span><span class=\"token number\">4.8</span></code></pre></div>\n<p>Enables the <a href=\"https://gcc.gnu.org/\">GCC, GNU Compiler Collection</a> using <a href=\"https://docs.travis-ci.com/user/installing-dependencies/#Installing-Packages-with-the-APT-Addon\">APT Addon</a> and a newer version of <code class=\"language-text\">gcc/g++</code> to properly install <a href=\"https://github.com/lovell/sharp\">Sharp</a>.</p>\n<h3 id=\"travis-ci-build-lifecycle\" style=\"position:relative;\"><a href=\"#travis-ci-build-lifecycle\" aria-label=\"travis ci build lifecycle permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Travis CI build lifecycle</h3>\n<p>My <a href=\"https://docs.travis-ci.com/user/customizing-the-build/#The-Build-Lifecycle\">build lifecycle</a> breaks down like this: </p>\n<ol>\n<li>Clone repo and any submodules. </li>\n<li>Install <code class=\"language-text\">apt addons</code>.</li>\n<li>Install Ruby gems.</li>\n<li>Upgrade Node.js and install <a href=\"https://yarnpkg.com/en/\">Yarn</a> + Node modules.</li>\n<li>Run Gulp production build task <code class=\"language-text\">gulp build --prod</code>.</li>\n<li><a href=\"https://oncletom.io/2016/travis-ssh-deploy/\">Decrypt private SSH keys</a> needed to rsync files to my server.</li>\n<li>\n<p>Run Gulp deploy task:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span>\n <span class=\"token key atrule\">provider</span><span class=\"token punctuation\">:</span> script\n <span class=\"token key atrule\">skip_cleanup</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span> gulp deploy\n <span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span>\n   <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master</code></pre></div>\n</li>\n</ol>\n<p>With everything configured I no longer need to build locally and deploy. I can merge in comments or make small edits to Markdown files directly on GitHub, and automatically trigger a site build/deploy.</p>\n<p>If there’s a problem Travis CI will notify me, otherwise in ~15 minutes (or however long the build takes) any changes committed will be live on the site.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">ProTip: use Travis CI with sites hosted with GitHub Pages</div><div class=\"custom-block-body\"><p>Travis CI comes in handy if you want to use Jekyll plugins or a more advanced Gulp workflow like I am. There are <a href=\"https://docs.travis-ci.com/user/deployment/pages/\">deployment scripts</a> specifically for this purpose. </p><p><a href=\"https://www.netlify.com/\">Netlify</a>, <a href=\"https://pages.gitlab.io/\">GitLab</a>, and friends also do similar things if you’re feeling constrained by what’s currently allowed by GitHub Pages.</p></div></div>\n<h2 id=\"other-jekyll-related-bits\" style=\"position:relative;\"><a href=\"#other-jekyll-related-bits\" aria-label=\"other jekyll related bits permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Other Jekyll related bits</h2>\n<h3 id=\"pagination-upgrades\" style=\"position:relative;\"><a href=\"#pagination-upgrades\" aria-label=\"pagination upgrades permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Pagination upgrades</h3>\n<p>Looking to wring a little more #WebPerf juice out of my site, I went after category and tag archive pages next. Depending on the tag, these <code class=\"language-text\">index.html</code> pages could be quite hefty due to the amount of HTML needed to display hundreds of post teasers.</p>\n<p>To trim them down in size I needed a way of paginating these pages into small chunks. Jekyll has an <a href=\"http://jekyllrb.com/docs/pagination/\">official pagination plugin</a>, but unfortunately it’s limited (and deprecated) in what it can actually paginate. <a href=\"https://github.com/sverrirs/jekyll-paginate-v2\"><strong>Jekyll Paginate v2</strong></a> on the other hand is fully featured, backwards compatible, and actively being worked on.</p>\n<p>In addition to paginating posts it can handle: <a href=\"https://github.com/sverrirs/jekyll-paginate-v2/blob/master/README-GENERATOR.md#paginating-collections\">collections</a>, <a href=\"https://github.com/sverrirs/jekyll-paginate-v2/blob/master/README-GENERATOR.md#filtering-categories\">categories</a>, <a href=\"https://github.com/sverrirs/jekyll-paginate-v2/blob/master/README-GENERATOR.md#filtering-tags\">tags</a>, and <a href=\"https://github.com/sverrirs/jekyll-paginate-v2/blob/master/README-GENERATOR.md#filtering-locales\">locales</a> (useful if you have a multi-language site).</p>\n<p>It doesn’t stop there though! It has a built-in generator called <a href=\"https://github.com/sverrirs/jekyll-paginate-v2/blob/master/README-AUTOPAGES.md\"><strong>Auto-Pages</strong></a> to create tag, category, and collection archives. Which unlike <a href=\"https://github.com/jekyll/jekyll-archives\"><strong>Jekyll Archives</strong></a>, can all be paginated.</p>\n<p>With a few changes to my <code class=\"language-text\">_config.yml</code> file and adapting my Jekyll Archive <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/master/src/_layouts/autopage_tags.html\">layout</a> to work with <a href=\"https://github.com/sverrirs/jekyll-paginate-v2\">Jekyll Paginate v2</a>, I was ready to roll.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># Plugin: Pagination (jekyll-paginate-v2)</span>\n<span class=\"token key atrule\">pagination</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enabled</span>      <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">debug</span>        <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">per_page</span>     <span class=\"token punctuation\">:</span> <span class=\"token number\">15</span>\n  <span class=\"token key atrule\">path</span>    <span class=\"token punctuation\">:</span> <span class=\"token string\">\"/page/:num/\"</span>\n  <span class=\"token key atrule\">title</span>        <span class=\"token punctuation\">:</span> <span class=\"token string\">\":title - Page :num of :max\"</span>\n  <span class=\"token key atrule\">limit</span>        <span class=\"token punctuation\">:</span> <span class=\"token number\">0</span>\n  <span class=\"token key atrule\">sort_field</span>   <span class=\"token punctuation\">:</span> <span class=\"token string\">\"date\"</span>\n  <span class=\"token key atrule\">sort_reverse</span> <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n\n<span class=\"token comment\"># Plugin: Auto Pages (jekyll-paginate-v2)</span>\n<span class=\"token key atrule\">autopages</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">enabled</span>      <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">categories</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enabled</span>    <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">collections</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enabled</span>    <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">tags</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">enabled</span>    <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n    <span class=\"token key atrule\">layouts</span><span class=\"token punctuation\">:</span>\n      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"autopage_tags.html\"</span>\n    <span class=\"token key atrule\">title</span>      <span class=\"token punctuation\">:</span> <span class=\"token string\">\":tag\"</span> <span class=\"token comment\"># :tag is replaced by the tag name</span>\n    <span class=\"token key atrule\">path</span>  <span class=\"token punctuation\">:</span> <span class=\"token string\">\"/tag/:tag\"</span></code></pre></div>\n<p>For category archives I created my own bespoke pages since there are only a handful of them. Mostly because it was easier to customize them than generating with <a href=\"https://github.com/sverrirs/jekyll-paginate-v2/blob/master/README-AUTOPAGES.md\">Auto-Pages</a>.</p>\n<p><strong>Step 1:</strong> Create an archive page… let’s use my <a href=\"/articles/\">Articles archive</a> as an example. I like to keep all of my source pages grouped together, so I created <code class=\"language-text\">articles.md</code> and placed it in a <a href=\"/articles/using-jekyll-2016/#pages-for-everything-else\">folder named <code class=\"language-text\">_pages</code></a>.</p>\n<p><strong>Step 2:</strong> Enable pagination and define what categories it should filter, in this case <code class=\"language-text\">articles</code> by adding the following YAML Front Matter to <code class=\"language-text\">articles.md</code>.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">pagination</span><span class=\"token punctuation\">:</span> \n  <span class=\"token key atrule\">enabled</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">category</span><span class=\"token punctuation\">:</span> articles</code></pre></div>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">ProTip: <a href=\"https://github.com/sverrirs/jekyll-paginate-v2/blob/master/README-GENERATOR.md#filtering-categories\">filter multiple categories</a></div><div class=\"custom-block-body\"><p>Want to combine several categories into one paginator object? Jekyll Paginate v2 has you covered. Just add additional categories as a comma separated list e.g. <code class=\"language-text\">category: foo, bar</code>.</p></div></div>\n<p><strong>Step 3:</strong> Output the posts by looping through the <code class=\"language-text\">paginator.posts</code> array. A simple example would look something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\"><span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> paginator.posts <span class=\"token operator\">%</span>}\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> what you want to output. title, url, image, etc. <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>\"{{ post.url }}\"<span class=\"token operator\">></span>{{ post.title }}<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">endfor</span> <span class=\"token operator\">%</span>}\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></code></pre></div>\n<p>And for “next/previous” navigation links you can do something like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> paginator.total_pages <span class=\"token operator\">></span> <span class=\"token number\">1</span> <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> paginator.previous_page <span class=\"token operator\">%</span>}\n    <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>\"{{ paginator.previous_page_path }}\"<span class=\"token operator\">></span>Newer Posts<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> paginator.next_page <span class=\"token operator\">%</span>}\n    <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>\"{{ paginator.next_page_path }}\"<span class=\"token operator\">></span>Older Posts<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<h3 id=\"lazyload-tag\" style=\"position:relative;\"><a href=\"#lazyload-tag\" aria-label=\"lazyload tag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Lazyload tag</h3>\n<p>Another #WebPerf improvement was adding the ability to defer loading of images and video embeds.</p>\n<p>To do this I created a custom Jekyll plugin using <a href=\"https://github.com/aFarkas/lazysizes\"><strong>lazysizes</strong></a> to do some JavaScript magic.</p>\n<table>\n<thead>\n<tr>\n<th>Attribute</th>\n<th>Required</th>\n<th>Description</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><code class=\"language-text\">data-src</code></td>\n<td><strong>Required</strong></td>\n<td>Full path to image eg: <code class=\"language-text\">/assets/images/filename.jpg</code>. Use absolute URLS for those hosted externally.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">src</code></td>\n<td>Optional</td>\n<td>Full path to low-quality image eg: <code class=\"language-text\">/assets/images/filename.jpg</code>. Use absolute URLS for those hosted externally. Defaults to inline transparent <code class=\"language-text\">.gif</code>.</td>\n</tr>\n<tr>\n<td><code class=\"language-text\">alt</code></td>\n<td>Optional</td>\n<td>Image alternate text.</td>\n</tr>\n</tbody>\n</table>\n<p><strong>Example:</strong></p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> lazyload data<span class=\"token operator\">-</span>src<span class=\"token operator\">=</span>\"<span class=\"token operator\">/</span>assets<span class=\"token operator\">/</span>images<span class=\"token operator\">/</span>my<span class=\"token operator\">-</span>image.jpg\" src<span class=\"token operator\">=</span>\"<span class=\"token operator\">/</span>assets<span class=\"token operator\">/</span>images<span class=\"token operator\">/</span>my<span class=\"token operator\">-</span>image<span class=\"token operator\">-</span>low<span class=\"token operator\">-</span>quality.jpg\" alt<span class=\"token operator\">=</span>\"my lazyloaded image\" <span class=\"token operator\">%</span>}</code></pre></div>\n<p>A Liquid version of this method is used in the <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/11.0.0/src/_includes/page__hero.html\">hero image include</a> to apply a nice blur effect as those large images are loaded by the browser.</p>\n<h3 id=\"responsive-video-embed-tag\" style=\"position:relative;\"><a href=\"#responsive-video-embed-tag\" aria-label=\"responsive video embed tag permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Responsive video embed tag</h3>\n<p>Custom Jekyll plugin to embed a video from YouTube or Vimeo that responsively sizes to fit the width of its parent using <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/master/src/_plugins/video_embed.rb\"><code class=\"language-text\">/_plugins/video_embed.rb</code></a>.</p>\n<p>Embeds are also <a href=\"#lazyload-tag\">lazyloaded</a> to improve page performance.</p>\n<h4 id=\"youtube-embed\" style=\"position:relative;\"><a href=\"#youtube-embed\" aria-label=\"youtube embed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>YouTube embed</h4>\n<p>To embed the following YouTube video at url <code class=\"language-text\">https://www.youtube.com/watch?v=fFX1CUO472U</code> (long version) or <code class=\"language-text\">https://youtu.be/fFX1CUO472U</code> (short version) into a post or page’s main content you’d use: </p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> youtube fFX1CUO472U <span class=\"token operator\">%</span>}</code></pre></div>\n<h4 id=\"vimeo-embed\" style=\"position:relative;\"><a href=\"#vimeo-embed\" aria-label=\"vimeo embed permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Vimeo embed</h4>\n<p>To embed the following Vimeo video at url <code class=\"language-text\">https://vimeo.com/97649261</code> into a post or page’s main content you’d use: </p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> vimeo <span class=\"token number\">34948855</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<h3 id=\"simplified-breadcrumbs\" style=\"position:relative;\"><a href=\"#simplified-breadcrumbs\" aria-label=\"simplified breadcrumbs permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Simplified breadcrumbs</h3>\n<p>Previously I was using some Liquid voodoo to <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/10.3.0/src/_includes/breadcrumbs.html\">build a trail of breadcrumbs</a>. This sort of worked because my site structure isn’t too complex. On the other hand it wasn’t flexible and didn’t allow for overriding crumbs with more descriptive labels.</p>\n<p>Since my content hierarchy is shallow I decided to manually assign breadcrumbs to each post with YAML Front Matter.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">breadcrumbs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Blog Articles\"</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /articles/</code></pre></div>\n<p>Then using this Liquid and HTML it’s outputted in my layout:</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> page.breadcrumbs <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> crumb <span class=\"token operator\">=</span> page.breadcrumbs[<span class=\"token number\">0</span>] <span class=\"token operator\">%</span>}\n  <span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>\"{{ crumb.url }}\"<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>strong<span class=\"token operator\">></span>{{ crumb.label }}<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>strong<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span>\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<p>For multiple levels of breadcrumbs the following YAML and sample <code class=\"language-text\">for</code> loop should get the job started.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">breadcrumbs</span><span class=\"token punctuation\">:</span>\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Level 1\"</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /level<span class=\"token punctuation\">-</span>1/\n  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">label</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"Level 2\"</span>\n    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> /level<span class=\"token punctuation\">-</span>2/</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> page.breadcrumbs <span class=\"token operator\">%</span>}\n  <span class=\"token operator\">&lt;</span>ul class<span class=\"token operator\">=</span>\"breadcrumbs\"<span class=\"token operator\">></span>\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> crumb <span class=\"token keyword\">in</span> page.breadcrumbs <span class=\"token operator\">%</span>}\n      <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>\"{{ crumb.url }}\"<span class=\"token operator\">></span>{{ crumb.label }}<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">endfor</span> <span class=\"token operator\">%</span>}\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span>\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">ProTip: add breadcrumbs using <a href=\"http://jekyllrb.com/docs/configuration/#front-matter-defaults\">front matter defaults</a></div><div class=\"custom-block-body\"><p>Take a <abbr title=\"Don&#x27;t Repeat Yourself is a principle of software development, aimed at reducing repetition of information of all kinds, especially useful in multi-tier architectures.\">DRY</abbr> approach and <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/11.0.0/_config.yml#L126-L128\">add breadcrumbs</a> at the category level instead of on every post/page. <code class=\"language-text\">defaults:</code> in <code class=\"language-text\">_config.yml</code> is your friend.</p></div></div>\n<h3 id=\"popular-tags\" style=\"position:relative;\"><a href=\"#popular-tags\" aria-label=\"popular tags permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Popular tags</h3>\n<p>Looking over my site’s analytics I came to the conclusion no one was clicking on the “this post was tagged” links, so I removed them. To make category pages more sticky and useful including tags seemed more useful. So with the following Liquid I was able to build a list of the most popular tags filtered on the current category.</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> filterCategory <span class=\"token operator\">=</span> page.pagination.category <span class=\"token operator\">|</span> <span class=\"token function\">default</span><span class=\"token operator\">:</span> page.category <span class=\"token operator\">%</span>}\n\n<span class=\"token operator\">&lt;</span>ul<span class=\"token operator\">></span>\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> tagLimiter <span class=\"token operator\">=</span> <span class=\"token number\">0</span> <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> tag <span class=\"token keyword\">in</span> site.tags <span class=\"token operator\">%</span>}\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">comment</span> <span class=\"token operator\">%</span>}create an empty array{<span class=\"token operator\">%</span> <span class=\"token keyword\">endcomment</span> <span class=\"token operator\">%</span>}\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> postsInCategory <span class=\"token operator\">=</span> \"\" <span class=\"token operator\">|</span> <span class=\"token function\">split</span><span class=\"token operator\">:</span> \"<span class=\"token operator\">/</span>\" <span class=\"token operator\">%</span>}\n\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">comment</span> <span class=\"token operator\">%</span>}loop over site.tags{<span class=\"token operator\">%</span> <span class=\"token keyword\">endcomment</span> <span class=\"token operator\">%</span>}\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> post <span class=\"token keyword\">in</span> tag[<span class=\"token number\">1</span>] <span class=\"token operator\">%</span>}\n      {<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> post.categories contains filterCategory <span class=\"token operator\">%</span>}\n        {<span class=\"token operator\">%</span> <span class=\"token keyword\">comment</span> <span class=\"token operator\">%</span>}<span class=\"token keyword\">if</span> a post is <span class=\"token keyword\">in</span> the filter category add it to postsInCategory array{<span class=\"token operator\">%</span> <span class=\"token keyword\">endcomment</span> <span class=\"token operator\">%</span>}\n        {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> postsInCategory <span class=\"token operator\">=</span> postsInCategory <span class=\"token operator\">|</span> push<span class=\"token operator\">:</span> post <span class=\"token operator\">%</span>}\n      {<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">endfor</span> <span class=\"token operator\">%</span>}\n\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">comment</span> <span class=\"token operator\">%</span>}poor man's tag <span class=\"token keyword\">limit</span> on those that are frequently used{<span class=\"token operator\">%</span> <span class=\"token keyword\">endcomment</span> <span class=\"token operator\">%</span>}\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">if</span> postsInCategory.size <span class=\"token operator\">>=</span> <span class=\"token number\">5</span> and tagLimiter <span class=\"token operator\">&lt;=</span> <span class=\"token number\">5</span> <span class=\"token operator\">%</span>}\n      {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> tagLimiter <span class=\"token operator\">=</span> tagLimiter <span class=\"token operator\">|</span> <span class=\"token function\">plus</span><span class=\"token operator\">:</span> <span class=\"token number\">1</span> <span class=\"token operator\">%</span>}\n      <span class=\"token operator\">&lt;</span>li<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span>a href<span class=\"token operator\">=</span>\"<span class=\"token operator\">/</span>tag<span class=\"token operator\">/</span>{{ tag[<span class=\"token number\">0</span>] <span class=\"token operator\">|</span> <span class=\"token function\">replace</span><span class=\"token operator\">:</span>' ','<span class=\"token operator\">-</span>' <span class=\"token operator\">|</span> <span class=\"token function\">downcase</span> }}<span class=\"token operator\">/</span>\" <span class=\"token operator\">></span>{{ tag[<span class=\"token number\">0</span>] }}<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>a<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>li<span class=\"token operator\">></span>\n    {<span class=\"token operator\">%</span> <span class=\"token keyword\">endif</span> <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">endfor</span> <span class=\"token operator\">%</span>}\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>ul<span class=\"token operator\">></span></code></pre></div>\n<p>On my <strong>Mastering Paper</strong> category page about the iPad app <a href=\"http://www.fiftythree.com/\">Paper by FiftyThree</a>, you’ll see related links to tags like <em>Paper by 53</em>, <em>iPad</em>, <em>drawing</em>, etc.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 862px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 62.54545454545455%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"popular topics screenshot\"\n        title=\"popular topics screenshot\"\n        data-src=\"/static/157e7c0469c0088bc95ba89625fecdf5/17588/mm-popular-tags-screenshot.png\"\n        data-srcset=\"/static/157e7c0469c0088bc95ba89625fecdf5/39133/mm-popular-tags-screenshot.png 275w,\n/static/157e7c0469c0088bc95ba89625fecdf5/50322/mm-popular-tags-screenshot.png 550w,\n/static/157e7c0469c0088bc95ba89625fecdf5/17588/mm-popular-tags-screenshot.png 862w\"\n        sizes=\"(max-width: 862px) 100vw, 862px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<hr>\n<p>Well there you have it, the complete tale of how I took something inherently simple and overly complicated it to suit my needs. If you have any questions after looking over the source ask away in the comments below.</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>Each task was run 3 times and averaged as the values produced by <code class=\"language-text\">jekyll build --profile</code> varied quite a bit.</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p>I classify “features” as large, often full-width images commonly seen in landing pages built with <strong>Bootstrap</strong> and other popular CSS frameworks.</p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-3\">\n<p>Sharp is super fast, but only resizes JPEG, PNG, WebP, and TIFF images… no GIF. It’s also a pain in the ass to install on Windows due to the <a href=\"https://github.com/nodejs/node-gyp\"><code class=\"language-text\">node-gyp</code></a> dependency.</p>\n<a href=\"#fnref-3\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-4\">\n<p>In the last couple of years several “cloud” solutions have emerged to make serving responsively sized images easier. <a href=\"http://cloudinary.com/\"><strong>Cloudinary</strong></a> (free plan), <a href=\"https://www.imgix.com/\"><strong>imgix</strong></a> (paid plans), and <a href=\"https://www.scientiamobile.com/page/imageengine\"><strong>ImageEngine</strong></a> (free plan) just to name a few.</p>\n<a href=\"#fnref-4\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-5\">\n<p>Continuous integration is a DevOps software development practice where developers regularly merge their code changes into a central repository, after which automated builds and tests are run.</p>\n<a href=\"#fnref-5\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-6\">\n<p>There are several CI platforms and services out there that can automate testing, building, and deploying a JAMstack site. <a href=\"https://www.netlify.com/\">Netlify</a>, <a href=\"https://circleci.com/\">Circle CI</a>, <a href=\"https://www.codeship.io/\">Codeship</a>, <a href=\"https://travis-ci.org/\">Travis CI</a>, and <a href=\"https://about.gitlab.com/features/gitlab-ci-cd/\">GitLab CI</a> to name a few.</p>\n<a href=\"#fnref-6\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-7\">\n<p>Branch updates, pull requests, or both.</p>\n<a href=\"#fnref-7\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","excerpt":"Not going to lie — I love Jekyll, but huge static sites like mine take forever to build. What used to take seconds now go on for over 3…","timeToRead":24,"tableOfContents":"<ul>\n<li>\n<p><a href=\"/articles/using-jekyll-2017/#optimization\">Optimization</a></p>\n<ul>\n<li><a href=\"/articles/using-jekyll-2017/#css-and-javascript-assets\">CSS and JavaScript assets</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#image-assets\">Image assets</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#simplify-layouts\">Simplify layouts</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#results\">Results</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/articles/using-jekyll-2017/#automation--continuous-integration\">Automation &#x26; Continuous Integration</a></p>\n<ul>\n<li><a href=\"/articles/using-jekyll-2017/#travis-ci-configuration\">Travis CI configuration</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#travis-ci-build-lifecycle\">Travis CI build lifecycle</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/articles/using-jekyll-2017/#other-jekyll-related-bits\">Other Jekyll related bits</a></p>\n<ul>\n<li><a href=\"/articles/using-jekyll-2017/#pagination-upgrades\">Pagination upgrades</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#lazyload-tag\">Lazyload tag</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#responsive-video-embed-tag\">Responsive video embed tag</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#simplified-breadcrumbs\">Simplified breadcrumbs</a></li>\n<li><a href=\"/articles/using-jekyll-2017/#popular-tags\">Popular tags</a></li>\n</ul>\n</li>\n</ul>"},"comments":{"edges":[{"node":{"id":"352d6253-ef3b-506c-a087-9ae0035a9ecc","frontmatter":{"name":"Chris Howell","email":"a5a8f22041d1996d0a684fe02151753d","friendlyDate":"October 03, 2017","iso8601Date":"2017-10-03T06:27:55.362Z","published":null},"html":"<p>It would be great if you created a Jekyll starter kit and open sourced it :)</p>"}},{"node":{"id":"4322de3e-f4e9-51ff-8fe3-dc1a6d6460d5","frontmatter":{"name":"Sondre Nilsen","email":"afa3a1cd3b5ee66ff2772ed473644ec2","friendlyDate":"October 11, 2017","iso8601Date":"2017-10-11T13:50:40.088Z","published":null},"html":"<p>Wow, cool that you took inspiration from my generator! Sadly it’s fallen a bit\non the wayside on my way to updating it to Webpack and whatnot. It’s on my todo\nlist, but it’s been a while and the JS community moves so quickly that I have no\nidea where to start.</p>"}},{"node":{"id":"00ba35b6-3b13-5a9c-9c59-b809cf05db94","frontmatter":{"name":"Jacky","email":"4abe121cada34b52a2d7f2935ae1a3a6","friendlyDate":"November 01, 2017","iso8601Date":"2017-11-01T02:06:47.112Z","published":null},"html":"<p>A lot of the thought process you have here are things I’m incorporating into my\npersonal site’s rebuild. Thanks for the detail!</p>"}},{"node":{"id":"82f8e185-e9cc-50db-8732-89f31bb92303","frontmatter":{"name":"Arthur Freitas","email":"28236114af9c8a4d15c3d878e0de5f82","friendlyDate":"November 24, 2017","iso8601Date":"2017-11-24T17:08:43.905Z","published":null},"html":"<p>Great write-up! Thanks for all this insights.</p>"}},{"node":{"id":"d6677212-8f98-5313-8361-192d9df3b392","frontmatter":{"name":"Esporo","email":"5aaa0188add2271ef84a3cc0ed32a83c","friendlyDate":"November 24, 2017","iso8601Date":"2017-11-24T20:00:30.734Z","published":null},"html":"<p>How do you trespass the CORS message error in your comments?</p>"}},{"node":{"id":"2c09b986-6d62-56d7-8f0c-9062a0ebceb2","frontmatter":{"name":"bekti","email":"aab48e6b304c0af442701e5ba34198c0","friendlyDate":"June 07, 2018","iso8601Date":"2018-06-07T21:30:01.774Z","published":null},"html":"<p>I would like to use jekyll-paginate-v2, but still can’t use that plugin on\ngh-pages. :(</p>"}},{"node":{"id":"b09e9f8c-7da5-5e42-a568-63967170fe14","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"June 08, 2018","iso8601Date":"2018-06-08T15:41:06.106Z","published":null},"html":"<p>Why not\n<a href=\"https://www.netlify.com/blog/2017/05/11/migrating-your-jekyll-site-to-netlify/\">use Netlify instead</a>?\nThey offer everything hosting with GitHub Pages does (free hosting, etc.) and\nmore like being able to use whatever Jekyll plugins you want.</p>\n<p>You can still continue to keep your repo on GitHub. All that’s really needed is\nto add a Netlify config file and setup an account and in most cases you’re good\nto go.</p>"}},{"node":{"id":"5b62539d-f2a2-545f-b5d6-b2afabcb9b15","frontmatter":{"name":"Alastair Cox","email":"4ee7c1a08019673657dd5be6d0bd1b7c","friendlyDate":"June 15, 2018","iso8601Date":"2018-06-15T13:27:10.477Z","published":null},"html":"<p>Cool article. Finally moving on to building bigger sites with Jekyll so always\ngood to read the lessons of others who got there first.</p>"}},{"node":{"id":"742cc1db-a5a3-5bd8-b67b-9f0b615908cf","frontmatter":{"name":"Mike Jordan","email":"cf0d7e5f61f5c9e76818d89be4a0e57f","friendlyDate":"August 03, 2018","iso8601Date":"2018-08-03T14:37:11.563Z","published":null},"html":"<p>This makes me want to use Jekyll. Thanks mate.</p>"}},{"node":{"id":"6e885717-97a3-5243-86ad-574ba495ad3d","frontmatter":{"name":"Beau","email":"dadf8ed7d259f6e076539cd338dbab0e","friendlyDate":"September 03, 2018","iso8601Date":"2018-09-03T14:02:48.086Z","published":null},"html":"<p>Drew Silcock wrote\n<a href=\"https://drewsilcock.co.uk/custom-jekyll-plugins\">a post on how to integrate custom plugins with gh-pages</a>.\nHe uses branching and a nice little script to automate things. Might be worth a\nlook.</p>"}},{"node":{"id":"3b525ad7-124d-5c38-b2eb-32a7b24a41c2","frontmatter":{"name":"Kulbhushan Chand","email":"1718d1928bbcd0938ba7a621e68e5d39","friendlyDate":"October 02, 2018","iso8601Date":"2018-10-02T04:17:11.566Z","published":null},"html":"<p>Very informative article. Is it possible to follow your path but, use only npm\npackages instead of gulp?</p>"}},{"node":{"id":"9881e33c-c82e-58c5-b150-04c677ee47cb","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"October 02, 2018","iso8601Date":"2018-10-02T12:09:11.295Z","published":null},"html":"<p>Sure it’s possible, it’s all just JavaScript. So if you’re comfortable writing\nit, it could be done.</p>"}}]}},"pageContext":{"next":{"frontmatter":{"path":"/procreate-paintings/lunar-ashes-portrait/","title":"Choke's embrace","categories":["procreate-paintings"],"tags":["Procreate","portrait","illustration","Sktchy","black and white","time lapse"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/procreate-paintings/lunar-ashes-portrait.md"},"previous":{"frontmatter":{"path":"/notes/styling-language-specific-code-blocks/","title":"Styling language specific code blocks with Jekyll","categories":["notes"],"tags":["TIL","web development","Jekyll"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/notes/styling-language-specific-code-blocks.md"}}}}