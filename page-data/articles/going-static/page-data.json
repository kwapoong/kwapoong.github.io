{"componentChunkName":"component---src-templates-post-js","path":"/articles/going-static/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Going static: using Jekyll CMS free","date":"2012-03-19T00:00:00.000Z","date_pretty":"March 19th, 2012","date_from_now":"8 years ago","last_modified_at":"2020-01-06T14:59:14.000Z","last_modified_at_from_now":"6 months ago","path":"/articles/going-static/","author":null,"excerpt":"Migrating Made Mistakes from a Wordpress powered website back to its static file roots using Jekyll CMS free.","tags":["Jekyll","web development","design","open source"],"image":{"childImageSharp":{"fluid":{"aspectRatio":3.197674418604651,"src":"/static/ac3c586f41065d84eafa8bc4e291a36c/a2a79/going-static-feature.jpg","srcSet":"/static/ac3c586f41065d84eafa8bc4e291a36c/6e883/going-static-feature.jpg 275w,\n/static/ac3c586f41065d84eafa8bc4e291a36c/a09ef/going-static-feature.jpg 550w,\n/static/ac3c586f41065d84eafa8bc4e291a36c/a2a79/going-static-feature.jpg 1024w","sizes":"(max-width: 1024px) 100vw, 1024px"},"fixed":{"src":"/static/ac3c586f41065d84eafa8bc4e291a36c/a2a79/going-static-feature.jpg","height":321,"width":1024}}},"toc":true,"comments":true,"comments_locked":true,"hide_meta":null},"id":"eefd8691-c3c1-550c-9868-6cc01fab7e2b","html":"<p>If you follow the trends in modern web design and development, it’s hard to ignore the work being done around responsive design. Seems like every other week there is an awesome article about media queries, fluid grids, mobile first, or responsive images on websites like <a href=\"http://alistapart.com/\"><em>A List Apart</em></a> and <a href=\"https://www.smashingmagazine.com/\">Smashing Magazine</a>.</p>\n<p>Which got me thinking <em>“Shit. I don’t know anything about these new technologies or techniques, I better learn fast.”</em> And the only real way I was going to pickup all this was to create a project for myself. So began the process of evaluating how to build my personal website and how I’d like it to function.</p>\n<h2 id=\"why-go-static\" style=\"position:relative;\"><a href=\"#why-go-static\" aria-label=\"why go static permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Why go static</h2>\n<p>For the last ten years I’ve used a <abbr title=\"Content Management System\">CMS</abbr> to hold and present various blogs and portfolios for myself and clients. These websites were all dynamically driven by a database (usually MySQL) and generally had more features I almost never needed. For example, the convenience of being able update a Wordpress powered website from an iOS app. As much as that feature sounds awesome, I never felt the need to post to my blog while away from my iMac. Especially not any sort of long form article or image heavy post.</p>\n<p>A common problem facing Wordpress sites is the speed at which they serve up pages. To be honest I never really had issues with <em>Made Mistakes</em> because it was relatively small and low on the traffic. But worrying about security exploits, if updates to the core were going to break something, poorly written plugins, or if I had <a href=\"https://wordpress.org/plugins/w3-total-cache/\">W3 Total Cache</a> configured correctly started to get old fast.</p>\n<h3 id=\"designers-are-control-freaks\" style=\"position:relative;\"><a href=\"#designers-are-control-freaks\" aria-label=\"designers are control freaks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Designers are control freaks</h3>\n<p>But the real reason that prompted me to look at going back to my web roots was <em>control</em>. Trying to tame content inside of a <abbr title=\"Content Management System\">CMS</abbr> filled with loops, functions, and code I didn’t write or completely understand became an exercise in wasting time. And for what? In six months I’d abandon a site and cease updating even though I had the tools to update from <em>anywhere</em> and at <em>anytime</em>. Which lead to this conclusion — I’d much rather build something from the ground up than strip away a bunch of useless bells &#x26; whistles I didn’t need.</p>\n<h2 id=\"journey-to-a-static-website\" style=\"position:relative;\"><a href=\"#journey-to-a-static-website\" aria-label=\"journey to a static website permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Journey to a static website</h2>\n<p>And so began the process of building a blog-portfolio hybrid using vanilla HTML and CSS — no databases, no PHP. But where to start? <em>Do I build a few disconnected pages in a text editor like Sublime Text and upload via FTP?</em> Or is there a better way using a static-site generator like <a href=\"http://jekyllrb.com/\">Jekyll</a>, <a href=\"https://nanoc.ws/\">nanoc</a>, <a href=\"http://middlemanapp.com/\">Middleman</a>, <a href=\"https://github.com/staticmatic/staticmatic\">StaticMatic</a>, <a href=\"https://github.com/benschwarz/bonsai\">Bonsai</a>, and the <a href=\"https://www.staticgen.com/\">list goes on</a>?</p>\n<h3 id=\"generating-the-site-with-jekyll\" style=\"position:relative;\"><a href=\"#generating-the-site-with-jekyll\" aria-label=\"generating the site with jekyll permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generating the site with Jekyll</h3>\n<p>I eventually settled on Jekyll as my static-site generator of choice — mostly because it seemed actively developed and <a href=\"http://liquidmarkup.org/\">Liquid</a> appeared to support everything I needed to do with my templates. Publishing a new post goes something like this:</p>\n<ol>\n<li>Create a text file written in Markdown for a new post.</li>\n<li>Add a <abbr title=\"YAML Ain&#x27;t Markup Language\">YAML</abbr> Front Matter block to the top of these files to indicate which layout to use, the post’s meta data, feature image, category, and tags.</li>\n<li>Run <code class=\"language-text\">jekyll</code> from the <abbr title=\"Command Line Interface\">CLI</abbr> to spit out the compiled site.</li>\n<li>Deploy <code class=\"language-text\">/_site</code> to my web server using a rake task that minifies all .html files, rsyncs the changes, and pings Google and Bing notifying them that <code class=\"language-text\">sitemap.xml</code> has updated.</li>\n</ol>\n<p>There can be a few more steps to the process, but for the most part it’s fairly straight forward after you’ve built all the necessary <code class=\"language-text\">_layouts</code> and <code class=\"language-text\">_includes</code>. What made this process appealing to me over Wordpress or another <abbr title=\"Content Management System\">CMS</abbr> was — total control. I can set how I want the folder structure to look like, how the pages are constructed, use <a href=\"http://gruntjs.com/\">Grunt</a> and other build scripts to optimize everything, etc etc etc. Sure it’s possible to do all this in a <abbr title=\"Content Management System\">CMS</abbr>, but sometimes it’s not as transparent and obvious and you often have to strip out a bunch of code bloat.</p>\n<p>I will say this about using Jekyll — it’s not for everyone. I had to get my hands dirty and figure out (or research) ways of creating XML sitemaps, <abbr title=\"Really Simple Syndication\">RSS</abbr>/Atom feeds, including social media buttons on article pages, and numerous other things Wordpress powered sites take for granted. But if you ask me, digging into those details and crafting something from scratch was way more rewarding than installing a plugin to do it for you.</p>\n<p>Jekyll made it possible for me to realize the following goals: familiarize myself with the basics of HTML5 and CSS3 transitions, be able to <em>“art direct”</em> every page without hacks, get nice with CSS preprocessors like <a href=\"http://lesscss.org/\">Less</a> to create more powerful and efficient stylesheets, and plant the seeds of a responsive design that was optimized for mobile, tablet, and desktop screens.</p>\n<h2 id=\"inspirational-frameworks\" style=\"position:relative;\"><a href=\"#inspirational-frameworks\" aria-label=\"inspirational frameworks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Inspirational frameworks</h2>\n<h3 id=\"html5-boilerplate\" style=\"position:relative;\"><a href=\"#html5-boilerplate\" aria-label=\"html5 boilerplate permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>HTML5 Boilerplate</h3>\n<p>One of the most beneficial things I did to familiarize myself with the HTML5 spec was download the <a href=\"http://html5boilerplate.com/\"><em>HTML5 Boilerplate</em></a> and read through the source code. All of the files are heavily commented and explain what is going on and why. Often with links to the source material to get more context behind a specific technique or approach. When this wasn’t enough I’d hit up <a href=\"https://html5doctor.com/\"><em>HTML5 Doctor</em></a> to learn more about the <code class=\"language-text\">header</code>, <code class=\"language-text\">article</code>, <code class=\"language-text\">section</code>, <code class=\"language-text\">nav</code>, <code class=\"language-text\">footer</code>, <code class=\"language-text\">figure</code> elements.</p>\n<h3 id=\"art-directed-blog-posts-are-so-passe\" style=\"position:relative;\"><a href=\"#art-directed-blog-posts-are-so-passe\" aria-label=\"art directed blog posts are so passe permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Art directed blog posts are so passé</h3>\n<p>Back when I still had a website powered by Wordpress, I toyed with the idea of designing art directed blog posts. Essentially posts that deviated from the blog’s theme and became something unique based on the posts content. Think of the editorial design work done in print magazines and you’ll get the idea.</p>\n<p>To achieve this you could install any number of art direction <a href=\"http://wordpress.org/extend/plugins/art-direction/\">Wordpress plugins</a> to include custom CSS styles into a post’s layout overriding the defaults. If you ask me, using <a href=\"https://help.shopify.com/themes/liquid/tags/control-flow-tags\">Liquid flow tags</a> in a templates seems less hacky and way more customizable. Loading custom CSS for specific pages becomes an almost trivial exercise once you wrap your head around Liquid and <abbr title=\"YAML Ain&#x27;t Markup Language\">YAML</abbr>.</p>\n<h3 id=\"less-is-more\" style=\"position:relative;\"><a href=\"#less-is-more\" aria-label=\"less is more permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Less is more</h3>\n<p>When I first heard about <a href=\"http://lesscss.org/\">Less</a> and <a href=\"http://sass-lang.com/about/\">Sass</a> I rejected the idea of using a CSS preprocessor. Feeling like I’ve sharpened my CSS skills to a razor sharp edge, I in no way wanted to add another layer of complexity to my workflow. With a second look I decided it made a lot of sense to at least experiment with writing Less and see how I could utilize it in my next project.</p>\n<p>Bare minimum I figured I could use global variables for the site’s color palette and default typography and maybe a mixin or two. The beauty of Less is that you don’t have to alter your current .css files. Just changed the .css extension to .less and you’re done. Then use as little or <em>as less</em> that you want.</p>\n<p>Using variables and mixins helped to quickly prototype page styles. It also allowed me to think more modularly about how to best reuse my code throughout a project. And I didn’t even have to worry about using JavaScript or a separate app to convert compiled .css files. I simply installed the <a href=\"http://rubygems.org/gems/jekyll-less\">Jekyll-less</a> Ruby Gem and any time I run <code class=\"language-text\">jekyll</code> or <code class=\"language-text\">jekyll-server</code>, the .less to .css conversion is handled automatically.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Update: switched from Less to Sass</div><div class=\"custom-block-body\"><p>Since migrating from Less to Sass I now use <a href=\"http://bourbon.io\">Bourbon</a> and <a href=\"http://neat.bourbon.io/\">Neat</a> to manage my mixins and grid. <a href=\"http://susy.oddbird.net/\">Susy</a> looks like something I’ll eventually move to once I have the time to toy with it.</p></div></div>\n<h3 id=\"but-what-about-the-grid-system\" style=\"position:relative;\"><a href=\"#but-what-about-the-grid-system\" aria-label=\"but what about the grid system permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>But what about the grid system?</h3>\n<p>Another added benefit of using Less are the many user created mixins. I knew I wanted an easy way to establish a grid system in my layouts, but really didn’t want to go the semantically unfriendly route of using classes like <code class=\"language-text\">.grid_x</code>, <code class=\"language-text\">.push_x</code>, or <code class=\"language-text\">col_x</code>. Instead I stumbled upon <a href=\"http://semantic.gs/\">The Semantic Grid System</a> from an <a href=\"http://coding.smashingmagazine.com/2011/08/23/the-semantic-grid-system-page-layout-for-tomorrow/\" title=\"The Semantic Grid System Page Layout for Tomorrow\">article on Smashing Magazine</a> about using semantic markup in grid frameworks.</p>\n<p>Using The Semantic Grid System allowed me to define fluid grids for each of my site’s major page layouts with a few lines of Less. Top that off with a few carefully thought out <code class=\"language-text\">@media</code> queries and my grids were now responsive and adapted well mobile phones, tablets, desktops, and beyond.</p>\n<h2 id=\"left-to-do\" style=\"position:relative;\"><a href=\"#left-to-do\" aria-label=\"left to do permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Left to do</h2>\n<p>So now that I finally got around to migrating my Wordpress website, developed a process for publishing content, redesigned everything from the ground up, tinkered with responsive web design, and learned some new tricks… what’s next? Well for starters, I need to finish cleaning-up and re-publishing around fifty old blog posts. Many of these originated from Tumblr and Wordpress, and when I migrated them over to Jekyll the outputted files were a mess. Plus I’d like to design some of these pages to make them visually interesting.</p>\n<h3 id=\"portfolio-layout\" style=\"position:relative;\"><a href=\"#portfolio-layout\" aria-label=\"portfolio layout permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Portfolio layout</h3>\n<p>You might have noticed in the main navigation up top <em>(or maybe you didn’t)</em> a coming soon line next to the portfolio link. Still thinking about how I want to showcase my design and illustration work that fits in well with the rest of the website. I did some tests on the <a href=\"/work/\">Work page</a> using a grid of thumbnails to represent each post that I think will work better as a portfolio. Either that or combination of a <a href=\"http://www.woothemes.com/flexslider/\">responsive slider</a> for featured work and smaller thumbnails below for the rest. We’ll see…</p>\n<h3 id=\"responsive-images\" style=\"position:relative;\"><a href=\"#responsive-images\" aria-label=\"responsive images permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Responsive images</h3>\n<p>I think I have a solid handle on how to serve mobile optimized pages using <code class=\"language-text\">@media</code> queries and page widths. But what I don’t have figured out are the images. Sure they scale and look decent at various breakpoints, but I didn’t exactly follow a mobile first methodology with them. I started big and scaled down, which means the iPhone and other mobile devices download large images regardless. Something tells me <a href=\"http://alistapart.com/article/responsive-images-how-they-almost-worked-and-what-we-need\" title=\"Responsive Images How They Almost Worked and What We Need\">cracking this nut</a> is going to be hard.</p>\n<h3 id=\"version-control\" style=\"position:relative;\"><a href=\"#version-control\" aria-label=\"version control permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Version control</h3>\n<p>With a 1.0 release under my belt, I think now is the time to take a look at starting a <a href=\"https://github.com/mmistakes/made-mistakes\">repository on GitHub</a>. Maybe to bring sanity to the project allowing me to version control each update. Also think it would be wise to learn how to utilize rsync and rake tasks to make deploying smoother instead of manually FTPing the contents of <code class=\"language-text\">_site\\</code> to the server.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Open sourced Made Mistakes</div><div class=\"custom-block-body\"><p>I’ve added the <a href=\"https://github.com/mmistakes/made-mistakes-jekyll\">sourcecode for mademistakes.com</a> to GitHub if you want to see how I use Jekyll. Feel free to fork my repo, use my design, or point out how bad all my code is ;-) Just don’t be a dick and make a carbon copy of my content and pass it off as your own.</p></div></div>\n<h2 id=\"jekyll-themes\" style=\"position:relative;\"><a href=\"#jekyll-themes\" aria-label=\"jekyll themes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Jekyll themes</h2>\n<p>Getting more comfortable using Jekyll I wanted to give back to the community, so I’ve released a few <a href=\"/work/jekyll-themes/\">Jekyll themes</a> on GitHub. I’ve taken the numerous redesigns this site has gone through and packaged them up into something I hope is a good starting point for launching a Jekyll powered blog. And they’re all 100% compatible with <a href=\"http://pages.github.com/\">GitHub Pages</a> if you’re looking for somewhere free to host your site or blog.</p>","excerpt":"If you follow the trends in modern web design and development, it’s hard to ignore the work being done around responsive design. Seems like…","timeToRead":9,"tableOfContents":"<ul>\n<li>\n<p><a href=\"/articles/going-static/#why-go-static\">Why go static</a></p>\n<ul>\n<li><a href=\"/articles/going-static/#designers-are-control-freaks\">Designers are control freaks</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/articles/going-static/#journey-to-a-static-website\">Journey to a static website</a></p>\n<ul>\n<li><a href=\"/articles/going-static/#generating-the-site-with-jekyll\">Generating the site with Jekyll</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/articles/going-static/#inspirational-frameworks\">Inspirational frameworks</a></p>\n<ul>\n<li><a href=\"/articles/going-static/#html5-boilerplate\">HTML5 Boilerplate</a></li>\n<li><a href=\"/articles/going-static/#art-directed-blog-posts-are-so-passe\">Art directed blog posts are so passé</a></li>\n<li><a href=\"/articles/going-static/#less-is-more\">Less is more</a></li>\n<li><a href=\"/articles/going-static/#but-what-about-the-grid-system\">But what about the grid system?</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/articles/going-static/#left-to-do\">Left to do</a></p>\n<ul>\n<li><a href=\"/articles/going-static/#portfolio-layout\">Portfolio layout</a></li>\n<li><a href=\"/articles/going-static/#responsive-images\">Responsive images</a></li>\n<li><a href=\"/articles/going-static/#version-control\">Version control</a></li>\n</ul>\n</li>\n<li><a href=\"/articles/going-static/#jekyll-themes\">Jekyll themes</a></li>\n</ul>"},"comments":{"edges":[{"node":{"id":"ff7d2854-2875-5ce4-8d94-320de90efe9f","frontmatter":{"name":"Rob Wierzbowski","email":null,"friendlyDate":"July 14, 2013","iso8601Date":"2013-07-14T23:15:10.000Z","published":null},"html":"<p>If you’re still looking for a responsive image solution for Jekyll I’ve just\nfinished a plugin called\n<a href=\"https://github.com/robwierzbowski/jekyll-picture-tag\">Jekyll Picture Tag</a>. Any\nfeedback appreciated.</p>"}},{"node":{"id":"bc79d329-1937-588f-b180-93c2ef606b1c","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"July 19, 2013","iso8601Date":"2013-07-19T15:34:41.000Z","published":null},"html":"<p>Wow this plugin looks great!</p>"}},{"node":{"id":"9d3bfad1-d1b0-5fcb-aa06-6d72912df7c0","frontmatter":{"name":"picajoso","email":null,"friendlyDate":"September 17, 2013","iso8601Date":"2013-09-17T11:07:59.000Z","published":null},"html":"<p>Do you think Jekyll is suitable for a heavy updated site? If you have to build\nthe whole website each time you publish something then this option wouldn’t be\nacceptable. I’ve read somewhere that there is someway to build only the\nupdated/new posts, maintaining the rest of the site without changes.</p>"}},{"node":{"id":"3f45c2fd-4df1-563c-a3a7-39c19fc2efe5","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"September 17, 2013","iso8601Date":"2013-09-17T11:58:15.000Z","published":null},"html":"<p>Depends on how large the site is. I have around 700 posts and it takes a few\nminutes to build the site. It can also depend on the sort of <code class=\"language-text\">_plugins</code>, using\nrelated posts, the various generators you have going too, etc. If you it’s a\nbasic site with under 50 posts it should build really fast.</p>\n<p>It can get kind of bothersome if you’re writing new posts and want to view them\nlocally before deploying, since it has to rebuild the entire site. In that case\nyou can tell Jekyll to limit it’s build to X amount of posts. I usually run it\nwith <code class=\"language-text\">jekyll build --limit_posts 10</code> to see the latest 10 posts. That builds\nfast and allows me to test before I do a full site build.</p>\n<p>Pretty sure it’s on the radar of the Jekyll folks to address this issue. But\nprobably won’t happen anytime soon.</p>"}},{"node":{"id":"bc617555-65c3-569b-8301-842f5e34ebbb","frontmatter":{"name":"picajoso","email":null,"friendlyDate":"September 17, 2013","iso8601Date":"2013-09-17T20:35:27.000Z","published":null},"html":"<p>Thanks for the feedback Michael, I agree with you, at first it seems not a good\nidea. I’ve seen on Paul Stamatiou’s site a good article on\n<a href=\"http://paulstamatiou.com/how-to-wordpress-to-jekyll\">this subject</a> and he\nfinishes linking to some patch that allows Jekyll to do\n<a href=\"https://github.com/graysky/jekyll/commit/39ae8c7c3f4a3cffd095e3b7638cfa8025c5a67a\">incremental regenerations</a>.</p>\n<p>Maybe this could be useful, regards! ;)</p>"}},{"node":{"id":"15df097c-df3b-537a-b547-fd80d4d41a76","frontmatter":{"name":"Samuel Sosina","email":null,"friendlyDate":"November 10, 2014","iso8601Date":"2014-11-10T13:28:44.000Z","published":null},"html":"<p>Ive been thinking about using Jekyll for my new portfolio and your article has\ncompletely settled my nerves! Did you get around to using Susy with Jekyll?</p>"}},{"node":{"id":"d6db044b-5f96-52fb-a42f-d4cd2c45040a","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"November 10, 2014","iso8601Date":"2014-11-10T13:32:29.000Z","published":null},"html":"<p>Not yet I haven’t. I’m using Bourbon and Neat now and just need to figure out\nwhat I want to do with the grid before I make the switch.</p>"}},{"node":{"id":"d0d88382-1d19-5131-a0f3-82995d1682b9","frontmatter":{"name":"ShuMo","email":null,"friendlyDate":"May 12, 2015","iso8601Date":"2015-05-12T21:39:56.000Z","published":null},"html":"<p>I hear new in Jekyll 3.0 or on the road map is incremental regeneration of the\nsite, which would get rid of the problem of waiting for a full site build. It\nwas mentioned at JekyllConf.</p>"}},{"node":{"id":"36cd379e-a859-5e64-9e9f-c0d1c79101dc","frontmatter":{"name":"Gavin Engel","email":null,"friendlyDate":"January 27, 2016","iso8601Date":"2016-01-27T23:55:01.000Z","published":null},"html":"<p>You might want to investigate Strongloop Loopback Gateway in front of your\nstatic website. It could be used to implement an “admin panel” on a static site\nwith OAuth.</p>"}}]}},"pageContext":{"next":{"frontmatter":{"path":"/notes/romance-egg-engagement/","title":"Easter egg marriage proposal","categories":["notes"],"tags":["life"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/notes/romance-egg-engagement.md"},"previous":{"frontmatter":{"path":"/notes/record-art-review-corn-on-macabre-7-inch/","title":"Corn On Macabre record art ⁠— vellum and metallic ink bliss","categories":["notes"],"tags":["inspiration","design"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/notes/record-art-review-corn-on-macabre-7-inch.md"}}}}