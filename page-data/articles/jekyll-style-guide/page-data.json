{"componentChunkName":"component---src-templates-post-js","path":"/articles/jekyll-style-guide/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Building a style guide with Jekyll","date":"2015-02-10T00:00:00.000Z","date_pretty":"February 10th, 2015","date_from_now":"5 years ago","last_modified_at":"2020-01-06T14:58:25.000Z","last_modified_at_from_now":"6 months ago","path":"/articles/jekyll-style-guide/","author":null,"excerpt":"How I used collections with Jekyll to build a style guide and pattern library for Made Mistakes.","tags":["Jekyll","open source","web development","GitHub","tutorial"],"image":{"childImageSharp":{"fluid":{"aspectRatio":2.8350515463917527,"src":"/static/00067bb4ab015142b582dc9ab34d0f27/fc20c/jekyll-style-guide-feature.jpg","srcSet":"/static/00067bb4ab015142b582dc9ab34d0f27/6e883/jekyll-style-guide-feature.jpg 275w,\n/static/00067bb4ab015142b582dc9ab34d0f27/a09ef/jekyll-style-guide-feature.jpg 550w,\n/static/00067bb4ab015142b582dc9ab34d0f27/fc20c/jekyll-style-guide-feature.jpg 1100w,\n/static/00067bb4ab015142b582dc9ab34d0f27/356ef/jekyll-style-guide-feature.jpg 1280w","sizes":"(max-width: 1100px) 100vw, 1100px"},"fixed":{"src":"/static/00067bb4ab015142b582dc9ab34d0f27/fc20c/jekyll-style-guide-feature.jpg","height":387,"width":1100}}},"toc":true,"comments":true,"comments_locked":true,"hide_meta":null},"id":"2d151c92-2ec1-5e09-a351-ac7ed79ce77b","html":"<p>Building a living style guide that details all of the colors, typographic elements, UI patterns, and components used on Made Mistakes has been at the top of my to-do list for some time.</p>\n<p>As sole designer, developer, and writer for the site, having one probably isn’t all that crucial. Yet when iterating on the site’s design I’ve found that some of my patterns don’t always “speak the same visual language.” Having a document I can refer back to and quickly spot check for visual inconsistencies could be very helpful.</p>\n<h2 id=\"keep-it-simple\" style=\"position:relative;\"><a href=\"#keep-it-simple\" aria-label=\"keep it simple permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Keep it simple</h2>\n<p>With the attention style guides have gotten as of late, a nice selection of <a href=\"http://styleguides.io/tools.html\" title=\"style guide tools\">generators and tools</a> have also matured in the open source community. Because I’m <a href=\"/articles/going-static/\">using Jekyll to publish the site</a>, I felt it would be silly to use another tool to generate a living style guide. Even if that meant giving up the ease of setup these other tools provide by having to build out something myself.</p>\n<p>Finding a way to do it all from within Jekyll was an important consideration since I wanted to “set it and forget it” as much as possible. Maintaining stylesheets and <code class=\"language-text\">includes</code> in two separate projects was a thought I didn’t really want to entertain…</p>\n<p>So with that I bumped around GitHub and Google to see what sort of solutions existed already and found these:</p>\n<ul>\n<li><a href=\"https://github.com/davidhund/jekyll-styleguide\">Jekyll CSS Styleguide</a></li>\n<li><a href=\"https://github.com/jeromecoupe/jekyllstyleguide\">Boilerplate for Jekyll Styleguide</a></li>\n<li><a href=\"https://github.com/karissademi/patternlab-jekyll\">Pattern Lab Jekyll Port</a></li>\n<li><a href=\"https://github.com/opattison/Pattern-Primer-Jekyll\">Pattern Primer Jekyll</a></li>\n</ul>\n<p>Out of the bunch, <a href=\"http://www.webstoemp.com/\">Jérôme Coupé’s</a> approach resonated with me the most since it meshed well with my current Jekyll site setup. By leveraging <strong>collections</strong><sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup> I could avoid littering my <code class=\"language-text\">_posts</code> folder with components, color palettes, and other snippets while being able to iterate over them and output individual pages if needed.</p>\n<h2 id=\"building-the-style-guide\" style=\"position:relative;\"><a href=\"#building-the-style-guide\" aria-label=\"building the style guide permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building the style guide</h2>\n<p>To start I took a quick survey of all the Sass partials in my <code class=\"language-text\">_assets/stylesheets</code><sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup> folder to determine how I might want to organize the style guide. The biggies for me were:</p>\n<ul>\n<li><strong>Color palettes</strong></li>\n<li><strong>Typography</strong> (headings, paragraphs, lists, and inline elements)</li>\n<li><strong>Media elements</strong> (images, figures, videos, etc.)</li>\n<li><strong>Patterns</strong> (buttons, badges, table of contents, etc.)</li>\n</ul>\n<h3 id=\"configure-collections\" style=\"position:relative;\"><a href=\"#configure-collections\" aria-label=\"configure collections permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configure collections</h3>\n<p>With the structure of the style guide determined next came <a href=\"http://jekyllrb.com/docs/collections/\">configuring the collections</a> that would contain each component. Originally I planned to have a single collection named <code class=\"language-text\">components</code> but decided to go with a second to group together all of the color palettes used on the site.</p>\n<p>Because I had worked with collections when I built the <a href=\"/faqs/\">FAQ section</a> of my site I had a good idea of what I was doing. To start I added the following to my <code class=\"language-text\">_config.yml</code> and created <code class=\"language-text\">_colors</code> and <code class=\"language-text\">_components</code> folders in the root of my project.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">collections</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">components</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span>\n  <span class=\"token key atrule\">colors</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">output</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span></code></pre></div>\n<p>I choose not to output a file for each color/component since I planned on grouping them together on a single page. But if I later wanted to break them out into separate pages (something I did for my <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/tree/master/src/_faqs\">FAQ section</a> I would simply change <code class=\"language-text\">output: false</code> to <code class=\"language-text\">true</code> and add paths to the YAML Front Matter.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Looking to the future</div><div class=\"custom-block-body\"><p>For version 2.0 of the style guide I may investigate taking it to the next level by constructing a complete <a href=\"http://atomicdesign.bradfrost.com/\">atomic design system</a>. Instead of collections for <code class=\"language-text\">components</code> and <code class=\"language-text\">colors</code> I could create <code class=\"language-text\">atoms</code>, <code class=\"language-text\">molecules</code>, <code class=\"language-text\">organisms</code>, and <code class=\"language-text\">templates</code> to flush out the entire system. </p><p>I’ve seen <a href=\"https://github.com/karissademi/patternlab-jekyll\" title=\"Pattern Lab Jekyll port\">some examples</a> of trying to do this in Jekyll with <code class=\"language-text\">includes</code>, but I think leveraging components, setting <code class=\"language-text\">output: true</code> on them, and getting creative with Liquid would make this a better option.</p></div></div>\n<h3 id=\"display-components-and-color-palettes\" style=\"position:relative;\"><a href=\"#display-components-and-color-palettes\" aria-label=\"display components and color palettes permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Display components and color palettes</h3>\n<p>With my two style guide collections configured I created a new layout (<code class=\"language-text\">_layouts/style_guide.html</code>) to strip away most of the fluff found in my <code class=\"language-text\">article</code> and <code class=\"language-text\">media</code> layouts. It’s basically a wide wrapper with a page title and <code class=\"language-text\">{{ content }}</code> block.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">---\nlayout: default\n---\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">role</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>main<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h1</span><span class=\"token punctuation\">></span></span>{{ page.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h1</span><span class=\"token punctuation\">></span></span>\n  {{ content }}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- /#main --></span></code></pre></div>\n<p>The bulk of the content for the style guide is going to come from creating Markdown files for each component and color palette — so I started on that next. For components I went with the following YAML Front Matter followed by the bare minimum of HTML needed to create each. <code class=\"language-text\">title</code> and <code class=\"language-text\">type</code> are the only required bits with <code class=\"language-text\">scss</code>, <code class=\"language-text\">module</code>, and <code class=\"language-text\">usage</code> being optional to describe a component and/or link back to their source code.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">---\ntitle: \"Main Content Default Notice\"\ntype: notices\nscss: assets/stylesheets/_notices.scss\nmodule:\nusage: \"Emphasize post text.\"\n---\n\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>content<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>page-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>notice<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h4</span><span class=\"token punctuation\">></span></span>Default Notice Headline<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h4</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>Donec sed tellus eget <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>sapien fringilla nonummy<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>. Mauris a ante. Suspendisse quam sem, consequat at.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">ProTip: descriptive filenames</div><div class=\"custom-block-body\"><p>Be smart with your filenames if you’re trying to sort components in a logical way. The default behavior is for them to be arranged alphabetically by filename. Adding a variable to the YAML Front Matter of each component and sorting on that is one way of overriding this behavior.</p><p>Or you could hack the order sequence by doing something like this with your filenames: <code class=\"language-text\">01-ui-colors.md</code>, <code class=\"language-text\">02-component-one.md</code>, <code class=\"language-text\">03-component-two.md</code>, etc.</p></div></div>\n<h4 id=\"collection-loops\" style=\"position:relative;\"><a href=\"#collection-loops\" aria-label=\"collection loops permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Collection loops</h4>\n<p>After creating a handful of components, I started to refine the <a href=\"https://github.com/Shopify/liquid/wiki\">Liquid</a> needed to display them. Mostly to make sure things were shaping up how I envisioned them before getting too deep into things.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 855px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 33.45454545454545%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"Sublime Text _components screenshot\"\n        title=\"Sublime Text _components screenshot\"\n        data-src=\"/static/f4ab002bc221852308cc7a3073d449c7/c4d9d/jekyll-style-guide-components.png\"\n        data-srcset=\"/static/f4ab002bc221852308cc7a3073d449c7/39133/jekyll-style-guide-components.png 275w,\n/static/f4ab002bc221852308cc7a3073d449c7/50322/jekyll-style-guide-components.png 550w,\n/static/f4ab002bc221852308cc7a3073d449c7/c4d9d/jekyll-style-guide-components.png 855w\"\n        sizes=\"(max-width: 855px) 100vw, 855px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>There’s not much magic going on here. Basically what I did was:</p>\n<ol>\n<li>Create a new page <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/10.0.0/style-guide/index.md\"><code class=\"language-text\">/style-guide/index.md</code></a> to act as the style guide’s main page.</li>\n<li>Added YAML Front Matter to this page — assigning a title, <code class=\"language-text\">layout: style_guide</code> to utilize the <code class=\"language-text\">_layout</code> I created earlier, and an excerpt description for SEO purposes.</li>\n<li>Added a short introduction to the style guide.</li>\n<li>Used some Liquid to create <code class=\"language-text\">for</code> loops to output all documents found in the <code class=\"language-text\">colors</code> and <code class=\"language-text\">components</code> collections.</li>\n</ol>\n<p>Here’s the Liquid I came up with to fill the page with content from the <code class=\"language-text\">components</code> collection.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% assign componentsByType = site.components | group_by:\"type\" %}\n{% for type in componentsByType %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h2</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>guide-{{ type.name }}<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>cf<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ type.name | capitalize }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h2</span><span class=\"token punctuation\">></span></span>\n{% for entry in type.items %}\n{% include component.html %}\n{% endfor %}\n{% endfor %}</code></pre></div>\n<p>What’s going on here is I’m iterating over the <code class=\"language-text\">components</code> collection, grouping the documents by type<sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup>, and displaying each document’s content twice (rendered HTML and syntax highlighted un-rendered HTML).</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Beware the Markdown</div><div class=\"custom-block-body\"><p>I had some trouble getting the Liquid above, Markdown, and syntax highlighting to all play nicely. I suppose I could have crafted a <code class=\"language-text\">.html</code> document instead, but I wanted to use Markdown with some HTML mixed in. I gave up trying to make my code more readable with indents, which seemed to eliminate the formatting issues.</p></div></div>\n<p>Sandwiched between the <code class=\"language-text\">entry</code> loop is an include that takes care of spitting out the rendered and syntax highlighted HTML along with an optional short description and links to Sass and <code class=\"language-text\">include</code> sources.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>component<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>header</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>component-header<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>guide-{{ entry.title | slugify }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ entry.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n      {% if entry.usage %}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Usage:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span> {{ entry.usage }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>{% endif %}\n      {% if entry.module %}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>Include file:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.owner.github-repo }}{{ entry.module }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ entry.module }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>{% endif %}\n      {% if entry.scss %}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>header-entry-last<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>strong</span><span class=\"token punctuation\">></span></span>SCSS file:<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>strong</span><span class=\"token punctuation\">></span></span> <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ site.owner.github-repo }}{{ entry.scss }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ entry.scss }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>{% endif %}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>header</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- /.component-header --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>component-content<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>component-rendered<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      {{ entry.content }}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- /.component-rendered --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>component-code<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      \n      {% highlight html %}\n        {{ entry.content }}\n      {% endhighlight %}\n      \n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- /.component-code --></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- /.component-content --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span><span class=\"token comment\">&lt;!-- /.component --></span></code></pre></div>\n<h4 id=\"component-selector-navigation\" style=\"position:relative;\"><a href=\"#component-selector-navigation\" aria-label=\"component selector navigation permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Component selector navigation</h4>\n<p>To help expose components that may be buried towards the bottom of the page I came up with this to create an option list nav.</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>nav</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>component-selector<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>wrap<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>select</span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>section<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>component-select<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token punctuation\">></span></span>Jump to component...<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#guide-color-palettes<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Colors<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n    {% for type in componentsByType %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#guide-{{ type.name }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>{{ type.name | capitalize }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n    {% for entry in type.items %}\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>option</span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#guide-{{ entry.title | slugify }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity\" title=\"&nbsp;\">&amp;nbsp;</span><span class=\"token entity\" title=\"&nbsp;\">&amp;nbsp;</span>{{ entry.title }}<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>option</span><span class=\"token punctuation\">></span></span>\n    {% endfor %}\n    {% endfor %}\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>select</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>nav</span><span class=\"token punctuation\">></span></span>\n\n<span class=\"token comment\">&lt;!-- component selector option list --></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span><span class=\"token punctuation\">></span></span><span class=\"token script\"><span class=\"token language-javascript\">    \n  <span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">document<span class=\"token punctuation\">,</span> <span class=\"token keyword\">undefined</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// component selector</span>\n    document<span class=\"token punctuation\">.</span><span class=\"token function\">getElementById</span><span class=\"token punctuation\">(</span><span class=\"token string\">'component-select'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onchange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">//document.location=this.options[this.selectedIndex].value;</span>\n      <span class=\"token keyword\">var</span> val <span class=\"token operator\">=</span> <span class=\"token keyword\">this</span><span class=\"token punctuation\">.</span>value<span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>val <span class=\"token operator\">!==</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        window<span class=\"token punctuation\">.</span>location <span class=\"token operator\">=</span> val<span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 821px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 54.545454545454554%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"style guide component selector\"\n        title=\"style guide component selector\"\n        data-src=\"/static/68248eebdbdb53e6ce8ffccac3413cc9/ba22d/style-guide-component-selector.jpg\"\n        data-srcset=\"/static/68248eebdbdb53e6ce8ffccac3413cc9/16841/style-guide-component-selector.jpg 275w,\n/static/68248eebdbdb53e6ce8ffccac3413cc9/50c97/style-guide-component-selector.jpg 550w,\n/static/68248eebdbdb53e6ce8ffccac3413cc9/ba22d/style-guide-component-selector.jpg 821w\"\n        sizes=\"(max-width: 821px) 100vw, 821px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>With the help of some CSS and JavaScript I was able to position a drop down list in the lower right corner as a way of jumping around the page. If and when I get to going full atomic design on the style guide, I may have to rethink this sort of navigation by giving it more precedence in the layout. But for now it does the trick…</p>\n<h4 id=\"stylesheet-tweaks\" style=\"position:relative;\"><a href=\"#stylesheet-tweaks\" aria-label=\"stylesheet tweaks permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Stylesheet tweaks</h4>\n<p>For the most part all of my components displayed correctly on the page. One of the benefits of building the style guide was that it pointed out components that weren’t as modular as I initial thought. Meaning some were bound to specific class names that when placed in different contexts lost their styling.</p>\n<p>There were also cases where I needed to add styles specific for the style guide in order for things to display correctly. The <code class=\"language-text\">colors</code> collection is a good example of that.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 900px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 44.72727272727273%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"UI colors screenshot\"\n        title=\"UI colors screenshot\"\n        data-src=\"/static/b74e202ec967e4ecd039ca794572e1df/929af/style-guide-ui-colors.png\"\n        data-srcset=\"/static/b74e202ec967e4ecd039ca794572e1df/39133/style-guide-ui-colors.png 275w,\n/static/b74e202ec967e4ecd039ca794572e1df/50322/style-guide-ui-colors.png 550w,\n/static/b74e202ec967e4ecd039ca794572e1df/929af/style-guide-ui-colors.png 900w\"\n        sizes=\"(max-width: 900px) 100vw, 900px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>My goal here was to avoid hard coding color values into each document, and instead leverage the color variables already set in <code class=\"language-text\">/assets/stylesheets/_variables.scss</code> to keep things <a href=\"http://en.wikipedia.org/wiki/Don%27t_repeat_yourself\">DRY</a>.</p>\n<p>To achieve this I used a <a href=\"https://www.rubydoc.info/gems/sass/Sass/Script/Value/Map.html\">SassScript map</a> of all the color variables found on the site along with some CSS to build the swatch tiles. </p>\n<div class=\"gatsby-highlight\" data-language=\"scss\"><pre class=\"language-scss\"><code class=\"language-scss\"><span class=\"token comment\">/*\n   Color swatches\n   ========================================================================== */</span>\n\n<span class=\"token selector\">.color-tile </span><span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">@include</span> <span class=\"token function\">span-columns</span><span class=\"token punctuation\">(</span>4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">@include</span> <span class=\"token function\">omega</span><span class=\"token punctuation\">(</span>3n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">margin-bottom</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$gutter</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$gutter</span> 0<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">text-align</span><span class=\"token punctuation\">:</span> center<span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$border-radius</span><span class=\"token punctuation\">;</span>\n  <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token variable\">$border-color</span><span class=\"token punctuation\">;</span>\n  <span class=\"token selector\">code </span><span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">@include</span> <span class=\"token function\">font-size</span><span class=\"token punctuation\">(</span>16<span class=\"token punctuation\">,</span>no<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$text-color</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> nowrap<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">margin</span><span class=\"token punctuation\">:</span> 0 2px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">padding</span><span class=\"token punctuation\">:</span> 0 5px<span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border</span><span class=\"token punctuation\">:</span> 1px solid <span class=\"token variable\">$code-border-color</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">background-color</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$inline-code-background</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">border-radius</span><span class=\"token punctuation\">:</span> <span class=\"token variable\">$code-border-radius</span><span class=\"token punctuation\">;</span>\n    <span class=\"token property\">white-space</span><span class=\"token punctuation\">:</span> normal<span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<h2 id=\"maintaining-the-style-guide\" style=\"position:relative;\"><a href=\"#maintaining-the-style-guide\" aria-label=\"maintaining the style guide permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Maintaining the style guide</h2>\n<p>Updating and adding components to the style guide should be as simple as creating a new Markdown file and placing it in the <code class=\"language-text\">_components</code> folder. In a perfect world I would never have to touch the <code class=\"language-text\">.md</code> files of existing components. Cosmetic changes made to Sass files should ripple throughout the site without my intervention. Unfortunately, for those components that undergo markup changes, I’ll have repeat myself and edit two files… something that shouldn’t happen too frequently.</p>\n<p>As always <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/\">my code is available on GitHub</a> for download and forking. The Style Guide is integrated with the rest of Made Mistakes so you may have to rip out some stuff if you end up using it. </p>\n<p>Be sure and let me know if this has been useful. If I get enough feedback I’ll consider breaking it out into its own repository for easier forking.</p>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>A feature added to Jekyll in <a href=\"http://jekyllrb.com/docs/history/#v2-0-0\">version 2.0.0</a> allowing you to define new types of documents that behave like <a href=\"http://jekyllrb.com/docs/pages/\">Pages</a> or <a href=\"http://jekyllrb.com/docs/posts/\">Posts</a>, while also having their own unique properties and name-spaces.</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p>I’m using the excellent <a href=\"https://github.com/jekyll/jekyll-assets\">Jekyll 3 Assets</a> plugin for a Rails-like asset pipeline to run <a href=\"https://github.com/postcss/autoprefixer\">AutoPrefixer</a>, minify and MD5 fingerprint CSS/JavaScript assets, and some other useful stuff.</p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-3\">\n<p>Component type is set in the YAML Front Matter. eg: buttons, notices, media, typography, etc.</p>\n<a href=\"#fnref-3\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","excerpt":"Building a living style guide that details all of the colors, typographic elements, UI patterns, and components used on Made Mistakes has…","timeToRead":10,"tableOfContents":"<ul>\n<li><a href=\"/articles/jekyll-style-guide/#keep-it-simple\">Keep it simple</a></li>\n<li>\n<p><a href=\"/articles/jekyll-style-guide/#building-the-style-guide\">Building the style guide</a></p>\n<ul>\n<li><a href=\"/articles/jekyll-style-guide/#configure-collections\">Configure collections</a></li>\n<li><a href=\"/articles/jekyll-style-guide/#display-components-and-color-palettes\">Display components and color palettes</a></li>\n</ul>\n</li>\n<li><a href=\"/articles/jekyll-style-guide/#maintaining-the-style-guide\">Maintaining the style guide</a></li>\n</ul>"},"comments":{"edges":[{"node":{"id":"9f9984c3-5366-54c2-bc0a-7abc0c4793f8","frontmatter":{"name":"Moritz \"mo.\" Sauer","email":null,"friendlyDate":"February 13, 2015","iso8601Date":"2015-02-13T20:13:39.000Z","published":null},"html":"<p>Hey Michael! Thank you for sharing. Since I saw the\n<a href=\"http://ux.mailchimp.com/patterns\">pattern library by Mail Chimp</a> I wanted to\ncreate a styleguide and already began. Like you, I want to do it with Jekyll.\nBut doing it with a dedicated collection didn’t cross my mind. Thank you for all\nyour insights. Thank you for sharing your ideas and knowledge.</p>"}},{"node":{"id":"d6622d85-b81c-5fd7-afb0-d7acfe46484b","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"February 17, 2015","iso8601Date":"2015-02-17T15:48:14.000Z","published":null},"html":"<p>Excellent. Glad it was helpful!</p>"}},{"node":{"id":"84e26c6e-1e05-56c3-b71c-171b4288a247","frontmatter":{"name":"Karlon Cromwell","email":null,"friendlyDate":"April 22, 2015","iso8601Date":"2015-04-22T16:42:22.000Z","published":null},"html":"<p>Hey Michael how hard would it be to install Jekyll on digital ocean (or a VPS)?</p>"}},{"node":{"id":"125d2300-dc29-556d-afcb-a8c8d861914a","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"April 22, 2015","iso8601Date":"2015-04-22T16:44:56.000Z","published":null},"html":"<p>I feel like I’ve seen some blog posts talking about how to do it if you Google\naround. But personally I don’t have experience with it. I’ve only ever built\nlocally and rsync’d my content or used GitHub Pages.</p>"}},{"node":{"id":"b680a19b-61dd-527f-9c25-81b652a1898a","frontmatter":{"name":"Karlon Cromwell","email":null,"friendlyDate":"April 22, 2015","iso8601Date":"2015-04-22T17:00:33.000Z","published":null},"html":"<p>Let me try it and see.</p>"}},{"node":{"id":"e38939a9-3d6c-5424-a086-d18d59eda8ab","frontmatter":{"name":"Karlon Cromwell","email":null,"friendlyDate":"January 04, 2016","iso8601Date":"2016-01-04T11:53:54.000Z","published":null},"html":"<p>Not good :(</p>"}},{"node":{"id":"c8679f61-e8a9-5f30-8a54-5701c0c4e647","frontmatter":{"name":"RELSA","email":"9d6e1795705b314d834c768623e62a3d","friendlyDate":"September 18, 2016","iso8601Date":"2016-09-18T00:58:48.618Z","published":null},"html":"<p>Cool thing !</p>"}},{"node":{"id":"902884b6-738e-553b-bfe1-96dd6b72269c","frontmatter":{"name":"Ivan","email":"a2f305dcdc125ddffdfcb18516f19ef1","friendlyDate":"December 01, 2016","iso8601Date":"2016-12-01T13:01:57.922Z","published":null},"html":"<p>As always this is goldmine! Thank you for the time you put in to research and\nshare Jekyll tips!</p>\n<p>Did you figure out how to use rendered collection documents (<code class=\"language-text\">output: true</code>) as\nincludes? Seems that this way there’d be a single point of reference for every\ncomponent. Both the styleguide and the UI would be using the same component code\nand changes to component markup would have to be done only once.</p>"}},{"node":{"id":"8302d088-9509-5eac-87c2-b0b25eec4a48","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"December 01, 2016","iso8601Date":"2016-12-01T18:38:54.926Z","published":null},"html":"<p>The thought never occurred to me to output the collection documents as includes.\nThat would be pretty cool if you could output to <code class=\"language-text\">_includes</code> to DRY things up.</p>\n<p>But I get the feeling that folder is probably reserved by Jekyll, or that it\nwould end up outputting to <code class=\"language-text\">_site/_includes</code> which wouldn’t help.</p>\n<p>Worth some testing though.</p>"}},{"node":{"id":"982b9a43-0aa6-5de0-b59d-5ffc7e6490f3","frontmatter":{"name":"Ivan","email":"a2f305dcdc125ddffdfcb18516f19ef1","friendlyDate":"December 02, 2016","iso8601Date":"2016-12-02T01:18:36.708Z","published":null},"html":"<p>Hey Michael, thanks for replying!</p>\n<p>Just thought of another slightly quirky way of achieving this DRY-ness.</p>\n<p>What if a component markup is stored in <code class=\"language-text\">_includes/components/btn.html</code> and the\ncollection document includes it via\n<code class=\"language-text\">{% include components/btn.html text=&quot;click me&quot; %}</code>? This could also be a nudge\nto liquidify the components for reuse in multiple contexts (e.g., same button\nwith different copy)</p>"}},{"node":{"id":"c0498728-ded0-5271-b93a-f06d4256eda8","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"December 02, 2016","iso8601Date":"2016-12-02T03:21:24.373Z","published":null},"html":"<p>This is exactly how Hugo Giraudel proposes\n<a href=\"https://www.sitepoint.com/setting-up-a-living-styleguide-in-jekyll/\">building a living style guide with Jekyll</a>.\nIt’s something I’ve been meaning to adapt for my site, just haven’t had the\ntime.</p>"}},{"node":{"id":"5c04e125-a4ce-5443-8af0-39626926b6fb","frontmatter":{"name":"Matt G","email":"f1a625b44f5dcff994266b4998905d87","friendlyDate":"October 30, 2017","iso8601Date":"2017-10-30T16:30:22.937Z","published":null},"html":"<p>A bit late to the conversation, but I want to note that you can include Markdown\nin the Frontmatter in an HTML by using a pipe to escape the content. This is\nwhat I used for my Jekyll styleguide</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\">field: | Markdown can be used <span class=\"token italic\"><span class=\"token punctuation\">_</span><span class=\"token content\">here</span><span class=\"token punctuation\">_</span></span></code></pre></div>\n<p><code class=\"language-text\">{{ page.field | markdownify }}</code></p>"}}]}},"pageContext":{"next":{"frontmatter":{"path":"/paperfaces/kapi-m-portrait/","title":"Oh Eye Dunno","categories":["paperfaces"],"tags":["portrait","illustration","Paper for iOS","Sktchy"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/paperfaces/kapi-m-portrait.md"},"previous":{"frontmatter":{"path":"/paperfaces/kalani-o-portrait/","title":"Bubble Bubble","categories":["paperfaces"],"tags":["portrait","illustration","Paper for iOS","Sktchy","black and white"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/paperfaces/kalani-o-portrait.md"}}}}