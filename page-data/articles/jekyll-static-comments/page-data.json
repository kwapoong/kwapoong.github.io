{"componentChunkName":"component---src-templates-post-js","path":"/articles/jekyll-static-comments/","result":{"data":{"markdownRemark":{"frontmatter":{"title":"Going static part 2: static comments","date":"2016-08-21T00:00:00.000Z","date_pretty":"August 21st, 2016","date_from_now":"4 years ago","last_modified_at":"2018-03-22T14:45:51.000Z","last_modified_at_from_now":"2 years ago","path":"/articles/jekyll-static-comments/","author":null,"excerpt":"Integrating a static-based commenting system into Jekyll with the help of Staticman and ditching Disqus in the process.","tags":["Jekyll","web development","GitHub","open source","tutorial"],"image":{"childImageSharp":{"fluid":{"aspectRatio":1.7741935483870968,"src":"/static/a60049aa80c6ab2903d48d2026549b78/fc20c/going-static-comments-feature.jpg","srcSet":"/static/a60049aa80c6ab2903d48d2026549b78/6e883/going-static-comments-feature.jpg 275w,\n/static/a60049aa80c6ab2903d48d2026549b78/a09ef/going-static-comments-feature.jpg 550w,\n/static/a60049aa80c6ab2903d48d2026549b78/fc20c/going-static-comments-feature.jpg 1100w,\n/static/a60049aa80c6ab2903d48d2026549b78/9352a/going-static-comments-feature.jpg 1600w","sizes":"(max-width: 1100px) 100vw, 1100px"},"fixed":{"src":"/static/a60049aa80c6ab2903d48d2026549b78/fc20c/going-static-comments-feature.jpg","height":619,"width":1100}}},"toc":true,"comments":true,"comments_locked":true,"hide_meta":null},"id":"c8547b2a-b94a-5d3e-b006-c62d05d8889c","html":"<p>Offloading comments to an external service like Disqus<sup id=\"fnref-1\"><a href=\"#fn-1\" class=\"footnote-ref\">1</a></sup> has always felt like a necessary evil to me when building Jekyll sites.</p>\n<p>Convenient to embed a small bit of <code class=\"language-text\">&lt;script&gt;</code> voodoo into your pages, sure. But kiss goodbye to controlling the user experience, look and feel, data, and privacy. The alternatives haven’t been all that great for the statically-minded unless you were willing to make some compromises…</p>\n<h2 id=\"self-hosted-comment-systems\" style=\"position:relative;\"><a href=\"#self-hosted-comment-systems\" aria-label=\"self hosted comment systems permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Self hosted comment systems</h2>\n<p><a href=\"https://posativ.org/isso/\"><strong>Isso</strong></a><sup id=\"fnref-2\"><a href=\"#fn-2\" class=\"footnote-ref\">2</a></sup> describes itself as “commenting software similar to Disqus.” You host a SQLite database and embed some JavaScript on your pages (just like Disqus and friends) and you’re ready to roll. After freeing my content from Wordpress and ”<a href=\"/articles/going-static/\">going static</a>” I really didn’t want to manage a database again just to have comments on my site. So these solutions were out.</p>\n<h2 id=\"static-comments\" style=\"position:relative;\"><a href=\"#static-comments\" aria-label=\"static comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Static comments</h2>\n<p>What I really was searching for was a commenting system to compliment the rest of my Jekyll generated site.</p>\n<p>Over the years I’ve come across <a href=\"https://tlvince.com/static-commenting\">several solutions</a> that seemed promising: </p>\n<ul>\n<li>Use <code class=\"language-text\">mailto</code> links (how very retro) to email comments for inclusion into post.</li>\n<li>Use PHP to do something similar.</li>\n<li>Leverage <a href=\"http://ivanzuzak.info/2011/02/18/github-hosted-comments-for-github-hosted-blogs.html\">GitHub’s issue tracker</a>.</li>\n</ul>\n<p>Jekyll plugins like <a href=\"http://theshed.hezmatt.org/jekyll-static-comments/\"><strong>Jekyll::StaticComments</strong></a> and <a href=\"http://ivanzuzak.info/2011/02/18/github-hosted-comments-for-github-hosted-blogs.html\"><strong>Jekyll AWS Comments</strong></a> were pretty close to what I was looking for. A PHP <code class=\"language-text\">&lt;form&gt;</code> captures a comment, converts into YAML and emails it over to be placed in a prescribed location. Then with the help of a Liquid <code class=\"language-text\">for</code> loop, comments are displayed on the appropriate pages.</p>\n<p>I can’t really explain it, but something about using PHP with Jekyll felt off to me. And so I didn’t pull the trigger on these solutions either.</p>\n<p>It wasn’t until I discovered Eduardo Bouças’s blog post ”<a href=\"https://eduardoboucas.com/blog/2015/05/11/rethinking-the-commenting-system-for-my-jekyll-site.html\"><em>Rethinking the Comment System for My Jekyll Site</em></a>” and the launch of <a href=\"https://staticman.net/\"><strong>Staticman</strong></a> 2.0 that I finally decided to ditch Disqus. Starting the process of migrating years of comment data and integrating them into the rest of my site’s statically generated content. </p>\n<h3 id=\"enter-staticman\" style=\"position:relative;\"><a href=\"#enter-staticman\" aria-label=\"enter staticman permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Enter Staticman</h3>\n<p>On paper and in practice Staticman was just the app I was looking for to power static-based commenting on my site.</p>\n<ul>\n<li>Designed to work with <a href=\"http://jekyllrb.com/\"><strong>Jekyll</strong></a> and <a href=\"https://pages.github.com/\"><strong>GitHub Pages</strong></a>.</li>\n<li>Free and open source. Run it on your own server as a Node.js app or go the free hosted route.</li>\n<li>Complete control over the data/content, user experience, and user interface.</li>\n<li>Not just for comments! Perfect for any sort of user generated content: <em>reviews</em>, <em>comments</em>, <em>polls</em>, and more.</li>\n<li>User submitted content can be merged in automatically or moderated.</li>\n</ul>\n<h3 id=\"getting-started\" style=\"position:relative;\"><a href=\"#getting-started\" aria-label=\"getting started permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Getting started</h3>\n<p>Much like building my first Jekyll site, I found the process of integrating Staticman into my workflow very rewarding. It was nice to get dirty again crafting markup, styling <code class=\"language-text\">&lt;form&gt;</code>s, and giving comments a feel that fit the rest of my site.</p>\n<p>Thankfully I didn’t have to start from scratch as I was able to draw inspiration from the Staticman demo site — <a href=\"https://github.com/eduardoboucas/popcorn\"><strong>Popcorn</strong></a> and <a href=\"https://github.com/eduardoboucas/eduardoboucas.github.io\">Eduardo Bouças’s</a> personal site. The documentation for Staticman does a good job of explaining <a href=\"https://staticman.net/docs/\">how to set things up</a> so definitely give that a read first to familiarize yourself with what the app can do.</p>\n<h3 id=\"building-the-form\" style=\"position:relative;\"><a href=\"#building-the-form\" aria-label=\"building the form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Building the form</h3>\n<p>I set my gaze on squaring away the “Leave a comment” submission form first. Seemed like an easy target as the styling of various form elements like <code class=\"language-text\">&lt;input&gt;</code>, <code class=\"language-text\">&lt;label&gt;</code>, <code class=\"language-text\">&lt;textarea&gt;</code> and buttons] were already done as part of my <a href=\"/articles/jekyll-style-guide/\">living style guide</a>. </p>\n<p>All it really needed for completion was a decision on what fields I wanted to capture, and a little bit of JavaScript for events handling and submission. Arriving at this for my <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/10.2.0/_includes/post__comments.html\"><code class=\"language-text\">post__comments.html</code></a> include (<code class=\"language-text\">class</code> names and Liquid removed for brevity).</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>form</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">method</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>post<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">action</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://api.staticman.net/v1/entry/{{ site.repository }}/{{ site.staticman.branch }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-message<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Comment<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>textarea</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">rows</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-message<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fields[message]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>1<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>textarea</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Name<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-name<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fields[name]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-email<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Email address<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-email<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fields[email]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>3<span class=\"token punctuation\">\"</span></span> <span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Website<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-url<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fields[url]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>4<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span><span class=\"token style-attr language-css\"><span class=\"token attr-name\"> <span class=\"token attr-name\">style</span></span><span class=\"token punctuation\">=\"</span><span class=\"token attr-value\"><span class=\"token property\">display</span><span class=\"token punctuation\">:</span>none<span class=\"token punctuation\">;</span></span><span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- used by Staticman to generate filenames for each comment --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>hidden<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>options[slug]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">value</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>{{ page.slug }}<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token comment\">&lt;!-- honey pot field used to filter out spam --></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>label</span> <span class=\"token attr-name\">for</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-location<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Not used. Leave blank if you are a human.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>label</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>input</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-location<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">name</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>fields[hidden]<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">autocomplete</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>off<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">/></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>fieldset</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>button</span> <span class=\"token attr-name\">type</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment-form-submit<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">tabindex</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>5<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Submit Comment<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>button</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>fieldset</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>form</span><span class=\"token punctuation\">></span></span>\n<span class=\"token comment\">&lt;!-- End new comment form --></span></code></pre></div>\n<p>Staticman’s documentation covers this in more detail, but essentially I’m adding <code class=\"language-text\">fields[]</code> values to the <code class=\"language-text\">name</code> attributes. <code class=\"language-text\">message</code>, <code class=\"language-text\">name</code>, <code class=\"language-text\">email</code>, and <code class=\"language-text\">url</code> fields are then used to generate a .yml similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"![Bill Murray](http://www.fillmurray.com/400/300)\\r\\n\\r\\n“It's hard to be an artist. It's hard to be anything. It's hard to be.”\"</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Bill Murray\n<span class=\"token key atrule\">email</span><span class=\"token punctuation\">:</span> b0caa2a71f5066b3d90711c224578c21\n<span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n<span class=\"token key atrule\">hidden</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2016-08-11T19:33:25.928Z'</span></code></pre></div>\n<p>A note on <code class=\"language-text\">hidden</code> and <code class=\"language-text\">date</code> fields you may have noticed in the sample comment above:</p>\n<p><strong><code class=\"language-text\">hidden</code></strong> is used as a spam deterrent in the form of a honeypot. The thought is a human wouldn’t fill out an input they can’t see, but a spam bot may. Adding <code class=\"language-text\">fields[hidden]</code> to this input and not placing it in the <code class=\"language-text\">allowedFields</code> array in our Jekyll config, instructs Staticman to reject the entry. Hopefully filtering out bots who are dumb enough to populate it with something.</p>\n<p><strong><code class=\"language-text\">date</code></strong> is captured when the entry is generated by Staticman. Its format can be changed from <code class=\"language-text\">iso8601</code> (default) to <code class=\"language-text\">timestamp-seconds</code> or <code class=\"language-text\">timestamp-milliseconds</code>.</p>\n<h4 id=\"interactions-and-state\" style=\"position:relative;\"><a href=\"#interactions-and-state\" aria-label=\"interactions and state permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Interactions and state</h4>\n<p>Using Popcorn’s <a href=\"https://github.com/eduardoboucas/popcorn/blob/gh-pages/js/main.js\"><code class=\"language-text\">main.js</code></a> as a guide I <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/30e10cce7836b38ea2d7f570573ac748fa7ba12e/_assets/javascripts/main.js#L128-L164\">added all the AJAX goodness</a>, alert messaging, along with <code class=\"language-text\">disabled</code> and loading form states. </p>\n<p>To avoid disrupting the flow too much I went with inline alert messaging directly above the <strong>submit button</strong>.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 1023px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 58.54545454545455%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"Inline comment form alert example\"\n        title=\"Inline comment form alert example\"\n        data-src=\"/static/c230d558f00f996c2d4d7a458b40827a/b3d91/mm-comment-inline-alert.png\"\n        data-srcset=\"/static/c230d558f00f996c2d4d7a458b40827a/39133/mm-comment-inline-alert.png 275w,\n/static/c230d558f00f996c2d4d7a458b40827a/50322/mm-comment-inline-alert.png 550w,\n/static/c230d558f00f996c2d4d7a458b40827a/b3d91/mm-comment-inline-alert.png 1023w\"\n        sizes=\"(max-width: 1023px) 100vw, 1023px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>And to improve the user experience upon submission the submit button’s text changes to <code class=\"language-text\">Loading...</code>, becomes disabled, and an animated SVG icon inserted for bit of extra flare.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token function\">$</span><span class=\"token punctuation\">(</span>form<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addClass</span><span class=\"token punctuation\">(</span><span class=\"token string\">'disabled'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token function\">$</span><span class=\"token punctuation\">(</span><span class=\"token string\">'#comment-form-submit'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">html</span><span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;svg class=\"icon spin\">&lt;use xlink:href=\"#icon-loading\">&lt;/use>&lt;/svg> Loading...'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p><img src=\"/2b6822d2aae08db61668de75815146ab/mm-submit-comment-loading.gif\" alt=\"Submit button loading animation\"></p>\n<p>If the form is successfully submitted a message appears notifying the user that the comment has been received and is pending moderation. Since my site takes a bit to generate with Jekyll I felt it necessary to convey this to the user, hopefully avoiding duplicate submissions. </p>\n<p>With smaller sites hosted with GitHub Pages this becomes less of a problem, as they build much faster. Especially true if you decide to go with the auto merge option and skip <a href=\"https://github.com/eduardoboucas/staticman#moderation-required\">moderating comments</a>.</p>\n<p><img src=\"/a905b7e669ff085f9e74fecab48e0b3a/mm-submit-comment-success.gif\" alt=\"Form submit success animation\"></p>\n<h3 id=\"displaying-comments\" style=\"position:relative;\"><a href=\"#displaying-comments\" aria-label=\"displaying comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Displaying comments</h3>\n<p>There’s a bunch of Staticman settings available to you, but forget all that right now. For this next step all you really need to know is <strong>static comment files will live in <code class=\"language-text\">_data/comments/&lt;post slug&gt;/</code></strong>. By predictably placing them here we will be able to access their contents from the following array: <code class=\"language-text\">site.data.comments[page.slug]</code>.</p>\n<p>With this array we’ll be looping through it with <a href=\"https://help.shopify.com/themes/liquid/tags/iteration-tags#for\"><code class=\"language-text\">for</code></a> just like you would with <code class=\"language-text\">site.posts</code> to spit out a list of all posts. But first we’ll use an <a href=\"https://help.shopify.com/themes/liquid/tags/variable-tags#assign\"><code class=\"language-text\">assign</code></a> tag to rename the array and apply a <code class=\"language-text\">sort</code><sup id=\"fnref-3\"><a href=\"#fn-3\" class=\"footnote-ref\">3</a></sup> filter on the objects. This will order them by filename, which in our case should be chronological<sup id=\"fnref-4\"><a href=\"#fn-4\" class=\"footnote-ref\">4</a></sup>.</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> comments <span class=\"token operator\">=</span> site.data.comments[page.slug] <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">%</span>}\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> <span class=\"token keyword\">comment</span> <span class=\"token keyword\">in</span> comments <span class=\"token operator\">%</span>}\n  show a <span class=\"token keyword\">comment</span>\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">endfor</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<p>Since I’m capturing <code class=\"language-text\">message</code>, <code class=\"language-text\">name</code>, <code class=\"language-text\">email</code>, and <code class=\"language-text\">url</code> in the comment form these will be the same fields I’ll want to pull from to build each comment. Using an <a href=\"https://help.shopify.com/themes/liquid/tags/variable-tags#assign\"><code class=\"language-text\">assign</code></a> tag again we’ll cleanup variable names like <code class=\"language-text\">comment[1].avatar</code> into just <code class=\"language-text\">avatar</code>. Which will then be used to <a href=\"https://jekyllrb.com/docs/templates/#includes\">pass parameters</a> into the <a href=\"https://github.com/mmistakes/made-mistakes-jekyll/blob/10.2.0/_includes/comment.html\"><code class=\"language-text\">comment.html</code></a> include:</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> comments <span class=\"token operator\">=</span> site.data.comments[page.slug] <span class=\"token operator\">|</span> <span class=\"token function\">sort</span> <span class=\"token operator\">%</span>}\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">for</span> <span class=\"token keyword\">comment</span> <span class=\"token keyword\">in</span> comments <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> avatar <span class=\"token operator\">=</span> <span class=\"token keyword\">comment</span>[<span class=\"token number\">1</span>].avatar <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> email <span class=\"token operator\">=</span> <span class=\"token keyword\">comment</span>[<span class=\"token number\">1</span>].email <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> name <span class=\"token operator\">=</span> <span class=\"token keyword\">comment</span>[<span class=\"token number\">1</span>].name <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> url <span class=\"token operator\">=</span> <span class=\"token keyword\">comment</span>[<span class=\"token number\">1</span>].url <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> <span class=\"token function\">date</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">comment</span>[<span class=\"token number\">1</span>].date <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token keyword\">assign</span> message <span class=\"token operator\">=</span> <span class=\"token keyword\">comment</span>[<span class=\"token number\">1</span>].message <span class=\"token operator\">%</span>}\n  {<span class=\"token operator\">%</span> <span class=\"token function\">include</span> <span class=\"token keyword\">comment</span>.html index<span class=\"token operator\">=</span>forloop.index avatar<span class=\"token operator\">=</span>avatar email<span class=\"token operator\">=</span>email name<span class=\"token operator\">=</span>name url<span class=\"token operator\">=</span>url <span class=\"token function\">date</span><span class=\"token operator\">=</span><span class=\"token function\">date</span> message<span class=\"token operator\">=</span>message <span class=\"token operator\">%</span>}\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">endfor</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<p>If done correctly the values and strings in a data file like <code class=\"language-text\">_data/comments/basics/comment-2014-02-10-040840.yml</code></p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> comment<span class=\"token punctuation\">-</span><span class=\"token number\">1237690364</span>\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2014-02-10 04:08:40 +0000'</span>\n<span class=\"token key atrule\">updated</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2014-02-10 04:08:40 +0000'</span>\n<span class=\"token key atrule\">post_id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/basics\"</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Tamara\n<span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n<span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"This? This is freakin' awesome! Thanks so much for sharing your mad skills and expertise with us!\"</span></code></pre></div>\n<p>Should populate <code class=\"language-text\">_includes/comment.html</code> and spit out as the following HTML:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\"><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>article</span> <span class=\"token attr-name\">id</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>js-comment comment<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">itemprop</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">itemscope</span> <span class=\"token attr-name\">itemtype</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://schema.org/Comment<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment__avatar-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>img</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment__avatar<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://www.gravatar.com/avatar/?d=mm<span class=\"token entity\" title=\"&amp;\">&amp;amp;</span>s=50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">srcset</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>https://www.gravatar.com/avatar/?d=mm<span class=\"token entity\" title=\"&amp;\">&amp;amp;</span>s=100 2x<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">alt</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>Tamara<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">height</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">width</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>50<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment__content-wrapper<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>h3</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment__author<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">itemprop</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>author<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">itemscope</span> <span class=\"token attr-name\">itemtype</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>http://schema.org/Person<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>span</span> <span class=\"token attr-name\">itemprop</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>name<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>Tamara<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>span</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>h3</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">class</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>comment__date<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>a</span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>#comment1<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">itemprop</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>url<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>time</span> <span class=\"token attr-name\">datetime</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>2014-02-09T23:08:40-05:00<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">itemprop</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>datePublished<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span>February 09, 2014 at 11:08 PM<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>time</span><span class=\"token punctuation\">></span></span>\n      <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>a</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n    <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>div</span> <span class=\"token attr-name\">itemprop</span><span class=\"token attr-value\"><span class=\"token punctuation\">=</span><span class=\"token punctuation\">\"</span>text<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span>This? This is freakin’ awesome! Thanks so much for sharing your mad skills and expertise with us!<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n  <span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>div</span><span class=\"token punctuation\">></span></span>\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>article</span><span class=\"token punctuation\">></span></span></code></pre></div>\n<p>Looking like this when styled with <code class=\"language-text\">CSS</code>:</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 1000px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 27.999999999999996%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"Comment example\"\n        title=\"Comment example\"\n        data-src=\"/static/21386a4c88e671827782ae75fda3525c/ea415/mm-comment-example.png\"\n        data-srcset=\"/static/21386a4c88e671827782ae75fda3525c/39133/mm-comment-example.png 275w,\n/static/21386a4c88e671827782ae75fda3525c/50322/mm-comment-example.png 550w,\n/static/21386a4c88e671827782ae75fda3525c/ea415/mm-comment-example.png 1000w\"\n        sizes=\"(max-width: 1000px) 100vw, 1000px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>There’s not much magic in the <code class=\"language-text\">comment.html</code> include — some <a href=\"https://schema.org/Comment\">structured data</a> markup sprinkled about and a few Liquid conditionals for displaying author avatars and URLs.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">ProTip: encode email addresses as MD5 hashes</div><div class=\"custom-block-body\"><p>Staticman supports <a href=\"https://github.com/eduardoboucas/staticman#transforms\">transforming a string</a> into a MD5 hash. By doing this you avoid compromising a commenter’s email address in what could potentially be accessible from a public GitHub repo. These hashed emails also have the benefit of being used with <a href=\"https://en.gravatar.com/site/implement/hash/\"><strong>Gravatar</strong></a> to pull in avatar images.</p></div></div>\n<h3 id=\"setting-up-staticman\" style=\"position:relative;\"><a href=\"#setting-up-staticman\" aria-label=\"setting up staticman permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Setting up Staticman</h3>\n<p>With the front-end portion of my <em>static-based comment system</em> squared away, it was time to configure Staticman. Because I went with the hosted version, it only took a few quick steps to setup.</p>\n<h4 id=\"adding-staticman-as-a-collaborator\" style=\"position:relative;\"><a href=\"#adding-staticman-as-a-collaborator\" aria-label=\"adding staticman as a collaborator permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Adding Staticman as a collaborator</h4>\n<p>First you need to grant Staticman access to your Jekyll repository on GitHub. You don’t have to actually host the site there (I use <a href=\"http://bit.ly/1Ugg7nN\">Media Temple</a> for that), but it does need to be a <a href=\"https://jekyllrb.com/docs/structure/\">standard Jekyll site</a> with valid <code class=\"language-text\">_config.yml</code>.</p>\n<p>Following the docs I added GitHub username <code class=\"language-text\">staticmanapp</code> as a collaborator and then pinged <code class=\"language-text\">https://api.staticman.net/v1/connect/{your GitHub username}/{your repository name}</code> as instructed to accept the invitation.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 1038px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 22.909090909090914%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"staticmanapp as collaborator\"\n        title=\"staticmanapp as collaborator\"\n        data-src=\"/static/ae78721fcec1ca42e9e559dfdab44ef0/e84d3/staticman-collaborator.png\"\n        data-srcset=\"/static/ae78721fcec1ca42e9e559dfdab44ef0/39133/staticman-collaborator.png 275w,\n/static/ae78721fcec1ca42e9e559dfdab44ef0/50322/staticman-collaborator.png 550w,\n/static/ae78721fcec1ca42e9e559dfdab44ef0/e84d3/staticman-collaborator.png 1038w\"\n        sizes=\"(max-width: 1038px) 100vw, 1038px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<h4 id=\"configuring-staticman\" style=\"position:relative;\"><a href=\"#configuring-staticman\" aria-label=\"configuring staticman permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Configuring Staticman</h4>\n<p>Staticman is configured by settings defined in your Jekyll <code class=\"language-text\">_config.yml</code> under a <code class=\"language-text\">staticman</code> object. There’s a whole <a href=\"https://github.com/eduardoboucas/staticman#jekyll-configuration\">list of stuff</a> you can configure — the important stuff being <code class=\"language-text\">allowedFields</code>, <code class=\"language-text\">branch</code>, <code class=\"language-text\">format</code>, <code class=\"language-text\">moderation</code>, and <code class=\"language-text\">path</code>.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Branch setting</div><div class=\"custom-block-body\"><p>This is the branch comment files will be sent to via pull requests. If you host your site on GitHub Pages it will likely be <code class=\"language-text\">master</code> or <code class=\"language-text\">gh-pages</code>. If you’re unsure check the <a href=\"https://help.github.com/articles/configuring-a-publishing-source-for-github-pages/\"><strong>Configuring a Publishing Source</strong></a> documentation to refresh your memory.</p></div></div>\n<p>There’s also an undocumented <code class=\"language-text\">generatedFields</code><sup id=\"fnref-5\"><a href=\"#fn-5\" class=\"footnote-ref\">5</a></sup> setting that is useful for time stamping each file Staticman creates.</p>\n<p>I ended up with the following settings in my <code class=\"language-text\">_config.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">staticman</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">allowedFields</span>          <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'url'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">branch</span>                 <span class=\"token punctuation\">:</span> <span class=\"token string\">\"master\"</span>\n  <span class=\"token key atrule\">commitMessage</span>          <span class=\"token punctuation\">:</span> <span class=\"token string\">\"New comment.\"</span>\n  <span class=\"token key atrule\">filename</span>               <span class=\"token punctuation\">:</span> comment<span class=\"token punctuation\">-</span><span class=\"token punctuation\">{</span>@timestamp<span class=\"token punctuation\">}</span>\n  <span class=\"token key atrule\">format</span>                 <span class=\"token punctuation\">:</span> <span class=\"token string\">\"yml\"</span>\n  <span class=\"token key atrule\">moderation</span>             <span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span>\n  <span class=\"token key atrule\">path</span>                   <span class=\"token punctuation\">:</span> <span class=\"token string\">\"_data/comments/{options.slug}\"</span>\n  <span class=\"token key atrule\">requiredFields</span>         <span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'name'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'email'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'message'</span><span class=\"token punctuation\">]</span>\n  <span class=\"token key atrule\">transforms</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">email</span>                <span class=\"token punctuation\">:</span> <span class=\"token string\">\"md5\"</span>\n  <span class=\"token key atrule\">generatedFields</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span>\n      <span class=\"token key atrule\">type</span>               <span class=\"token punctuation\">:</span> <span class=\"token string\">\"date\"</span>\n      <span class=\"token key atrule\">options</span><span class=\"token punctuation\">:</span>\n        <span class=\"token key atrule\">format</span>           <span class=\"token punctuation\">:</span> <span class=\"token string\">\"iso8601\"</span></code></pre></div>\n<p>In case spam makes it through, I’d like another layer of “protection” to block it. Setting <code class=\"language-text\">moderation: true</code> will make Staticman send a pull request whenever a new comment entry is submitted. At this point you can examine the content inside of the PR and decide if you want to <strong>merge</strong> or <strong>close</strong> it.</p>\n<p>When hosting with GitHub Pages, a merge will instantly force Jekyll to rebuild the site — publishing the comment. Since I self host I have the extra step of pulling from <code class=\"language-text\">remote</code>, before building locally and <a href=\"/articles/using-jekyll-2016/#deployment\">deploying via rsync</a>.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">ProTip: webhooks for branch auto deletion</div><div class=\"custom-block-body\"><p>Avoid manually cleaning up Staticman generated branches. Create a GitHub webhook instead that sends a POST request to the following payload URL <code class=\"language-text\">https://api.staticman.net/v1/webhook</code> and triggers a <strong><code class=\"language-text\">pull_request</code></strong> event automatically to delete Staticman branches on merge or close.</p></div></div>\n<h3 id=\"hooking-up-the-form\" style=\"position:relative;\"><a href=\"#hooking-up-the-form\" aria-label=\"hooking up the form permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Hooking up the form</h3>\n<p>For your forms to work with Staticman they need to <code class=\"language-text\">POST</code> to:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">https://api.staticman.net/v1/entry/{your GitHub repository}/{your repository name}/{the name of the branch}`</code></pre></div>\n<p>Instead of hard-coding the site repository and branch strings into this endpoint, use <code class=\"language-text\">site</code> variables defined in <code class=\"language-text\">_config.yml</code> instead. eg: <code class=\"language-text\">{{ site.repository }}</code> and <code class=\"language-text\">{{ site.staticman.branch }}</code> respectively.</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token comment\"># sample _config.yml</span>\n\n<span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"mmistakes/made-mistakes-jekyll\"</span>\n<span class=\"token key atrule\">staticman</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"master\"</span></code></pre></div>\n<p>Hitting the Staticman endpoint should trigger the <strong>success</strong> and <strong>error</strong> messages in our comment <code class=\"language-text\">&lt;form&gt;</code>. Firing up the console in your browser of choice can also give you some more hints on what’s going on if you encounter any snags.</p>\n<p>For example if all of the required fields aren’t filled out an error like this could hit the console:</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\">Object <span class=\"token punctuation\">{</span>readyState<span class=\"token operator\">:</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> responseText<span class=\"token operator\">:</span> <span class=\"token string\">\"[{\"</span>code<span class=\"token string\">\":\"</span><span class=\"token constant\">MISSING_REQUIRED_FIELDS</span><span class=\"token string\">\",\"</span>data<span class=\"token string\">\":[\"</span>name<span class=\"token string\">\",\"</span>email<span class=\"token string\">\",\"</span>message<span class=\"token string\">\"]}]\"</span><span class=\"token punctuation\">,</span> responseJSON<span class=\"token operator\">:</span> Array<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> status<span class=\"token operator\">:</span> <span class=\"token number\">500</span><span class=\"token punctuation\">,</span> statusText<span class=\"token operator\">:</span> <span class=\"token string\">\"error\"</span><span class=\"token punctuation\">}</span></code></pre></div>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">ProTip: redirect after POST</div><div class=\"custom-block-body\"><p>To set a redirect URL for your form after comment submission, simply add a hidden <code class=\"language-text\">input</code> like so: <code class=\"language-text\">&lt;input type=&quot;hidden&quot; name=&quot;options[redirect]&quot; value=&quot;http://your-redirect-url.com&quot;&gt;</code>.</p></div></div>\n<h3 id=\"publishing-comments\" style=\"position:relative;\"><a href=\"#publishing-comments\" aria-label=\"publishing comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Publishing comments</h3>\n<p>If configured correctly you should receive a pull request notification on GitHub each time a comment entry is submitted. Look the commit over (if you’re moderating them) and <strong>merge pull request</strong> to accept or <strong>close</strong> to block it.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 785px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 48.36363636363637%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"Staticman pull request notifications on GitHub\"\n        title=\"Staticman pull request notifications on GitHub\"\n        data-src=\"/static/38be42c84132473af1808b00be877eda/0d045/staticman-github-pull-requests.png\"\n        data-srcset=\"/static/38be42c84132473af1808b00be877eda/39133/staticman-github-pull-requests.png 275w,\n/static/38be42c84132473af1808b00be877eda/50322/staticman-github-pull-requests.png 550w,\n/static/38be42c84132473af1808b00be877eda/0d045/staticman-github-pull-requests.png 785w\"\n        sizes=\"(max-width: 785px) 100vw, 785px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 1000px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 50.54545454545455%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"Staticman pull request merge on GitHub\"\n        title=\"Staticman pull request merge on GitHub\"\n        data-src=\"/static/fb566778031deff553543aa96e48826f/ea415/staticman-pull-request-merge.png\"\n        data-srcset=\"/static/fb566778031deff553543aa96e48826f/39133/staticman-pull-request-merge.png 275w,\n/static/fb566778031deff553543aa96e48826f/50322/staticman-pull-request-merge.png 550w,\n/static/fb566778031deff553543aa96e48826f/ea415/staticman-pull-request-merge.png 1000w\"\n        sizes=\"(max-width: 1000px) 100vw, 1000px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<hr>\n<h2 id=\"migrating-disqus-comments\" style=\"position:relative;\"><a href=\"#migrating-disqus-comments\" aria-label=\"migrating disqus comments permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Migrating Disqus comments</h2>\n<p>It was now time to deal with the 500+ Disqus comments I’ve accumulated. A good chunk of them had valuable content worth keeping, so I didn’t exactly want to dump them all.</p>\n<p>I came across a Rake task by <em>Patrick Hawks</em>, aptly named <a href=\"https://github.com/pathawks/jekyll-disqus-comments\"><strong>jekyll-disqus-comments</strong></a> that downloads Disqus posts as YAML files via the <a href=\"https://disqus.com/api/docs/\">Disqus API</a>.</p>\n<p>With <a href=\"https://github.com/mmistakes/jekyll-disqus-comments\">some modifications</a> I was able to get it working with my site and <code class=\"language-text\">_posts</code> files.</p>\n<h3 id=\"installing\" style=\"position:relative;\"><a href=\"#installing\" aria-label=\"installing permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Installing</h3>\n<p>Copy the following files to the root of your Jekyll project folder.</p>\n<ul>\n<li><a href=\"https://github.com/mmistakes/jekyll-disqus-comments/blob/master/_rake/disqus_comments.rake\"><code class=\"language-text\">_rake/disqus_comments.rake</code></a></li>\n<li><a href=\"https://github.com/mmistakes/jekyll-disqus-comments/blob/master/Rakefile\"><code class=\"language-text\">Rakefile</code></a> (Not necessary if you already have a Rakefile that loads <code class=\"language-text\">_rake/*</code>)</li>\n</ul>\n<h3 id=\"obtain-a-disqus-api-public-key\" style=\"position:relative;\"><a href=\"#obtain-a-disqus-api-public-key\" aria-label=\"obtain a disqus api public key permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Obtain a Disqus API public key</h3>\n<p>To use the plugin, you will need to obtain a <code class=\"language-text\">public key</code> from the <a href=\"http://disqus.com/api/applications/\">Disqus API</a> and add it to your <code class=\"language-text\">_config.yml</code>. You can do this by:</p>\n<p>Step 1. <a href=\"https://disqus.com/api/applications/register/\"><strong>Register new application</strong></a>.</p>\n<p>Step 2. <strong>Setup application</strong> using suggested configuration below:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Label: &lt;Name of application&gt; eg. Jekyll Disqus importer\nDescription: Convert comments into static files.\nWebsite:\nDomains: disqus.com\nDefault Access: Read only</code></pre></div>\n<p>Step 3. Add the following lines to your <code class=\"language-text\">_config.yml</code>:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">comments</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">disqus</span><span class=\"token punctuation\">:</span>\n    <span class=\"token key atrule\">short_name</span><span class=\"token punctuation\">:</span> YOUR<span class=\"token punctuation\">-</span>DISQUS<span class=\"token punctuation\">-</span>FORUM<span class=\"token punctuation\">-</span>SHORTNAME<span class=\"token punctuation\">-</span>HERE\n    <span class=\"token key atrule\">api_key</span><span class=\"token punctuation\">:</span>    YOUR<span class=\"token punctuation\">-</span>DISQUS<span class=\"token punctuation\">-</span>PUBLIC<span class=\"token punctuation\">-</span>KEY<span class=\"token punctuation\">-</span>HERE</code></pre></div>\n<h3 id=\"run-import-task\" style=\"position:relative;\"><a href=\"#run-import-task\" aria-label=\"run import task permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Run import task</h3>\n<p>Import comments from Disqus by running <code class=\"language-text\">rake disquscomments</code> from the CLI. If it completes successfully you should find a set of <code class=\"language-text\">.yml</code> files in <code class=\"language-text\">_data/comments/&lt;post-slug&gt;/</code> similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">├── _data\n|  └── comments\n|      └── 365-days-of-drawing\n|      |   └── comment-2013-08-30-162902.yml\n|      |   └── comment-2013-08-30-204505.yml\n|      └── basics\n|          └── comment-2014-02-10-040840.yml</code></pre></div>\n<p>Each with YAML Front Matter data similar to this:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token punctuation\">---</span>\n<span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> comment<span class=\"token punctuation\">-</span><span class=\"token number\">1237690364</span>\n<span class=\"token key atrule\">date</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2014-02-10 04:08:40 +0000'</span>\n<span class=\"token key atrule\">updated</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'2014-02-10 04:08:40 +0000'</span>\n<span class=\"token key atrule\">post_id</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"/basics\"</span>\n<span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Tamara\n<span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">''</span>\n<span class=\"token key atrule\">message</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"This? This is freakin' awesome! Thanks so much for sharing your mad skills and expertise with us!\"</span></code></pre></div>\n<p>Key names correlate with the ones defined earlier with Staticman, along with a few specific to Disqus: <code class=\"language-text\">id</code>, <code class=\"language-text\">updated</code>, and <code class=\"language-text\">post_id</code> that aren’t currently used on the site.</p>\n<p>I’m a little obsessive so I went through a ton of old comments adding <a href=\"https://guides.github.com/features/mastering-markdown/#GitHub-flavored-markdown\">GitHub Flavored Markdown</a><sup id=\"fnref-6\"><a href=\"#fn-6\" class=\"footnote-ref\">6</a></sup> backticks to improve the reading experience of code blocks. Having properly formatted code blocks in comments looks so good I couldn’t pass it up. </p>\n<p>Pulling this off with Disqus required way <a href=\"https://help.disqus.com/customer/portal/articles/466253\">more work</a> and didn’t support Markdown.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 876px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 66.54545454545455%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"Syntax highlighted code blocks in comments\"\n        title=\"Syntax highlighted code blocks in comments\"\n        data-src=\"/static/9614ef4f299ca912d2caec06ba5c44b3/e8ecb/mm-comments-syntax-highlighted.png\"\n        data-srcset=\"/static/9614ef4f299ca912d2caec06ba5c44b3/39133/mm-comments-syntax-highlighted.png 275w,\n/static/9614ef4f299ca912d2caec06ba5c44b3/50322/mm-comments-syntax-highlighted.png 550w,\n/static/9614ef4f299ca912d2caec06ba5c44b3/e8ecb/mm-comments-syntax-highlighted.png 876w\"\n        sizes=\"(max-width: 876px) 100vw, 876px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<h3 id=\"troubleshooting\" style=\"position:relative;\"><a href=\"#troubleshooting\" aria-label=\"troubleshooting permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Troubleshooting</h3>\n<p>When running <code class=\"language-text\">rake disquscomments</code> I ran into several warnings like this:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Comments feed not found: &lt;domain.com&gt;/post-slug/</code></pre></div>\n<p>For posts that I knew didn’t have any comments this wasn’t a problem, but for those that did it was a real head scratcher. Eventually I discovered that <code class=\"language-text\">ident</code> in <strong><code class=\"language-text\">disqus_comments.rake</code></strong> wasn’t matching the style of post paths used on my site.</p>\n<p>I was able to determine what Disqus was expecting for id’s and adjust the plugin by:</p>\n<ol>\n<li><a href=\"https://disqus.com/admin/discussions/export/\">Exporting all my Disqus comments</a> as XML.</li>\n<li>Opening the Disqus XML file.</li>\n<li>Looking at the <code class=\"language-text\">&lt;link&gt;</code> elements eg. <code class=\"language-text\">&lt;link&gt;https://mademistakes.com/mastering-paper/contour-drawing/&lt;/link&gt;</code></li>\n</ol>\n<p>By playing around with the <a href=\"https://github.com/mmistakes/jekyll-disqus-comments/blob/e2561412785af8cdc7579fa6a774eaccb020ea98/_rake/disqus_comments.rake#L50\">following line</a> in <code class=\"language-text\">disqus_comments.rake</code> I finally sorted it out:</p>\n<div class=\"gatsby-highlight\" data-language=\"ruby\"><pre class=\"language-ruby\"><code class=\"language-ruby\"><span class=\"token comment\"># site.url + post.id + trailing slash</span>\nident <span class=\"token operator\">=</span> site<span class=\"token punctuation\">[</span><span class=\"token string\">'url'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> post<span class=\"token punctuation\">.</span>id <span class=\"token operator\">+</span> <span class=\"token string\">'/'</span></code></pre></div>\n<hr>\n<h2 id=\"final-thoughts\" style=\"position:relative;\"><a href=\"#final-thoughts\" aria-label=\"final thoughts permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Final thoughts</h2>\n<p>Treating comments as content and integrating them into the same build process as the rest of my site has been an informative and rewarding experience. By successfully migrating over 500 comments away from Disqus I was able to:</p>\n<ul>\n<li>Style them consistently and match the rest of the site’s design.</li>\n<li>Improve the appearance of <code class=\"language-text\">&lt;code&gt;</code> blocks within comments.</li>\n<li>Make it easier for visitors to leave a comment without having to create a Disqus account.</li>\n</ul>\n<h3 id=\"seo-implications\" style=\"position:relative;\"><a href=\"#seo-implications\" aria-label=\"seo implications permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>SEO implications</h3>\n<p>The comments left on many of my posts often contain corrections, follow-up, and other valuable post content. From earlier tests it did seem as if search engines were able to crawl the embedded Disqus JavaScript comments and partially index them. Time will tell if I’ll see any SEO <em>lift</em> now that comments are part of the HTML and marked up as structured data.</p>\n<h3 id=\"spam-slipping-through\" style=\"position:relative;\"><a href=\"#spam-slipping-through\" aria-label=\"spam slipping through permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Spam slipping through</h3>\n<p>Seems to only happen on my older posts or ones that rank well in Google and friends. As no one is really adding valuable comments to these I’ve added a <code class=\"language-text\">comments_locked</code> conditional to disable the comment form on specific pages.</p>\n<div class=\"gatsby-highlight\" data-language=\"liquid\"><pre class=\"language-liquid\"><code class=\"language-liquid\">{<span class=\"token operator\">%</span> <span class=\"token keyword\">unless</span> page.comments_locked <span class=\"token operator\">==</span> true <span class=\"token operator\">%</span>}\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> <span class=\"token keyword\">comment</span> form <span class=\"token operator\">--</span><span class=\"token operator\">></span>\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">else</span> <span class=\"token operator\">%</span>}\n  <span class=\"token operator\">&lt;</span>p<span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">!</span><span class=\"token operator\">--</span> comments locked messaging <span class=\"token operator\">--</span><span class=\"token operator\">></span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>p<span class=\"token operator\">></span>\n{<span class=\"token operator\">%</span> <span class=\"token keyword\">endunless</span> <span class=\"token operator\">%</span>}</code></pre></div>\n<p>I’ll have to keep an eye on the effectiveness of this method, or possibly find a tastier honeypot to better combat spam bots.</p>\n<h3 id=\"comment-replies\" style=\"position:relative;\"><a href=\"#comment-replies\" aria-label=\"comment replies permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Comment replies</h3>\n<p>One thing I miss since leaving Disqus, are comment notifications. Sure you can setup GitHub to notify you of each Staticman pull request, which will in turn clue you in that you have a new comment. What’s missing is a way to notify the commenter that there’s been a reply to their comment.</p>\n<p>Less likely a commenter will return to the page to see if a reply was made without the nudge of a notification. Wordpress and friends has the whole ”<strong>subscribe to comments</strong>” feature which could apply here I suppose.</p>\n<div class=\"custom-block notice\"><div class=\"custom-block-heading\">Update: replies, notifications, and more</div><div class=\"custom-block-body\"><p>Staticman has been updated to support replies, email notifications, and <a href=\"https://www.google.com/recaptcha/intro/\">reCAPTCHA</a> (helps reduce spam comments). To learn more about how I added each of these to this site, read my post <a href=\"/articles/improving-jekyll-static-comments/\">Improving Static Comments with Jekyll &#x26; Staticman</a>.</p></div></div>\n<div class=\"footnotes\">\n<hr>\n<ol>\n<li id=\"fn-1\">\n<p>There are several third-party commenting services to choose from: <a href=\"https://disqus.com/\"><strong>Disqus</strong></a>, <a href=\"https://intensedebate.com/\"><strong>IntenseDebate</strong></a>, <a href=\"http://web.livefyre.com/\"><strong>Livefrye</strong></a>, <a href=\"https://developers.facebook.com/docs/plugins/comments/\"><strong>Facebook</strong></a>, and countless others. They all essentially work the same — you embed some JavaScript on your site and comments magically appear.</p>\n<a href=\"#fnref-1\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-2\">\n<p>Other self-hosted commenting systems include: <a href=\"http://www.discourse.org/\"><strong>Discourse</strong></a>, <a href=\"https://github.com/talkatv/talkatv\"><strong>talkatv</strong></a>, <a href=\"https://github.com/phusion/juvia\"><strong>Juvia</strong></a>, <a href=\"https://github.com/jacobwb/hashover\"><strong>HashOver</strong></a>, and <a href=\"https://github.com/savaslabs/squabble\"><strong>Savas</strong></a>.</p>\n<a href=\"#fnref-2\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-3\">\n<p>Sort an array. Optional arguments for hashes: 1. property name 2. nils order (first or last).</p>\n<a href=\"#fnref-3\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-4\">\n<p>eg. <code class=\"language-text\">comment-2014-02-10-040840.yml</code>, <code class=\"language-text\">comment-2015-03-22-204128.yml</code>, etc.</p>\n<a href=\"#fnref-4\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-5\">\n<p>Adds a <a href=\"https://github.com/eduardoboucas/staticman/issues/9\"><code class=\"language-text\">date</code> timestamp</a> to entries in ISO8601, seconds, or milliseconds formats.</p>\n<a href=\"#fnref-5\" class=\"footnote-backref\">↩</a>\n</li>\n<li id=\"fn-6\">\n<p>The <code class=\"language-text\">markdownify</code> filter is used in <code class=\"language-text\">_includes/comment.html</code> to convert Markdown-formatted strings found in <code class=\"language-text\">{{ include.message }}</code> into HTML.</p>\n<a href=\"#fnref-6\" class=\"footnote-backref\">↩</a>\n</li>\n</ol>\n</div>","excerpt":"Offloading comments to an external service like Disqus has always felt like a necessary evil to me when building Jekyll sites. Convenient to…","timeToRead":19,"tableOfContents":"<ul>\n<li><a href=\"/articles/jekyll-static-comments/#self-hosted-comment-systems\">Self hosted comment systems</a></li>\n<li>\n<p><a href=\"/articles/jekyll-static-comments/#static-comments\">Static comments</a></p>\n<ul>\n<li><a href=\"/articles/jekyll-static-comments/#enter-staticman\">Enter Staticman</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#getting-started\">Getting started</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#building-the-form\">Building the form</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#displaying-comments\">Displaying comments</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#setting-up-staticman\">Setting up Staticman</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#hooking-up-the-form\">Hooking up the form</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#publishing-comments\">Publishing comments</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/articles/jekyll-static-comments/#migrating-disqus-comments\">Migrating Disqus comments</a></p>\n<ul>\n<li><a href=\"/articles/jekyll-static-comments/#installing\">Installing</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#obtain-a-disqus-api-public-key\">Obtain a Disqus API public key</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#run-import-task\">Run import task</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#troubleshooting\">Troubleshooting</a></li>\n</ul>\n</li>\n<li>\n<p><a href=\"/articles/jekyll-static-comments/#final-thoughts\">Final thoughts</a></p>\n<ul>\n<li><a href=\"/articles/jekyll-static-comments/#seo-implications\">SEO implications</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#spam-slipping-through\">Spam slipping through</a></li>\n<li><a href=\"/articles/jekyll-static-comments/#comment-replies\">Comment replies</a></li>\n</ul>\n</li>\n</ul>"},"comments":{"edges":[{"node":{"id":"40cb6c4e-0a4e-54c1-a9c8-b5eb369ac089","frontmatter":{"name":"Frank Taillandier","email":"398aad0e0e78f0db97a937fa6cb5ebea","friendlyDate":"August 21, 2016","iso8601Date":"2016-08-21T22:33:25.272Z","published":null},"html":"<p>This post definitively deserves static comments.</p>"}},{"node":{"id":"89f09b95-cd62-5945-b553-5104102e9b5c","frontmatter":{"name":"Moritz »mo.« Sauer","email":"427cc33a6a0b82643396f1b0acbba087","friendlyDate":"August 22, 2016","iso8601Date":"2016-08-22T21:42:48.075Z","published":null},"html":"<p>Thank you once again to rise the bar for the development of Jekyll themes. Now I\nwant to try this, too. Disqus was – <em>like you wrote</em> – a necessary evil.\nStaticman looks like the ideal solution.</p>"}},{"node":{"id":"ed2f3b35-f9df-5ac1-8c8c-16ea6cb34722","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"August 22, 2016","iso8601Date":"2016-08-22T22:23:19.187Z","published":null},"html":"<p>It’s pretty darn slick that’s for sure! Hardest part to the whole thing was\ngetting all the Disqus comments converted into <code class=\"language-text\">.yml</code> files.</p>"}},{"node":{"id":"0791db9f-d5ab-564d-b0f6-222a4ec937ec","frontmatter":{"name":"Josh Habdas","email":"bda486b80a2e80a8e22afe69dd621303","friendlyDate":"September 10, 2016","iso8601Date":"2016-09-10T01:21:05.995Z","published":null},"html":"<p>This is simply fantastic, Michael. Great work! I’m curious to know how the\nswitch to static comments has affected your\n<a href=\"https://www.google.com/webmasters/tools/crawl-stats?hl=en&#x26;siteUrl=https://mademistakes.com/\">crawl stats in Google Search Console</a>.\nIf I had to guess you should see more frequent crawling and less time spent\ndownloading, which could carry aggregate benefits not obvious until analyzed\nover a longer period of time.</p>\n<p>Since you’re looking for alternative static commenting strategies…I stumbled\nupon <a href=\"https://github.com/ummels/jekyll-aws-comments\">jekyll-aws-comments</a> today\nlinked from <a href=\"https://github.com/jimpick/lambda-comments\">lambda-comments</a>. It’s\nprobably more complex to get going but ideal for control freaks who don’t want\nto rely on a 3rd party, and who might already be\n<a href=\"https://habd.as/pagespeed-100-with-jekyll-s3-and-cloudfront/\">hosting their Jekyll blogs on AWS with CloudFront</a>\nfor example. Again, great work! Love it!!</p>"}},{"node":{"id":"bbbaa1a4-342e-59ba-9284-77f8ac54d6e2","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"September 10, 2016","iso8601Date":"2016-09-10T03:07:38.790Z","published":null},"html":"<p>Thanks Josh. I came across those as well in my search but since I don’t have any\nexperience with AWS I passed them over. Definitely seem like good options\nthough, especially if you’re hosting with AWS.</p>\n<p>As far as stats. I launched static comments in mid-August, looking at my crawl\nstats there isn’t much that jumps out to me. Kilobytes downloaded seems to be\ntrending up but hard to tell.</p>\n<p><span\n      class=\"gatsby-resp-image-wrapper\"\n      style=\"position: relative; display: block; margin-left: auto; margin-right: auto; background-color: var(--input-background-color); max-width: 521px;\"\n    >\n      <span\n    class=\"gatsby-resp-image-background-image\"\n    style=\"padding-bottom: 136%; position: relative; bottom: 0; left: 0; display: block;\"\n  ></span>\n  <img\n        class=\"gatsby-resp-image-image lazyload\"\n        alt=\"Made Mistakes crawl stats\"\n        title=\"Made Mistakes crawl stats\"\n        data-src=\"/static/0a7d32e41bed5bbd685801dbe8ec5d9c/5a539/crawl-stats.png\"\n        data-srcset=\"/static/0a7d32e41bed5bbd685801dbe8ec5d9c/39133/crawl-stats.png 275w,\n/static/0a7d32e41bed5bbd685801dbe8ec5d9c/5a539/crawl-stats.png 521w\"\n        sizes=\"(max-width: 521px) 100vw, 521px\"\n        style=\"width:100%;height:100%;margin:0;vertical-align:middle;position:absolute;top:0;left:0;\"\n        loading=\"lazy\"\n      />\n    </span></p>\n<p>One thing I’ve noticed is the need for better comment spam filtering. I get\naround 1-3 submitted comments a day that are clearly spammers trying to get\nbacklinks. Back with Disqus I got zero, so it must have been doing a good job of\nfiltering that junk out.</p>\n<p>Not entirely sure if its bot driven or not but thinking if Staticman adds\n<a href=\"https://github.com/eduardoboucas/staticman/issues/20\">support for ReCaptcha</a>,\nthat might help combat it.</p>"}},{"node":{"id":"110dc94c-5191-5498-a9b1-6182b1faa254","frontmatter":{"name":"Arnab Wahid","email":"2b5f4253acf477e13cea08554f070fef","friendlyDate":"September 22, 2016","iso8601Date":"2016-09-22T10:45:56.616Z","published":null},"html":"<p>I have been searching for a decent alternative of Disqus for a few years now.\nThis is the best one so far. Thanks a lot, Michael!</p>\n<p>I was wondering, does Staticman support threaded comments? If not, would I be\nable to get it by tinkering with the styling?</p>"}},{"node":{"id":"75fddfff-baa7-54ad-b15a-40d97a303bed","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"September 22, 2016","iso8601Date":"2016-09-22T11:49:12.123Z","published":null},"html":"<p>@Arnab - I’m sure Staticman could be “bended” to support threaded comments, but\nit would take some work on your end. Off the top of my head I’d probably do\nsomething similar to how Wordpress adds <strong>reply</strong> links to each comment.</p>\n<p>That could be used to create a variable that references the comment # being\nreplied to. Which you’d send with the rest of the comment data to Staticman,\nadding it the YAML Front Matter.</p>\n<p>Then in the comment Liquid code you’d add some sort of check for that variable\nand if present on the current comment, pull in any replies. Probably using\nsomething like\n<a href=\"https://www.siteleaf.com/blog/advanced-liquid-where/\">the <code class=\"language-text\">where</code> filter</a>.</p>"}},{"node":{"id":"2b746c11-a9eb-5c87-bf4a-61e1bd324853","frontmatter":{"name":"Hosein","email":"a9d5ac624b6aefd6919c2ea624a4642b","friendlyDate":"September 30, 2016","iso8601Date":"2016-09-30T08:43:46.706Z","published":null},"html":"<p>Hey Michael, Great post indeed, However I have some questions:</p>\n<ol>\n<li>How would you include pictures in your comments?</li>\n<li>I want my pages to have comments too, especially the homepage. But I don’t\nknow what would be my homepage slug.</li>\n</ol>\n<p>With thanks</p>"}},{"node":{"id":"31744217-894a-5c80-b700-a33327023e9c","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"September 30, 2016","iso8601Date":"2016-09-30T11:15:33.750Z","published":null},"html":"<p>Since Markdown is supported you can write something like:</p>\n<div class=\"gatsby-highlight\" data-language=\"markdown\"><pre class=\"language-markdown\"><code class=\"language-markdown\"><span class=\"token url\">![<span class=\"token content\">title</span>](image.jpg)</span></code></pre></div>\n<p>To add images to a comment… they need to be hosted somewhere though since as\nfar as I know Staticman doesn’t deal with uploaded files.</p>"}},{"node":{"id":"703f5ee8-4128-50a1-9e55-0f51cd8bbc21","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"September 30, 2016","iso8601Date":"2016-09-30T11:47:25.820Z","published":null},"html":"<p>Also. I’m pretty sure <code class=\"language-text\">slug</code> is available to not only posts, but pages. I know\nfor certain it works with collection documents because I use this exact same\nmethod to add comments to my\n<a href=\"https://mademistakes.com/faqs/website-tools/\">FAQ section</a>, which is built\nusing a collection.</p>\n<p>Experiment and try it out. As long as a page has a unique identifier you should\nbe able to pull a <code class=\"language-text\">_data</code> file with comments (or any other content).</p>"}},{"node":{"id":"79fd4b66-1307-5fea-8ba3-ce3ea40bbcf4","frontmatter":{"name":"Hosein","email":"a9d5ac624b6aefd6919c2ea624a4642b","friendlyDate":"October 01, 2016","iso8601Date":"2016-10-01T08:31:40.216Z","published":null},"html":"<p>Thank you Michael. As far as I tried, there was no page slug available for\npages. I solved this problem by defining <code class=\"language-text\">slug</code> as a custom variable for each\npage.</p>"}},{"node":{"id":"d36547a2-3172-5d00-bcf2-2318c182cb68","frontmatter":{"name":"Duc Nguyen","email":"651918741a734b1cad5b2c22e1cc39c5","friendlyDate":"October 03, 2016","iso8601Date":"2016-10-03T22:02:53.283Z","published":null},"html":"<p>Thanks Michael. I have a question: how can I add Staticman comments to my blog?\nI’m using Windows and host my Jekyll on Firebase.</p>"}},{"node":{"id":"bfe79cf2-6b7d-59c2-8c45-080b52cf2e57","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"October 05, 2016","iso8601Date":"2016-10-05T01:53:22.342Z","published":null},"html":"<p>@Duc - Start by reading this post. The steps I followed to add Staticman\nare all here. I have no experience with Firebase so I’d be no help there but the\nJekyll side of things would be very similar to what I’ve outlined above.</p>"}},{"node":{"id":"d5a136e2-ae18-5db8-a30d-261abcc6c9de","frontmatter":{"name":"Bozdar","email":"59ca798bb22d86663d64803adb03ea34","friendlyDate":"November 01, 2016","iso8601Date":"2016-11-01T11:04:08.323Z","published":null},"html":"<p>I am revamping my website and moving to Jekyll. I am not sure, if Staticman\nworks in case I am pushing only <code class=\"language-text\">_site</code> folder to Github?</p>"}},{"node":{"id":"4b857ede-8d80-584e-b0dc-74a2d7608911","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"November 01, 2016","iso8601Date":"2016-11-01T16:01:10.425Z","published":null},"html":"<p>@Bozdar - I think it’s doable, just might introduce some complexity to your\nbuild/deploy process.</p>\n<p>For example, I don’t use GitHub to build or host my site, but simply store my\nsource files there in a repo. My build/deploy process with Staticman goes like\nthis:</p>\n<ol>\n<li>Comment is submitted to Staticman, which creates a pull request against my\nsite repo on GitHub.</li>\n<li>Comment pull request is merged and then I pull that commit to my local repo.</li>\n<li>Build the site locally.</li>\n<li>Deploy the contents of my <code class=\"language-text\">_site</code> folder to my server. I use a\n<a href=\"https://www.npmjs.com/package/gulp-rsync\">Gulp rsync</a> task but there are\nseveral <a href=\"https://jekyllrb.com/docs/deployment-methods/\">other options</a>\navailable to you.</li>\n</ol>\n<p>All Staticman needs is to be made a collaborator on your repo and be able to see\nyour <code class=\"language-text\">_config.yml</code> so it can be configured.”</p>"}},{"node":{"id":"a939d998-5112-5f05-9b35-3d7a1c931790","frontmatter":{"name":"Bozdar","email":"d05a562b97e8c991809dca114bcd6dd8","friendlyDate":"November 02, 2016","iso8601Date":"2016-11-02T05:08:43.280Z","published":null},"html":"<p>Michael. Then, it seems a bit easy but real situation is that I am hosting my\nwebsite on Github, at least for the time being. So, I do not find Staticman\nhelpful enough because it needs <code class=\"language-text\">_config.yml</code> file to work. I may use Staticman\nin future when I change my host.</p>\n<p>Many thanks, for the help.</p>"}},{"node":{"id":"f318ee17-92c6-5b05-8368-77d333b85a18","frontmatter":{"name":"Dany Keep","email":"","friendlyDate":"November 29, 2016","iso8601Date":"2016-11-29T09:22:11.741Z","published":null},"html":"<p>Thanks for the awesome theme <em>Minimal Mistakes</em>.</p>\n<p>Unfortunately, I couldn’t configure static comments for my project.</p>\n<p>I receive pull requests on github, but comments not published in my post.\n<a href=\"https://github.com/danykeep/danykeep.github.io\">https://github.com/danykeep/danykeep.github.io</a></p>\n<p>Help me please, how can i solve this problem? I tried to turn to false\nmoderation option, but it didn’t help.</p>"}},{"node":{"id":"bc3c9c94-d70a-54d3-a1c8-4308bd7ec009","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"November 29, 2016","iso8601Date":"2016-11-29T12:02:53.318Z","published":null},"html":"<p>@Dany - Change Staticman’s path in <code class=\"language-text\">_config.yml</code>. You were probably using the\ndemo site’s path which places the comment data files in a different location.\nYou want it set as:</p>\n<div class=\"gatsby-highlight\" data-language=\"yaml\"><pre class=\"language-yaml\"><code class=\"language-yaml\"><span class=\"token key atrule\">staticman</span><span class=\"token punctuation\">:</span>\n  <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'/_data/comments/{options.slug}'</span></code></pre></div>\n<p>Move your existing <code class=\"language-text\">/comments/</code> folder under <code class=\"language-text\">/_data/</code> after you make the config\nchange and on rebuild they should up.</p>"}},{"node":{"id":"62977665-f00f-594b-b5fb-a9f7f85b5e2e","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"November 30, 2016","iso8601Date":"2016-11-30T22:03:15.286Z","published":null},"html":"<p>Staticman now supports\n<a href=\"https://github.com/eduardoboucas/staticman/issues/35\">threaded comments</a>. The\nLiquid you need to craft can get messy, but it’s manageable if you don’t nest\ntoo deep.</p>"}},{"node":{"id":"f3a4f695-fd56-5207-92c3-ee8c49309667","frontmatter":{"name":"Arnab Wahid","email":"2b5f4253acf477e13cea08554f070fef","friendlyDate":"December 11, 2016","iso8601Date":"2016-12-11T01:38:28.216Z","published":null},"html":"<p><strong>Thanks for the update.</strong> I have been meaning to bother you with a couple of\nquestions but been hesitant about it for obvious reasons. I am still not sure if\nI should attempt a conversation that will probably never end! However, initially\n, I am just looking for some advice. But first, let me read your latest post\nfirst. I will continue my nervous babbling there.</p>"}},{"node":{"id":"ab8d4915-7de1-53c6-ac78-488f17db07c5","frontmatter":{"name":"Chuck","email":"08ed66551d57a545c0d07b7b659e4076","friendlyDate":"January 02, 2017","iso8601Date":"2017-01-02T06:54:58.560Z","published":null},"html":"<p>This code has been a terrific help to me for a site I’m working on… but I’m\nhaving quite a time trying to sort my comments by the date.\n<code class=\"language-text\">{% assign comments = site.data.comments[page.slug] | sort: &quot;date&quot; %}</code> is\nthrowing an error to the effect that there’s no implicit conversion of String\ninto Integer. My filenames aren’t going to be guaranteed sequential, so sorting\nby those won’t work… any idea what might be going wrong here?</p>"}},{"node":{"id":"c1d05bfc-f08f-5e5a-8137-58820079dd62","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"January 02, 2017","iso8601Date":"2017-01-02T18:21:01.199Z","published":null},"html":"<p>I had the same problem when trying to sort using the <code class=\"language-text\">date</code> value. I think the\nissue is Staticman captures that field as a string since it’s encased in single\nquotes, causing Liquid to throw an error as it can’t compare strings against\nintegers… or a date timestamp.</p>\n<p>I tried everything I could think of to convert the <code class=\"language-text\">date</code> values from a string\nso they could be sorted, but never found a solution. Jekyll has several\n<a href=\"http://jekyllrb.com/docs/templates/#filters\">filters</a> for converting to various\ndate formats and even the <code class=\"language-text\">to_integer</code>, so I thought if I could capture the\narray, filter it the date fields, then I’d have an array with date values that I\ncould sort. Never got that working though.</p>\n<p>In the end I threw in the towel and just renamed all my legacy comment <code class=\"language-text\">_data</code>\nfiles so they were sequential using a Unix timestamp, matching the same filename\nformat I defined for Staticman (<code class=\"language-text\">filename: comment-{@timestamp}</code>).</p>"}},{"node":{"id":"bd2c7846-a5fb-503f-b567-73b07d2663e8","frontmatter":{"name":"Nur Andi Setiabudi","email":"8d27cffdf7fdf83b6fb4f75e6d7f4ece","friendlyDate":"February 03, 2017","iso8601Date":"2017-02-03T10:30:04.508Z","published":null},"html":"<p>I had similar problem with @Dany, and it has been resolved by changing <code class=\"language-text\">path</code>\nand <code class=\"language-text\">/comment/</code> folder.</p>\n<p>But, now I get another problem that comment cannot be submitted. Error message:</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">Sorry, there was an error with your submission. Please make sure all required fields have been completed and try again</code></pre></div>\n<p>Thank you. Repo: <a href=\"https://github.com/nurandi/nurandi.github.io\">https://github.com/nurandi/nurandi.github.io</a></p>"}},{"node":{"id":"64c808bd-3268-50cc-95c9-1c8662b0d310","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"February 03, 2017","iso8601Date":"2017-02-03T17:17:13.904Z","published":null},"html":"<p>@Nur - Likely something is off with your Staticman config. If you open your\nbrowser’s web development tools and look at the Console output it will give you\na better idea of what data from the form Staticman doesn’t like.</p>\n<p>For example if I try to submit a comment with the name and email fields blank\nyou’ll see this error in the Console.</p>\n<p><img src=\"https://i.imgur.com/xW4WJWh.jpg\" alt=\"Console screenshot\"></p>"}},{"node":{"id":"87a8113d-5966-549a-8059-1d765a26a488","frontmatter":{"name":"Nur Andi Setiabudi","email":"8d27cffdf7fdf83b6fb4f75e6d7f4ece","friendlyDate":"February 04, 2017","iso8601Date":"2017-02-04T00:44:00.988Z","published":null},"html":"<p>@Michael - Problem has been resolved by changing</p>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">staticman:\n  path: &quot;/_data/comments/{options.slug}&quot;</code></pre></div>\n<div class=\"gatsby-highlight\" data-language=\"text\"><pre class=\"language-text\"><code class=\"language-text\">staticman:\n  path: &quot;_data/comments/{options.slug}&quot;</code></pre></div>"}},{"node":{"id":"bcc85e71-4c4b-51f7-8efc-845cd52c8e48","frontmatter":{"name":"Nur Andi Setiabudi","email":"8d27cffdf7fdf83b6fb4f75e6d7f4ece","friendlyDate":"February 04, 2017","iso8601Date":"2017-02-04T11:07:24.993Z","published":null},"html":"<p>@Michael, I get problem when import comment from disqus by running\n<code class=\"language-text\">rake disquscomments</code></p>\n<div class=\"gatsby-highlight\" data-language=\"terminal\"><pre class=\"language-terminal\"><code class=\"language-terminal\">$ rake disquscomments\n\nrake aborted!\nLoadError: cannot load such file -- domainatrix\n_rake/disqus_comments.rake:5:in `&lt;top (required)&gt;&#39;\n/Users/widyaningsih/Documents/3. Andi/nurandi.github.io/Rakefile:8:in `load&#39;\n/Users/widyaningsih/Documents/3. Andi/nurandi.github.io/Rakefile:8:in `block in &lt;top (required)&gt;&#39;\n/Users/widyaningsih/Documents/3. Andi/nurandi.github.io/Rakefile:8:in `each&#39;\n/Users/widyaningsih/Documents/3. Andi/nurandi.github.io/Rakefile:8:in `&lt;top (required)&gt;&#39;\n/usr/local/lib/ruby/gems/2.4.0/gems/rake-12.0.0/exe/rake:27:in `&lt;top (required)&gt;&#39;</code></pre></div>\n<p>Any idea what might be going wrong here?</p>"}},{"node":{"id":"1118946b-c5d4-5d07-ab75-21c3fe2f8d5a","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"February 04, 2017","iso8601Date":"2017-02-04T15:28:25.646Z","published":null},"html":"<p>The error message is a clue. It’s looking for the domainmatrix gem. You likely\ndon’t have it installed so it’s failing. Try <code class=\"language-text\">gem install domainmatrix</code></p>"}},{"node":{"id":"ed615090-1b8e-568e-9eba-3e331e7f364d","frontmatter":{"name":"SS","email":"194b0f78b3831beab2453b68535c5b67","friendlyDate":"May 11, 2017","iso8601Date":"2017-05-11T09:53:39.510Z","published":null},"html":"<p>On an individual post, how can show comments but disable any new comments (maybe\nby not showing the ‘add comment’ box)? Am using staticman.</p>"}},{"node":{"id":"8c46b9ef-d1b3-5d56-a3f4-838f23bd8db3","frontmatter":{"name":"Michael Rose","email":"1ce71bc10b86565464b612093d89707e","friendlyDate":"May 11, 2017","iso8601Date":"2017-05-11T12:09:22.946Z","published":null},"html":"<p>You can do something like what I’ve done wrapping the comment form with a Liquid\nconditional:</p>\n<div class=\"gatsby-highlight\" data-language=\"html\"><pre class=\"language-html\"><code class=\"language-html\">{% unless page.comments_locked == true %}\n<span class=\"token comment\">&lt;!-- comment form here --></span>\n{% else %}\n<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>p</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>em</span><span class=\"token punctuation\">></span></span>Comments are closed.<span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>em</span><span class=\"token punctuation\">></span></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>p</span><span class=\"token punctuation\">></span></span>\n{% endunless %}</code></pre></div>\n<p>Then I add <code class=\"language-text\">comments_locked: true</code> to a post’s YAML Front Matter that I want to\ndisable adding new comments to. You can see an example of\n<a href=\"https://mademistakes.com/articles/ipad-pro/#comments\">how that looks here</a>.</p>"}},{"node":{"id":"3c4268b4-30bb-5620-bc39-ddc6cc25f9e7","frontmatter":{"name":"Wojtek","email":"6a8f2f5f292c75c5e81a6607530a0ab6","friendlyDate":"May 13, 2017","iso8601Date":"2017-05-13T19:22:02.962Z","published":null},"html":"<p>Thank you for this great article. I will have a look at how to use this in Hugo\n(I am just starting with Hugo but it should not be that of a big deal with the\ndetails you provided)</p>"}},{"node":{"id":"da1d8bf5-8b1b-5b9a-b2db-9614118911d6","frontmatter":{"name":"Chris","email":"3cabb2808f31727a972349bc65a87081","friendlyDate":"October 15, 2017","iso8601Date":"2017-10-15T15:35:55.655Z","published":null},"html":"<p>Thanks for the post. I’m looking to add comments to my blog…though I can’t\nhelp but wonder, if my website is to be interactive, why aren’t I using\nwordpress or something? Feels like a lot of trouble to do something that\n<em>should</em> be pretty basic</p>"}}]}},"pageContext":{"next":{"frontmatter":{"path":"/notes/inktober-2016-failure/","title":"Inktober failure","categories":["notes"],"tags":["watercolor","portrait","illustration","Inktober"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/notes/inktober-2016-failure.md"},"previous":{"frontmatter":{"path":"/procreate-paintings/mahalia-h-portrait/","title":"Eyes be damned","categories":["procreate-paintings"],"tags":["Procreate","portrait","illustration","Sktchy","time lapse"]},"fileAbsolutePath":"/home/28041/opensource/github.com/mmistakes/made-mistakes-gatsby/src/posts/procreate-paintings/mahalia-h-portrait.md"}}}}