{"version":3,"sources":["webpack:///./src/styles/document.module.css","webpack:///./src/templates/page.js","webpack:///./src/components/document.js"],"names":["module","exports","PageTemplate","data","markdownRemark","frontmatter","title","date","date_pretty","date_from_now","last_modified_at","last_modified_at_from_now","path","image","excerpt","toc","autoExcerpt","id","html","metaImage","childImageSharp","fixed","site","twitterCardType","titleAlt","datePublished","dateModified","description","article","key","hideMeta","datePretty","dateFromNow","dateModifiedFromNow","author","pageQuery","_","require","Document","authors","timeToRead","tableOfContents","tags","className","style","document","heading","meta","map","to","slugify","name","display","href","url","dateTime","readTime","tag","fluid","cover","backgroundColor","tocWrap","tocTitle","dangerouslySetInnerHTML","__html","content"],"mappings":"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","file":"component---src-templates-page-js-d1afc49e11b7f79b60ac.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"document\":\"document-module--document--1Lycb\",\"title\":\"document-module--title--1PjmY\",\"heading\":\"document-module--heading--Y8-yS\",\"meta\":\"document-module--meta--3MKTa\",\"readTime\":\"document-module--readTime--1MnG7\",\"tags\":\"document-module--tags--v5jW9\",\"tag\":\"document-module--tag--1yvzk\",\"authors\":\"document-module--authors--3mYFp\",\"author\":\"document-module--author--3S58z\",\"tocWrap\":\"document-module--tocWrap--_5cZQ\",\"tocTitle\":\"document-module--tocTitle--2ybLY\",\"toc\":\"document-module--toc--2M3e3\",\"cover\":\"document-module--cover--2yqPV\",\"grain\":\"document-module--grain--27TJO\",\"content\":\"document-module--content--JBd-i\",\"imageGrid\":\"document-module--imageGrid--1pjv7\",\"gridItem\":\"document-module--gridItem--2inPu\",\"loadMore\":\"document-module--loadMore--1m8aw\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql } from 'gatsby'\n\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Document from '../components/document'\nimport site from '../../config/site'\n\nconst PageTemplate = ({ data }) => {\n  const {\n    frontmatter: {\n      title,\n      date,\n      date_pretty,\n      date_from_now,\n      last_modified_at,\n      last_modified_at_from_now,\n      path,\n      image,\n      excerpt,\n      toc,\n    },\n    excerpt: autoExcerpt,\n    id,\n    html,\n  } = data.markdownRemark\n  const metaImage = image ? image.childImageSharp.fixed : site.image\n  const twitterCardType = image ? 'summary_large_image' : 'summary'\n\n  return (\n    <Layout>\n      <SEO\n        title={`${title} - ${site.titleAlt}`}\n        path={path}\n        datePublished={date}\n        dateModified={last_modified_at}\n        description={excerpt || autoExcerpt}\n        metaImage={metaImage}\n        twitterCardType={twitterCardType}\n        article\n      />\n      <main id=\"main\">\n        <Document\n          key={id}\n          title={title}\n          hideMeta\n          datePublished={date}\n          dateModified={last_modified_at}\n          datePretty={date_pretty}\n          dateFromNow={date_from_now}\n          dateModifiedFromNow={last_modified_at_from_now}\n          path={path}\n          image={image}\n          toc={toc}\n          html={html}\n          author={site.author}\n        />\n      </main>\n    </Layout>\n  )\n}\n\nexport default PageTemplate\n\nPageTemplate.propTypes = {\n  data: PropTypes.object.isRequired,\n}\n\nexport const pageQuery = graphql`\n  query($path: String) {\n    markdownRemark(frontmatter: { path: { eq: $path } }) {\n      frontmatter {\n        title\n        date\n        date_pretty: date(formatString: \"MMMM Do, YYYY\")\n        date_from_now: date(fromNow: true)\n        last_modified_at\n        last_modified_at_from_now: last_modified_at(fromNow: true)\n        path\n        excerpt\n        toc\n        image {\n          childImageSharp {\n            fluid(maxWidth: 1100, quality: 75) {\n              ...GatsbyImageSharpFluid_noBase64\n            }\n            fixed(width: 1100, quality: 75) {\n              src\n              height\n              width\n            }\n          }\n        }\n      }\n      id\n      html\n      excerpt\n    }\n  }\n`\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport style from '../styles/document.module.css'\n\nconst _ = require('lodash-addons')\n\nconst Document = ({\n  title,\n  authors,\n  hideMeta,\n  datePublished,\n  dateModified,\n  dateFromNow,\n  dateModifiedFromNow,\n  image,\n  author,\n  timeToRead,\n  toc,\n  tableOfContents,\n  tags,\n  html,\n}) => {\n  return (\n    <article className={`${style.document} h-entry`}>\n      <div className={style.title}>\n        <h1 className={`${style.heading} p-name`}>{title}</h1>\n        <div className={style.meta}>\n          {authors ? (\n            <div className={style.authors}>\n              {authors.map(author => (\n                <Link\n                  className={style.author}\n                  to={`/author/${_.slugify(author.id)}/`}\n                  key={_.slugify(author.id)}\n                >\n                  <span>{author.name}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null}\n          <div style={{ display: hideMeta && `none` }}>\n            <span>\n              {author && (\n                <>\n                  {dateModified ? `Updated` : `Published`}{' '}\n                  <span style={{ display: 'none' }}>\n                    by{' '}\n                    <a className=\"p-author h-card\" href={author.url}>\n                      {author.name}\n                    </a>\n                  </span>\n                </>\n              )}\n              {datePublished && (\n                <span style={{ display: dateModified && `none` }}>\n                  {' '}\n                  <time className=\"dt-published\" dateTime={datePublished}>\n                    {dateFromNow}\n                  </time>\n                </span>\n              )}\n              {dateModified && (\n                <>\n                  {' '}\n                  <time className=\"dt-updated\" dateTime={dateModified}>\n                    {dateModifiedFromNow}\n                  </time>\n                </>\n              )}\n            </span>\n            {timeToRead && (\n              <>\n                {' '}\n                <span className={style.readTime}>\n                  {timeToRead}&nbsp;min&nbsp;read\n                </span>\n              </>\n            )}\n          </div>\n          {tags ? (\n            <div className={style.tags}>\n              {tags.map(tag => (\n                <Link\n                  className={style.tag}\n                  to={`/tag/${_.slugify(tag)}/`}\n                  key={_.slugify(tag)}\n                >\n                  <span>#{tag}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null}\n        </div>\n      </div>\n\n      {image && (\n        <Img\n          fluid={image.childImageSharp.fluid}\n          className={style.cover}\n          backgroundColor=\"var(--input-background-color)\"\n        />\n      )}\n\n      {toc && (\n        <details className={style.tocWrap}>\n          <summary className={style.tocTitle}>Table of contents</summary>\n          <div\n            className={style.toc}\n            dangerouslySetInnerHTML={{ __html: tableOfContents }}\n          />\n        </details>\n      )}\n\n      <div\n        className={`${style.content} e-content`}\n        dangerouslySetInnerHTML={{ __html: html }}\n      />\n    </article>\n  )\n}\n\nDocument.propTypes = {\n  title: PropTypes.string,\n  authors: PropTypes.array,\n  hideMeta: PropTypes.bool,\n  datePublished: PropTypes.string,\n  dateFromNow: PropTypes.string,\n  dateModified: PropTypes.string,\n  dateModifiedFromNow: PropTypes.string,\n  image: PropTypes.object,\n  author: PropTypes.object,\n  timeToRead: PropTypes.number,\n  toc: PropTypes.bool,\n  tableOfContents: PropTypes.string,\n  html: PropTypes.string,\n  tags: PropTypes.array,\n}\n\nexport default Document\n"],"sourceRoot":""}