{"version":3,"sources":["webpack:///./src/styles/entry.module.css","webpack:///./src/components/pagination.js","webpack:///./src/styles/archive.module.css","webpack:///./src/styles/pagination.module.css","webpack:///./src/templates/categories.js","webpack:///./src/components/entry.js"],"names":["module","exports","Pagination","nextPath","previousPath","nextLabel","previousLabel","className","style","pagination","to","rel","item","iconPrev","itemText","itemRight","iconNext","_","require","postsQuery","Categories","propName","data","pageContext","nextPagePath","previousPagePath","humanPageNumber","numberOfPages","category","siteAuthor","site","siteMetadata","author","taxonomyYaml","taxonomyName","name","taxonomyExcerpt","excerpt","taxonomyHtml","html","allMarkdownRemark","group","posts","edges","paginationTitle","metaImage","image","title","path","slugify","description","id","main","heading","intro","dangerouslySetInnerHTML","__html","content","subHeading","columnList","marginBottom","sort","a","b","toLowerCase","map","tag","key","fieldValue","count","totalCount","list","node","autoExcerpt","timeToRead","frontmatter","date","date_pretty","datePretty","Entry","authors","tags","entry","meta","dateTime","readTime","fluid","childImageSharp","cover","backgroundColor"],"mappings":"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","file":"component---src-templates-categories-js-37703ef0ec876bfd29a0.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"entry\":\"entry-module--entry--22LZB\",\"title\":\"entry-module--title--3Yzff\",\"meta\":\"entry-module--meta--13AY1\",\"tags\":\"entry-module--tags--HhaLq\",\"tag\":\"entry-module--tag--2sjmD\",\"authors\":\"entry-module--authors--2hatv\",\"author\":\"entry-module--author--2GKFw\",\"excerpt\":\"entry-module--excerpt--1Jg-M\",\"cover\":\"entry-module--cover--uvbo5\",\"grain\":\"entry-module--grain--QUP2_\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\n\nimport style from '../styles/pagination.module.css'\n\nconst Pagination = ({ nextPath, previousPath, nextLabel, previousLabel }) =>\n  previousPath || nextPath ? (\n    <nav className={style.pagination}>\n      {previousPath ? (\n        <Link to={previousPath} rel=\"prev\" className={style.item}>\n          <span className={style.iconPrev}>←</span>\n          <span className={style.itemText}>{previousLabel}</span>\n        </Link>\n      ) : (\n        <div className={style.item} />\n      )}\n      {nextPath ? (\n        <Link\n          to={nextPath}\n          rel=\"next\"\n          className={`${style.item} ${style.itemRight}`}\n        >\n          <span className={style.itemText}>{nextLabel}</span>\n          <span className={style.iconNext}>→</span>\n        </Link>\n      ) : (\n        <div className={style.item} />\n      )}\n    </nav>\n  ) : null\n\nPagination.propTypes = {\n  nextPath: PropTypes.string,\n  previousPath: PropTypes.string,\n  nextLabel: PropTypes.string,\n  previousLabel: PropTypes.string,\n}\n\nexport default Pagination\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"icon\":\"archive-module--icon--89JmZ\",\"spin\":\"archive-module--spin--14aNj\",\"logo\":\"archive-module--logo--3c8aR\",\"title\":\"archive-module--title--3ZGBp\",\"cover\":\"archive-module--cover--2sv0o\",\"heading\":\"archive-module--heading--GjChR\",\"subHeading\":\"archive-module--subHeading--3rgl2\",\"intro\":\"archive-module--intro--2EflT\",\"grain\":\"archive-module--grain--5gDu8\",\"content\":\"archive-module--content--2dCC9\",\"navList\":\"archive-module--navList--3yIMk\",\"list\":\"archive-module--list--W5ZBJ\",\"gridList\":\"archive-module--gridList--2iz3T\",\"gridListExpanded\":\"archive-module--gridListExpanded--1L2X2\",\"columnList\":\"archive-module--columnList--3dK8g\",\"count\":\"archive-module--count--RREhZ\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pagination\":\"pagination-module--pagination--5u0we\",\"item\":\"pagination-module--item--2FbSP\",\"itemText\":\"pagination-module--itemText--q_ljE\",\"itemRight\":\"pagination-module--itemRight--2XC01\",\"itemLabel\":\"pagination-module--itemLabel--1yC7K\",\"iconNext\":\"pagination-module--iconNext--2kIia\",\"iconPrev\":\"pagination-module--iconPrev--1xG44\",\"customMedia\":{},\"customProperties\":{},\"customSelectors\":{}};","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { graphql, Link } from 'gatsby'\nimport SEO from '../components/seo'\nimport Layout from '../components/layout'\nimport Entry from '../components/entry'\nimport Pagination from '../components/pagination'\n\nimport site from '../../config/site'\n\nimport style from '../styles/archive.module.css'\n\nconst _ = require('lodash-addons')\n\nconst Categories = ({\n  data,\n  pageContext: {\n    nextPagePath,\n    previousPagePath,\n    humanPageNumber,\n    numberOfPages,\n    category,\n  },\n}) => {\n  const {\n    site: {\n      siteMetadata: { author: siteAuthor },\n    },\n    taxonomyYaml: {\n      name: taxonomyName,\n      excerpt: taxonomyExcerpt,\n      html: taxonomyHtml,\n    },\n    allMarkdownRemark: { group, edges: posts },\n  } = data\n  const paginationTitle =\n    humanPageNumber === 1\n      ? ''\n      : ` - Page ${humanPageNumber} of ${numberOfPages}`\n  const metaImage = site.image\n\n  // Sort object alphabetically function\n  const propComparator = (propName) => (a, b) =>\n    a[propName].toLowerCase() == b[propName].toLowerCase()\n      ? 0\n      : a[propName].toLowerCase() < b[propName].toLowerCase()\n      ? -1\n      : 1\n\n  return (\n    <Layout>\n      <SEO\n        title={`${taxonomyName}${paginationTitle} - ${site.title}`}\n        path={`/${_.slugify(category)}/`}\n        description={\n          taxonomyExcerpt || `An archive of posts related to ${taxonomyName}.`\n        }\n        metaImage={metaImage}\n      />\n      <main id=\"main\" className={style.main}>\n        <div className={style.title}>\n          <h1 className={style.heading}>\n            <span>\n              {taxonomyName} {paginationTitle}\n            </span>\n          </h1>\n          {taxonomyHtml && humanPageNumber === 1 && (\n            <div\n              className={style.intro}\n              dangerouslySetInnerHTML={{ __html: taxonomyHtml }}\n            />\n          )}\n        </div>\n        <div className={style.content}>\n          <h2 className={style.subHeading}>\n            <span>Browse by topic</span>\n          </h2>\n          <div className={style.columnList} style={{ marginBottom: '3rem' }}>\n            <ul>\n              {group.sort(propComparator(`fieldValue`)).map((tag) => (\n                <li key={tag.fieldValue}>\n                  <Link to={`/tag/${_.slugify(tag.fieldValue)}/`}>\n                    <strong>{tag.fieldValue}</strong>{' '}\n                    <span className={style.count}>{tag.totalCount}</span>\n                  </Link>\n                </li>\n              ))}\n            </ul>\n          </div>\n          <div className={style.list}>\n            {posts.map(({ node }) => {\n              const {\n                id,\n                excerpt: autoExcerpt,\n                timeToRead,\n                frontmatter: {\n                  title,\n                  date,\n                  date_pretty,\n                  path,\n                  author,\n                  image,\n                  excerpt,\n                },\n              } = node\n\n              return (\n                <Entry\n                  key={id}\n                  title={title}\n                  date={date}\n                  datePretty={date_pretty}\n                  path={path}\n                  author={author || siteAuthor}\n                  timeToRead={timeToRead}\n                  image={image}\n                  excerpt={excerpt || autoExcerpt}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </main>\n      <Pagination\n        previousPath={previousPagePath}\n        previousLabel=\"Newer posts\"\n        nextPath={nextPagePath}\n        nextLabel=\"Older posts\"\n      />\n    </Layout>\n  )\n}\n\nCategories.propTypes = {\n  data: PropTypes.object.isRequired,\n  pageContext: PropTypes.shape({\n    category: PropTypes.string,\n    nextPagePath: PropTypes.string,\n    previousPagePath: PropTypes.string,\n    humanPageNumber: PropTypes.number,\n    numberOfPages: PropTypes.number,\n  }),\n}\n\nexport const postsQuery = graphql`\n  query($limit: Int!, $skip: Int!, $category: String!) {\n    site {\n      siteMetadata {\n        author {\n          name\n          url\n        }\n      }\n    }\n    taxonomyYaml(id: { eq: $category }) {\n      id\n      name\n      excerpt\n      html\n    }\n    allMarkdownRemark(\n      filter: {\n        frontmatter: {\n          categories: { in: [$category] }\n          published: { ne: false }\n        }\n      }\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      group(field: frontmatter___tags) {\n        fieldValue\n        totalCount\n      }\n      edges {\n        node {\n          id\n          excerpt(format: HTML)\n          timeToRead\n          frontmatter {\n            title\n            date\n            date_pretty: date(formatString: \"MMMM Do, YYYY\")\n            date_from_now: date(fromNow: true)\n            path\n            author\n            excerpt\n            categories\n            image {\n              childImageSharp {\n                fluid(maxWidth: 760, quality: 75) {\n                  ...GatsbyImageSharpFluid_noBase64\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n\nexport default Categories\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { Link } from 'gatsby'\nimport Img from 'gatsby-image'\n\nimport style from '../styles/entry.module.css'\n\nconst _ = require('lodash-addons')\n\nconst Entry = ({\n  title,\n  authors,\n  date,\n  datePretty,\n  path,\n  image,\n  author,\n  timeToRead,\n  excerpt,\n  tags,\n}) => {\n  return (\n    <>\n      <article className={`${style.entry} h-entry`}>\n        <h2 className={`${style.title} p-name`}>\n          <Link to={path}>{title}</Link>\n        </h2>\n        <div className={style.meta}>\n          {/* {authors ? (\n            <div className={style.authors}>\n              {authors.map(author => (\n                <Link\n                  className={style.author}\n                  to={`/author/${_.slugify(author.id)}/`}\n                  key={_.slugify(author.id)}\n                >\n                  <span>{author.name}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null } */}\n          {date && (\n            <>\n              {' '}\n              <time className={`${style.date} dt-published`} dateTime={date}>\n                {datePretty}\n              </time>\n            </>\n          )}\n          {timeToRead && (\n            <>\n              {' '}\n              <span className={style.readTime}>\n                {timeToRead}&nbsp;min&nbsp;read\n              </span>\n            </>\n          )}\n          {/* {tags ? (\n            <div className={style.tags}>\n              {tags.map(tag => (\n                <Link\n                  className={style.tag}\n                  to={`/tag/${_.slugify(tag)}/`}\n                  key={_.slugify(tag)}\n                >\n                  <span>#{tag}</span>\n                </Link>\n              ))}\n            </div>\n          ) : null} */}\n        </div>\n\n        {image && (\n          <Img\n            fluid={image.childImageSharp.fluid}\n            className={style.cover}\n            backgroundColor=\"var(--input-background-color)\"\n          />\n        )}\n\n        <div\n          className={`${style.excerpt} p-summary`}\n          dangerouslySetInnerHTML={{ __html: excerpt }}\n        />\n      </article>\n    </>\n  )\n}\n\nEntry.propTypes = {\n  title: PropTypes.string,\n  authors: PropTypes.array,\n  date: PropTypes.string,\n  datePretty: PropTypes.string,\n  path: PropTypes.string,\n  image: PropTypes.object,\n  author: PropTypes.object,\n  timeToRead: PropTypes.number,\n  excerpt: PropTypes.string,\n  tags: PropTypes.array,\n}\n\nexport default Entry\n"],"sourceRoot":""}